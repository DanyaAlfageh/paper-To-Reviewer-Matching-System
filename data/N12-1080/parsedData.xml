<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000268">
<affiliation confidence="0.1055">
b&amp;apos;2012 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, pages 631635,
</affiliation>
<address confidence="0.313668">
Montreal, Canada, June 3-8, 2012. c
</address>
<title confidence="0.6681095">
2012 Association for Computational Linguistics
Summarization of Historical Articles Using Temporal Event Clustering
</title>
<author confidence="0.963259">
James Gung
</author>
<affiliation confidence="0.997139">
Department of Computer Science
Miami University
</affiliation>
<address confidence="0.934768">
Oxford, Ohio 45056
</address>
<email confidence="0.994986">
gungjm@muohio.edu
</email>
<author confidence="0.871826">
Jugal Kalita
</author>
<affiliation confidence="0.9938075">
Department of Computer Science
University of Colorado
</affiliation>
<address confidence="0.878836">
Colorado Springs CO 80920
</address>
<email confidence="0.997567">
jkalita@uccs.edu
</email>
<sectionHeader confidence="0.990811" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.99223">
In this paper, we investigate the use of tempo-
ral information for improving extractive sum-
marization of historical articles. Our method
clusters sentences based on their timestamps
and temporal similarity. Each resulting clus-
ter is assigned an importance score which
can then be used as a weight in traditional
sentence ranking techniques. Temporal im-
portance weighting offers consistent improve-
ments over baseline systems.
</bodyText>
<sectionHeader confidence="0.997341" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.993178115384615">
Extensive research has gone into determining
which features of text documents are useful for cal-
culating the importance of sentences for extractive
summarization, as well as how to use these features
(Gupta and Lehal, 2010). Little work, however, has
considered the importance of temporal information
towards single document summarization. This is
likely because many text documents have very few
explicit time features and do not necessarily describe
topics in chronological order.
Historical articles, such as Wikipedia articles de-
scribing wars, battles, or other major events, tend to
contain many explicit time features. Historical arti-
cles also tend to describe events in chronological or-
der. In addition, historical articles tend to focus on a
single central event. The importance of other events
can then be judged by their temporal distance from
this central event. Finally, important events in an ar-
ticle will be described in greater detail, employing
more sentences than less important events.
This paper investigates the value of a temporal-
based score towards automatic summarization,
specifically focusing on historical articles. We in-
vestigate whether or not such a score can be used as
a weight in traditional sentence ranking techniques
to improve summarization quality.
</bodyText>
<sectionHeader confidence="0.999594" genericHeader="related work">
2 Related Work
</sectionHeader>
<bodyText confidence="0.998905810810811">
Event-based summarization is a recent approach
to summary generation. (Filatova and Hatzivas-
siloglou, 2004) introduced atomic events, which are
named entities connected by a relation such as a verb
or action noun. Events are selected for summary by
applying a maximum coverage algorithm to mini-
mize redundancy while maintaining coverage of the
major concepts of the document. (Vanderwende et
al., 2004) identify events as triples consisting of two
nodes and a relation. PageRank is then used to de-
termine the relative importance of these triples rep-
resented in a graph. Sentence generation techniques
are applied towards summarization.
Limited work has explored the use of temporal
information for summarization. (Lim et al., 2005)
use the explicit time information in the context of
multi-document summarization for sentence extrac-
tion and detection of redundant sentences, ordering
input documents by time. They observe that impor-
tant sentences tend to occur in in time slots contain-
ing more documents and time slots occurring at the
end and beginning of the documents set. They se-
lect topic sentences for each time slot, giving higher
weights based on the above observation.
(Wu et al., 2007) extract event elements, the ar-
guments in an event, and event terms, the actions.
Each event is placed on a timeline divided into in-
tervals consistent with the timespan of the article.
Each element and event term receives a weight cor-
responding to the total number of elements and event
terms located in each time interval the event element
or term occupies. Each sentence is scored by the to-
tal weight of event elements and terms it contains.
Clustering of events based on time has also re-
ceived little attention. (Foote and Cooper, 2003) in-
vestigate clustering towards organizing timestamped
digital photographs. They present a method that first
</bodyText>
<page confidence="0.996451">
631
</page>
<bodyText confidence="0.998073571428571">
\x0ccalculates the temporal similarity between all pairs
of photographs at multiple time scales. These values
are stored in a chronologically ordered matrix. Clus-
ter boundaries are determined by calculating novelty
scores for each set of similarity matrices. These are
used to form the final clusters. We adopt this clus-
tering method for clustering timestamped sentences.
</bodyText>
<sectionHeader confidence="0.996733" genericHeader="method">
3 Approach
</sectionHeader>
<bodyText confidence="0.999888">
The goal of our method is to give each sentence
in an article a temporal importance score that can
be used as a weight in traditional sentence ranking
techniques. To do this, we need to gain an idea
of the temporal structure of events in an article. A
score must then be assigned to each group corre-
sponding to the importance of the groups timespan
to the article as a whole. Each sentence in a partic-
ular group will be assigned the same temporal im-
portance score, necessitating the use of a sentence
ranking technique to find a complete summary.
</bodyText>
<subsectionHeader confidence="0.998746">
3.1 Temporal Information Extraction
</subsectionHeader>
<bodyText confidence="0.999407230769231">
We use Heideltime, a rule-based system that
uses sets of regular expressions, to extract explicit
time expressions in the article and normalize them
(Strotgen and Gertz, 2010). Events that occur be-
tween each Heideltime-extracted timestamp are as-
signed timestamps consisting of when the prior
timestamp ends and the subsequent timestamp be-
gins. The approach is naive and is described in
(Chasin et al., 2011). This method of temporal ex-
traction is not reliable, but serves the purposes of
testing as a reasonable baseline for temporal extrac-
tion systems. As the precision increases, the perfor-
mance of our system should also improve.
</bodyText>
<subsectionHeader confidence="0.999637">
3.2 Temporal Clustering
</subsectionHeader>
<bodyText confidence="0.911311666666667">
To cluster sentences into temporally-related
groups, we adopt a clustering method proposed by
Foote et al. to group digital photograph collections.
Inter-sentence similarity is calculated between ev-
ery pair of sentences using Equation (1).
SK(i, j) = exp
</bodyText>
<equation confidence="0.9946834">
\x12
|ti tj|
K
\x13
(1)
</equation>
<bodyText confidence="0.99463575">
The similarity measure is based inversely on the
distance between the central time of the sentences.
Similarity scores are calculated at varying granular-
ities. If the article focuses on a central event that
</bodyText>
<figureCaption confidence="0.887092">
Figure 1: Similarity matrices at varying k displayed as
</figureCaption>
<bodyText confidence="0.995188853658537">
heat maps, darker representing more similar entries
occurs over only a few hours, such as the assassi-
nation of John F. Kennedy, the best clustering will
generally be found from similarities calculated us-
ing a smaller time granularity. Conversely, articles
with central events spanning several years, such as
the American Civil War, will be clustered using sim-
ilarities calculated at larger time granularities.
The similarities are placed in a matrix and orga-
nized chronologically in order of event occurrence
time. In this matrix, entries close to the diagonal
are among the most similar and the actual diagonal
entries are maximally similar (diagonal entries cor-
respond to similarities between the same sentences).
To identify temporal event boundaries, (Foote and
Cooper, 2003) calculate novelty scores. A checker-
board kernel in which diagonal regions contain all
positive weights and off-diagonal regions contain all
negative weights is correlated along the diagonal of
the similarity matrix. The weights of each entry in
the kernel are calculated from a Gaussian function
such that the most central entries have the highest (or
lowest in the off-diagonal regions) values. The result
is maximized when the kernel is located on tempo-
ral event boundaries. In relatively uniform regions,
the positive and negative weights cancel each other
out, resulting in small novelty scores. Where there
is a gap in similarity, presumably at an event bound-
ary, off diagonal squares are dissimilar, increasing
the novelty score. In calculating novelty scores with
each set of similarity scores, we obtain a hierarchi-
cal set of boundaries. With each time granularity, we
have a potential clustering option.
In order to choose the best clustering, we calcu-
late a confidence score C for each boundary set,
then choose the clustering with the highest score, as
suggested in (Foote and Cooper, 2003). This score
is the sum of intercluster similarities (IntraS) be-
tween adjacent clusters subtracted from the sum of
intracluster (InterS) similarities as seen in Equa-
tion (4). A high confidence score suggests low inter-
</bodyText>
<page confidence="0.974203">
632
</page>
<bodyText confidence="0.676691">
\x0ccluster similarity and high intracluster similarity.
</bodyText>
<equation confidence="0.9433785">
IntraS(BK )S =
|Bk|1
X
l=1
bl+1
X
i,j=bl
SK (i, j)
(bl+1 bl)2
(2)
InterS(BK )S =
|Bk|2
X
l=1
bl+1
X
i=bl
bl+2
X
j=bl+1
SK (i, j)
(bl+1 bl)(bl+2 bl+1)
(3)
CS(BK ) = IntraS(BK )S InterSBK )S (4)
</equation>
<subsectionHeader confidence="0.997699">
3.3 Estimating Clustering Paramaters
</subsectionHeader>
<bodyText confidence="0.996440071428571">
Historical articles describing wars generally have
much larger timespans than articles describing bat-
tles. Looking at battles at a broad time granularity
applicable to wars may not produce a meaningful
clustering. Thus, we should estimate the temporal
structure of each article before clustering. The time
granularity for each clustering is controlled by the
k parameter in the similarity function between sen-
tences. To find multiple clusterings, we start at a
base k, then increment k by a multiplier for each new
clustering. We calculate the base k using the stan-
dard deviation for event times in the article. Mea-
suring the spread of events in the article gives us an
estimate of what time scale we should use.
</bodyText>
<subsectionHeader confidence="0.998891">
3.4 Calculating Temporal Importance
</subsectionHeader>
<bodyText confidence="0.9987552">
We use three novel metrics to calculate the impor-
tance of a cluster towards a summary. The first met-
ric is based on the size of the cluster (Eqn 5). This
is motivated by the assumption that more important
events will be described in greater detail, thus pro-
ducing larger clusters. The second metric (Eqn 6) is
based on the distance from the clusters centroid to
the centroid of the largest cluster, corresponding to
the central event of the article. This metric is moti-
vated by the assumption that historical articles have
a central event which is described in the greatest de-
tail. The third metric is based on the spread of the
cluster (Eqn 7). Clusters with large spreads are un-
likely to pertain to the same event, and should there-
fore be penalized.
</bodyText>
<equation confidence="0.9994638125">
Size(Ci) =
|Ci|
|Cmax|
(5)
Sim(Ci) = exp
\x12
|tCiCentroid tMaxClusterCentroid|
m
\x13
(6)
Spread(Ci) = exp
\x12
Ci
n (tmax tmin)
\x13
(7)
</equation>
<bodyText confidence="0.999234222222222">
The parameters m and n serve to weight the impor-
tance of these measures and are assigned based on
the spread of events in an article. For n, we used the
standard deviation of event times in the article. For
m, we used the cluster similarity score from Equa-
tion (4). The three measures work in tandem to en-
sure that the importance measure will be valid even
if the largest cluster does not correspond to the cen-
tral event of the article.
</bodyText>
<subsectionHeader confidence="0.935579">
3.5 Final Sentence Ranking
</subsectionHeader>
<bodyText confidence="0.9998708">
Each sentence is assigned a temporal importance
weight equal to the importance score of the clus-
ter to which it belongs. To find a complete ranking
of the sentences, we apply a sentence ranking tech-
nique. Any automatic summarization technique that
ranks its sentences with numerical scores can poten-
tially be augmented with our temporal importance
weight. We multiply the base scores from the rank-
ing by the associated temporal importance weights
for each sentence to find the final ranking.
</bodyText>
<equation confidence="0.97014525">
WS(Vi) = (1 d) (8)
+d
X
VjIn(Vi)
wj,i
P
vkOut(Vj) wj,k
WS(Vj)
</equation>
<bodyText confidence="0.8980695">
Like several graph-based methods for sentence rank-
ing for summarization (e.g., (Erkan and Radev,
2004)), we use Googles PageRank algorithm
(Equation 8) with a damping factor d of 0.85.
</bodyText>
<equation confidence="0.426504">
Similarity(Si, Sj) =
|{wk|wk Si&amp;wk Sj}|
log(|Si|) + log(|Sj|)
(9)
</equation>
<bodyText confidence="0.994527375">
We use TextRank (Mihalcea and Tarau, 2004) in
our experiments. Our similarity measure is calcu-
lated using the number of shared named entities and
nouns between sentences as seen in equation 9. For
identification of named entities, we use Stanford
NER (Finkel et al., 2005). It is straightforward to
weight the resulting TextRank scores for each sen-
tence using their clusters temporal importance.
</bodyText>
<sectionHeader confidence="0.998029" genericHeader="method">
4 Experimental Results
</sectionHeader>
<bodyText confidence="0.999704">
We test on a set of 13 Wikipedia articles describ-
ing historical battles. The average article length is
189 sentences and 4,367 words. The longest ar-
ticle is 545 sentences and contains 11,563 words.
The shortest article is 51 sentences and contains
</bodyText>
<page confidence="0.994762">
633
</page>
<bodyText confidence="0.9962352">
\x0c1,476 words. Each article has at least two human-
annotated gold standard summaries. Volunteers
were asked to choose the most important sentences
from each article. We evaluate using ROUGE-2 bi-
gram matching (Lin, 2004).
</bodyText>
<subsectionHeader confidence="0.998901">
4.1 Clustering
</subsectionHeader>
<bodyText confidence="0.99867">
Each Wikipedia article contains a topic sentence
stating the timespan of the main event in the article.
This provides an easy way to determine whether a
clustering is successful. If the largest cluster con-
tains the timespan of the main event described by
the topic sentence, we consider the clustering to be
successful. The articles vary greatly in length. Also,
the ratio of sentences with time features to sentences
without is considerably varied. In 92% of the arti-
cles, there were successful clusterings. An exam-
ple of an article that didnt cluster is Nickel Grass,
where the main event was divided into two clusters.
It is of interest to note that this article had one of
lowest time feature to sentence ratios, which possi-
bly explains the poor clustering.
</bodyText>
<subsectionHeader confidence="0.984191">
4.2 Temporal Importance Weighting
</subsectionHeader>
<bodyText confidence="0.99972516">
We test our TextRank implementation with and
without temporal importance weighting.
We observe improvements in general using the
TextRank system with temporal importance weight-
ing. The ROUGE-2 score increased by 15.72%
across all the articles. The lowest increase was
0% and the highest was 128.86%. The average
ROUGE-2 scores were 0.2575 weighted and 0.2362
unweighted, a statistically significant increase with
a 95% confidence interval of 0.0066 to 0.0360.
In particular, we see significant improvements
in articles that contain sentences TextRank ranked
highly but have events occurring at significantly dif-
ferent times than the central event of the article. Al-
though the content of these sentences is highly re-
lated to the rest of the article, they should not be
included in the summary since their events happen
nowhere near the main event temporally.
Our random ranking system, which randomly
assigns base importance scores to each sentence,
observed only small improvements, of 4.27% on
average, when augmented with temporal impor-
tance weighting. It is likely that additional human-
annotated summaries are necessary for conclusive
results.
</bodyText>
<sectionHeader confidence="0.997164" genericHeader="conclusions">
5 Conclusions and Future Work
</sectionHeader>
<bodyText confidence="0.999928352941176">
The novelty-based clustering method worked ex-
tremely well for our purposes. These results can
likely be improved upon using more advanced tem-
poral extraction and interpolation methods, since we
used a naive method for interpolating between time
features prone to error. The temporal importance
weighting worked very well with TextRank and rea-
sonably well with random ranking.
It may also be fairly easy to predict the success of
using this temporal weight a priori to summarization
of an article. A small ratio of explicit time features to
sentences (less than 0.15) indicates that the temporal
interpolation process may not be very accurate. The
linearity of time features is also a good indication
of the success of temporal extraction. Finally, the
spread of time features in an article is a clue to the
success of our weighting method.
</bodyText>
<sectionHeader confidence="0.961338" genericHeader="acknowledgments">
Acknowledgements
</sectionHeader>
<bodyText confidence="0.9838465">
Research reported here has been funded partially
by NSF grants CNS-0958576 and CNS-0851783.
</bodyText>
<sectionHeader confidence="0.987179" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.996587">
R. Chasin, D. Woodward, and J. Kalita, 2011. Machine
Intelligence: Recent Advances, chapter Extracting and
Displaying Temporal Entities from Historical Articles.
Narosa Publishing, Delhi.
G. Erkan and D.R. Radev. 2004. Lexrank: Graph-based
lexical centrality as salience in text summarization. J.
Artif. Intell. Res., 22:457479.
E. Filatova and V. Hatzivassiloglou. 2004. Event-based
extractive summarization. In ACL Workshop on Sum-
marization.
J.R. Finkel, T. Grenager, and C. Manning. 2005. In-
corporating non-local information into information ex-
traction systems by gibbs sampling. In ACL, pages
363370.
J. Foote and M. Cooper. 2003. Media segmentation us-
ing self-similarity decomposition. In SPIE, volume
5021, pages 167175.
V. Gupta and G.S. Lehal. 2010. A survey of text sum-
marization extractive techniques. Journal of Emerging
Technologies in Web Intelligence, 2(3):258268.
J.M. Lim, I.S. Kang, J.H. Bae, and J.H. Lee. 2005. Sen-
tence extraction using time features in multi-document
summarization. Information Retrieval Technology,
pages 8293.
</reference>
<page confidence="0.983003">
634
</page>
<reference confidence="0.997856125">
\x0cC.Y. Lin. 2004. Rouge: A package for automatic evalu-
ation of summaries. In Workshop on text summariza-
tion, pages 2526.
R. Mihalcea and P. Tarau. 2004. Textrank: Bringing
order into texts. In EMNLP, pages 404411.
J. Strotgen and M. Gertz. 2010. Heideltime: High qual-
ity rule-based extraction and normalization of tempo-
ral expressions. In 5th International Workshop on Se-
mantic Evaluation, pages 321324.
L. Vanderwende, M. Banko, and A. Menezes. 2004.
Event-centric summary generation. Working notes of
DUC.
M. Wu, W. Li, Q. Lu, and K.F. Wong. 2007. Event-
based summarization using time features. Compu-
tational Linguistics and Intelligent Text Processing,
pages 563574.
</reference>
<page confidence="0.978073">
635
</page>
<figure confidence="0.252688">
\x0c&amp;apos;
</figure>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.684560">
<note confidence="0.869249666666667">b&amp;apos;2012 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, pages 631635, Montreal, Canada, June 3-8, 2012. c 2012 Association for Computational Linguistics</note>
<title confidence="0.977558">Summarization of Historical Articles Using Temporal Event Clustering</title>
<author confidence="0.999909">James Gung</author>
<affiliation confidence="0.9999045">Department of Computer Science Miami University</affiliation>
<address confidence="0.999607">Oxford, Ohio 45056</address>
<email confidence="0.999781">gungjm@muohio.edu</email>
<author confidence="0.963504">Jugal Kalita</author>
<affiliation confidence="0.9999845">Department of Computer Science University of Colorado</affiliation>
<address confidence="0.998417">Colorado Springs CO 80920</address>
<email confidence="0.999664">jkalita@uccs.edu</email>
<abstract confidence="0.997440181818182">In this paper, we investigate the use of temporal information for improving extractive summarization of historical articles. Our method clusters sentences based on their timestamps and temporal similarity. Each resulting cluster is assigned an importance score which can then be used as a weight in traditional sentence ranking techniques. Temporal importance weighting offers consistent improvements over baseline systems.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>R Chasin</author>
<author>D Woodward</author>
<author>J Kalita</author>
</authors>
<title>Machine Intelligence: Recent Advances, chapter Extracting and Displaying Temporal Entities from Historical Articles.</title>
<date>2011</date>
<publisher>Narosa Publishing,</publisher>
<location>Delhi.</location>
<contexts>
<context position="5468" citStr="Chasin et al., 2011" startWordPosition="845" endWordPosition="848">hole. Each sentence in a particular group will be assigned the same temporal importance score, necessitating the use of a sentence ranking technique to find a complete summary. 3.1 Temporal Information Extraction We use Heideltime, a rule-based system that uses sets of regular expressions, to extract explicit time expressions in the article and normalize them (Strotgen and Gertz, 2010). Events that occur between each Heideltime-extracted timestamp are assigned timestamps consisting of when the prior timestamp ends and the subsequent timestamp begins. The approach is naive and is described in (Chasin et al., 2011). This method of temporal extraction is not reliable, but serves the purposes of testing as a reasonable baseline for temporal extraction systems. As the precision increases, the performance of our system should also improve. 3.2 Temporal Clustering To cluster sentences into temporally-related groups, we adopt a clustering method proposed by Foote et al. to group digital photograph collections. Inter-sentence similarity is calculated between every pair of sentences using Equation (1). SK(i, j) = exp \x12 |ti tj| K \x13 (1) The similarity measure is based inversely on the distance between the c</context>
</contexts>
<marker>Chasin, Woodward, Kalita, 2011</marker>
<rawString>R. Chasin, D. Woodward, and J. Kalita, 2011. Machine Intelligence: Recent Advances, chapter Extracting and Displaying Temporal Entities from Historical Articles. Narosa Publishing, Delhi.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Erkan</author>
<author>D R Radev</author>
</authors>
<title>Lexrank: Graph-based lexical centrality as salience in text summarization.</title>
<date>2004</date>
<journal>J. Artif. Intell. Res.,</journal>
<pages>22--457479</pages>
<contexts>
<context position="11409" citStr="Erkan and Radev, 2004" startWordPosition="1830" endWordPosition="1833">al importance weight equal to the importance score of the cluster to which it belongs. To find a complete ranking of the sentences, we apply a sentence ranking technique. Any automatic summarization technique that ranks its sentences with numerical scores can potentially be augmented with our temporal importance weight. We multiply the base scores from the ranking by the associated temporal importance weights for each sentence to find the final ranking. WS(Vi) = (1 d) (8) +d X VjIn(Vi) wj,i P vkOut(Vj) wj,k WS(Vj) Like several graph-based methods for sentence ranking for summarization (e.g., (Erkan and Radev, 2004)), we use Googles PageRank algorithm (Equation 8) with a damping factor d of 0.85. Similarity(Si, Sj) = |{wk|wk Si&amp;wk Sj}| log(|Si|) + log(|Sj|) (9) We use TextRank (Mihalcea and Tarau, 2004) in our experiments. Our similarity measure is calculated using the number of shared named entities and nouns between sentences as seen in equation 9. For identification of named entities, we use Stanford NER (Finkel et al., 2005). It is straightforward to weight the resulting TextRank scores for each sentence using their clusters temporal importance. 4 Experimental Results We test on a set of 13 Wikipedia</context>
</contexts>
<marker>Erkan, Radev, 2004</marker>
<rawString>G. Erkan and D.R. Radev. 2004. Lexrank: Graph-based lexical centrality as salience in text summarization. J. Artif. Intell. Res., 22:457479.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E Filatova</author>
<author>V Hatzivassiloglou</author>
</authors>
<title>Event-based extractive summarization.</title>
<date>2004</date>
<booktitle>In ACL Workshop on Summarization.</booktitle>
<contexts>
<context position="2355" citStr="Filatova and Hatzivassiloglou, 2004" startWordPosition="336" endWordPosition="340">The importance of other events can then be judged by their temporal distance from this central event. Finally, important events in an article will be described in greater detail, employing more sentences than less important events. This paper investigates the value of a temporalbased score towards automatic summarization, specifically focusing on historical articles. We investigate whether or not such a score can be used as a weight in traditional sentence ranking techniques to improve summarization quality. 2 Related Work Event-based summarization is a recent approach to summary generation. (Filatova and Hatzivassiloglou, 2004) introduced atomic events, which are named entities connected by a relation such as a verb or action noun. Events are selected for summary by applying a maximum coverage algorithm to minimize redundancy while maintaining coverage of the major concepts of the document. (Vanderwende et al., 2004) identify events as triples consisting of two nodes and a relation. PageRank is then used to determine the relative importance of these triples represented in a graph. Sentence generation techniques are applied towards summarization. Limited work has explored the use of temporal information for summariza</context>
</contexts>
<marker>Filatova, Hatzivassiloglou, 2004</marker>
<rawString>E. Filatova and V. Hatzivassiloglou. 2004. Event-based extractive summarization. In ACL Workshop on Summarization.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J R Finkel</author>
<author>T Grenager</author>
<author>C Manning</author>
</authors>
<title>Incorporating non-local information into information extraction systems by gibbs sampling.</title>
<date>2005</date>
<booktitle>In ACL,</booktitle>
<pages>363370</pages>
<contexts>
<context position="11830" citStr="Finkel et al., 2005" startWordPosition="1899" endWordPosition="1902">entence to find the final ranking. WS(Vi) = (1 d) (8) +d X VjIn(Vi) wj,i P vkOut(Vj) wj,k WS(Vj) Like several graph-based methods for sentence ranking for summarization (e.g., (Erkan and Radev, 2004)), we use Googles PageRank algorithm (Equation 8) with a damping factor d of 0.85. Similarity(Si, Sj) = |{wk|wk Si&amp;wk Sj}| log(|Si|) + log(|Sj|) (9) We use TextRank (Mihalcea and Tarau, 2004) in our experiments. Our similarity measure is calculated using the number of shared named entities and nouns between sentences as seen in equation 9. For identification of named entities, we use Stanford NER (Finkel et al., 2005). It is straightforward to weight the resulting TextRank scores for each sentence using their clusters temporal importance. 4 Experimental Results We test on a set of 13 Wikipedia articles describing historical battles. The average article length is 189 sentences and 4,367 words. The longest article is 545 sentences and contains 11,563 words. The shortest article is 51 sentences and contains 633 \x0c1,476 words. Each article has at least two humanannotated gold standard summaries. Volunteers were asked to choose the most important sentences from each article. We evaluate using ROUGE-2 bigram m</context>
</contexts>
<marker>Finkel, Grenager, Manning, 2005</marker>
<rawString>J.R. Finkel, T. Grenager, and C. Manning. 2005. Incorporating non-local information into information extraction systems by gibbs sampling. In ACL, pages 363370.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Foote</author>
<author>M Cooper</author>
</authors>
<title>Media segmentation using self-similarity decomposition.</title>
<date>2003</date>
<booktitle>In SPIE,</booktitle>
<volume>5021</volume>
<pages>167175</pages>
<contexts>
<context position="3982" citStr="Foote and Cooper, 2003" startWordPosition="605" endWordPosition="608">h time slot, giving higher weights based on the above observation. (Wu et al., 2007) extract event elements, the arguments in an event, and event terms, the actions. Each event is placed on a timeline divided into intervals consistent with the timespan of the article. Each element and event term receives a weight corresponding to the total number of elements and event terms located in each time interval the event element or term occupies. Each sentence is scored by the total weight of event elements and terms it contains. Clustering of events based on time has also received little attention. (Foote and Cooper, 2003) investigate clustering towards organizing timestamped digital photographs. They present a method that first 631 \x0ccalculates the temporal similarity between all pairs of photographs at multiple time scales. These values are stored in a chronologically ordered matrix. Cluster boundaries are determined by calculating novelty scores for each set of similarity matrices. These are used to form the final clusters. We adopt this clustering method for clustering timestamped sentences. 3 Approach The goal of our method is to give each sentence in an article a temporal importance score that can be us</context>
<context position="7039" citStr="Foote and Cooper, 2003" startWordPosition="1091" endWordPosition="1094">erally be found from similarities calculated using a smaller time granularity. Conversely, articles with central events spanning several years, such as the American Civil War, will be clustered using similarities calculated at larger time granularities. The similarities are placed in a matrix and organized chronologically in order of event occurrence time. In this matrix, entries close to the diagonal are among the most similar and the actual diagonal entries are maximally similar (diagonal entries correspond to similarities between the same sentences). To identify temporal event boundaries, (Foote and Cooper, 2003) calculate novelty scores. A checkerboard kernel in which diagonal regions contain all positive weights and off-diagonal regions contain all negative weights is correlated along the diagonal of the similarity matrix. The weights of each entry in the kernel are calculated from a Gaussian function such that the most central entries have the highest (or lowest in the off-diagonal regions) values. The result is maximized when the kernel is located on temporal event boundaries. In relatively uniform regions, the positive and negative weights cancel each other out, resulting in small novelty scores.</context>
</contexts>
<marker>Foote, Cooper, 2003</marker>
<rawString>J. Foote and M. Cooper. 2003. Media segmentation using self-similarity decomposition. In SPIE, volume 5021, pages 167175.</rawString>
</citation>
<citation valid="true">
<authors>
<author>V Gupta</author>
<author>G S Lehal</author>
</authors>
<title>A survey of text summarization extractive techniques.</title>
<date>2010</date>
<journal>Journal of Emerging Technologies in Web Intelligence,</journal>
<volume>2</volume>
<issue>3</issue>
<contexts>
<context position="1170" citStr="Gupta and Lehal, 2010" startWordPosition="160" endWordPosition="163"> temporal information for improving extractive summarization of historical articles. Our method clusters sentences based on their timestamps and temporal similarity. Each resulting cluster is assigned an importance score which can then be used as a weight in traditional sentence ranking techniques. Temporal importance weighting offers consistent improvements over baseline systems. 1 Introduction Extensive research has gone into determining which features of text documents are useful for calculating the importance of sentences for extractive summarization, as well as how to use these features (Gupta and Lehal, 2010). Little work, however, has considered the importance of temporal information towards single document summarization. This is likely because many text documents have very few explicit time features and do not necessarily describe topics in chronological order. Historical articles, such as Wikipedia articles describing wars, battles, or other major events, tend to contain many explicit time features. Historical articles also tend to describe events in chronological order. In addition, historical articles tend to focus on a single central event. The importance of other events can then be judged b</context>
</contexts>
<marker>Gupta, Lehal, 2010</marker>
<rawString>V. Gupta and G.S. Lehal. 2010. A survey of text summarization extractive techniques. Journal of Emerging Technologies in Web Intelligence, 2(3):258268.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J M Lim</author>
<author>I S Kang</author>
<author>J H Bae</author>
<author>J H Lee</author>
</authors>
<title>Sentence extraction using time features in multi-document summarization. Information Retrieval Technology,</title>
<date>2005</date>
<pages>8293</pages>
<contexts>
<context position="2979" citStr="Lim et al., 2005" startWordPosition="435" endWordPosition="438">uced atomic events, which are named entities connected by a relation such as a verb or action noun. Events are selected for summary by applying a maximum coverage algorithm to minimize redundancy while maintaining coverage of the major concepts of the document. (Vanderwende et al., 2004) identify events as triples consisting of two nodes and a relation. PageRank is then used to determine the relative importance of these triples represented in a graph. Sentence generation techniques are applied towards summarization. Limited work has explored the use of temporal information for summarization. (Lim et al., 2005) use the explicit time information in the context of multi-document summarization for sentence extraction and detection of redundant sentences, ordering input documents by time. They observe that important sentences tend to occur in in time slots containing more documents and time slots occurring at the end and beginning of the documents set. They select topic sentences for each time slot, giving higher weights based on the above observation. (Wu et al., 2007) extract event elements, the arguments in an event, and event terms, the actions. Each event is placed on a timeline divided into interv</context>
</contexts>
<marker>Lim, Kang, Bae, Lee, 2005</marker>
<rawString>J.M. Lim, I.S. Kang, J.H. Bae, and J.H. Lee. 2005. Sentence extraction using time features in multi-document summarization. Information Retrieval Technology, pages 8293.</rawString>
</citation>
<citation valid="true">
<authors>
<author>\x0cC Y Lin</author>
</authors>
<title>Rouge: A package for automatic evaluation of summaries.</title>
<date>2004</date>
<booktitle>In Workshop on text summarization,</booktitle>
<pages>2526</pages>
<contexts>
<context position="12449" citStr="Lin, 2004" startWordPosition="1999" endWordPosition="2000">traightforward to weight the resulting TextRank scores for each sentence using their clusters temporal importance. 4 Experimental Results We test on a set of 13 Wikipedia articles describing historical battles. The average article length is 189 sentences and 4,367 words. The longest article is 545 sentences and contains 11,563 words. The shortest article is 51 sentences and contains 633 \x0c1,476 words. Each article has at least two humanannotated gold standard summaries. Volunteers were asked to choose the most important sentences from each article. We evaluate using ROUGE-2 bigram matching (Lin, 2004). 4.1 Clustering Each Wikipedia article contains a topic sentence stating the timespan of the main event in the article. This provides an easy way to determine whether a clustering is successful. If the largest cluster contains the timespan of the main event described by the topic sentence, we consider the clustering to be successful. The articles vary greatly in length. Also, the ratio of sentences with time features to sentences without is considerably varied. In 92% of the articles, there were successful clusterings. An example of an article that didnt cluster is Nickel Grass, where the mai</context>
</contexts>
<marker>Lin, 2004</marker>
<rawString>\x0cC.Y. Lin. 2004. Rouge: A package for automatic evaluation of summaries. In Workshop on text summarization, pages 2526.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Mihalcea</author>
<author>P Tarau</author>
</authors>
<title>Textrank: Bringing order into texts.</title>
<date>2004</date>
<booktitle>In EMNLP,</booktitle>
<pages>404411</pages>
<contexts>
<context position="11600" citStr="Mihalcea and Tarau, 2004" startWordPosition="1861" endWordPosition="1864">marization technique that ranks its sentences with numerical scores can potentially be augmented with our temporal importance weight. We multiply the base scores from the ranking by the associated temporal importance weights for each sentence to find the final ranking. WS(Vi) = (1 d) (8) +d X VjIn(Vi) wj,i P vkOut(Vj) wj,k WS(Vj) Like several graph-based methods for sentence ranking for summarization (e.g., (Erkan and Radev, 2004)), we use Googles PageRank algorithm (Equation 8) with a damping factor d of 0.85. Similarity(Si, Sj) = |{wk|wk Si&amp;wk Sj}| log(|Si|) + log(|Sj|) (9) We use TextRank (Mihalcea and Tarau, 2004) in our experiments. Our similarity measure is calculated using the number of shared named entities and nouns between sentences as seen in equation 9. For identification of named entities, we use Stanford NER (Finkel et al., 2005). It is straightforward to weight the resulting TextRank scores for each sentence using their clusters temporal importance. 4 Experimental Results We test on a set of 13 Wikipedia articles describing historical battles. The average article length is 189 sentences and 4,367 words. The longest article is 545 sentences and contains 11,563 words. The shortest article is 5</context>
</contexts>
<marker>Mihalcea, Tarau, 2004</marker>
<rawString>R. Mihalcea and P. Tarau. 2004. Textrank: Bringing order into texts. In EMNLP, pages 404411.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Strotgen</author>
<author>M Gertz</author>
</authors>
<title>Heideltime: High quality rule-based extraction and normalization of temporal expressions.</title>
<date>2010</date>
<booktitle>In 5th International Workshop on Semantic Evaluation,</booktitle>
<pages>321324</pages>
<contexts>
<context position="5236" citStr="Strotgen and Gertz, 2010" startWordPosition="808" endWordPosition="811"> sentence ranking techniques. To do this, we need to gain an idea of the temporal structure of events in an article. A score must then be assigned to each group corresponding to the importance of the groups timespan to the article as a whole. Each sentence in a particular group will be assigned the same temporal importance score, necessitating the use of a sentence ranking technique to find a complete summary. 3.1 Temporal Information Extraction We use Heideltime, a rule-based system that uses sets of regular expressions, to extract explicit time expressions in the article and normalize them (Strotgen and Gertz, 2010). Events that occur between each Heideltime-extracted timestamp are assigned timestamps consisting of when the prior timestamp ends and the subsequent timestamp begins. The approach is naive and is described in (Chasin et al., 2011). This method of temporal extraction is not reliable, but serves the purposes of testing as a reasonable baseline for temporal extraction systems. As the precision increases, the performance of our system should also improve. 3.2 Temporal Clustering To cluster sentences into temporally-related groups, we adopt a clustering method proposed by Foote et al. to group di</context>
</contexts>
<marker>Strotgen, Gertz, 2010</marker>
<rawString>J. Strotgen and M. Gertz. 2010. Heideltime: High quality rule-based extraction and normalization of temporal expressions. In 5th International Workshop on Semantic Evaluation, pages 321324.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L Vanderwende</author>
<author>M Banko</author>
<author>A Menezes</author>
</authors>
<title>Event-centric summary generation. Working notes of DUC.</title>
<date>2004</date>
<contexts>
<context position="2650" citStr="Vanderwende et al., 2004" startWordPosition="384" endWordPosition="387">ic summarization, specifically focusing on historical articles. We investigate whether or not such a score can be used as a weight in traditional sentence ranking techniques to improve summarization quality. 2 Related Work Event-based summarization is a recent approach to summary generation. (Filatova and Hatzivassiloglou, 2004) introduced atomic events, which are named entities connected by a relation such as a verb or action noun. Events are selected for summary by applying a maximum coverage algorithm to minimize redundancy while maintaining coverage of the major concepts of the document. (Vanderwende et al., 2004) identify events as triples consisting of two nodes and a relation. PageRank is then used to determine the relative importance of these triples represented in a graph. Sentence generation techniques are applied towards summarization. Limited work has explored the use of temporal information for summarization. (Lim et al., 2005) use the explicit time information in the context of multi-document summarization for sentence extraction and detection of redundant sentences, ordering input documents by time. They observe that important sentences tend to occur in in time slots containing more document</context>
</contexts>
<marker>Vanderwende, Banko, Menezes, 2004</marker>
<rawString>L. Vanderwende, M. Banko, and A. Menezes. 2004. Event-centric summary generation. Working notes of DUC.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Wu</author>
<author>W Li</author>
<author>Q Lu</author>
<author>K F Wong</author>
</authors>
<title>Eventbased summarization using time features.</title>
<date>2007</date>
<booktitle>Computational Linguistics and Intelligent Text Processing,</booktitle>
<pages>563574</pages>
<contexts>
<context position="3443" citStr="Wu et al., 2007" startWordPosition="511" endWordPosition="514">generation techniques are applied towards summarization. Limited work has explored the use of temporal information for summarization. (Lim et al., 2005) use the explicit time information in the context of multi-document summarization for sentence extraction and detection of redundant sentences, ordering input documents by time. They observe that important sentences tend to occur in in time slots containing more documents and time slots occurring at the end and beginning of the documents set. They select topic sentences for each time slot, giving higher weights based on the above observation. (Wu et al., 2007) extract event elements, the arguments in an event, and event terms, the actions. Each event is placed on a timeline divided into intervals consistent with the timespan of the article. Each element and event term receives a weight corresponding to the total number of elements and event terms located in each time interval the event element or term occupies. Each sentence is scored by the total weight of event elements and terms it contains. Clustering of events based on time has also received little attention. (Foote and Cooper, 2003) investigate clustering towards organizing timestamped digita</context>
</contexts>
<marker>Wu, Li, Lu, Wong, 2007</marker>
<rawString>M. Wu, W. Li, Q. Lu, and K.F. Wong. 2007. Eventbased summarization using time features. Computational Linguistics and Intelligent Text Processing, pages 563574.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>