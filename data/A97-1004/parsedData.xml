<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000455">
<title confidence="0.2312515">
b&amp;apos;A Maximum Entropy Approach to Identifying Sentence
Boundaries
</title>
<author confidence="0.736217">
Jeffrey C. Reynar and Adwait Ratnaparkhi*
</author>
<affiliation confidence="0.836257">
Department of Computer and Information Science
University of Pennsylvania
Philadelphia, Pennsylvania~ USA
</affiliation>
<email confidence="0.979429">
{jcreynar, adwait } @unagi.cis.upenn.edu
</email>
<sectionHeader confidence="0.990549" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999464266666667">
We present a trainable model for identify-
ing sentence boundaries in raw text. Given
a corpus annotated with sentence bound-
aries, our model learns to classify each oc-
currence of., ?, and / as either a valid or in-
valid sentence boundary. The training pro-
cedure requires no hand-crafted rules, lex-
ica, part-of-speech tags, or domain-specific
information. The model can therefore be
trained easily on any genre of English, and
should be trainable on any other Roman-
alphabet language. Performance is compa-
rable to or better than the performance of
similar systems, but we emphasize the sim-
plicity of retraining for new domains.
</bodyText>
<sectionHeader confidence="0.998262" genericHeader="keywords">
1 Introduction
</sectionHeader>
<bodyText confidence="0.997305282608696">
The task of identifying sentence boundaries in text
has not received as much attention as it deserves.
Many freely available natural language processing
tools require their input to be divided into sentences,
but make no mention of how to accomplish this (e.g.
(Brill, 1994; Collins, 1996)). Others perform the
division implicitly without discussing performance
(e.g. (Cutting et al., 1992)).
On first glance, it may appear that using a short
list of sentence-final punctuation marks, such as.,
?, and /, is sufficient. However, these punctua-
tion marks are not used exclusively to mark sen-
tence breaks. For example, embedded quotations
may contain any of the sentence-ending punctua-
tion marks and . is used as a decimal point, in e-
mail addresses, to indicate ellipsis and in abbrevia-
tions. Both / and ? are somewhat less ambiguous
*The authors would like to aclmowledge the support
of ARPA grant N66001-94-C-6043, ARO grant DAAH04-
94-G-0426 and NSF grant SBR89-20230.
but appear in proper names and may be used mul-
tiple times for emphasis to mark a single sentence
boundary.
Lexically-based rules could be written and excep-
tion lists used to disambiguate the difficult cases
described above. However, the lists will never be
exhaustive, and multiple rules may interact badly
since punctuation marks exhibit absorption proper-
ties. Sites which logically should be marked with
multiple punctuation marks will often only have one
((Nunberg, 1990) as summarized in (White, 1995)).
For example, a sentence-ending abbreviation will
most likely not be followed by an additional period
if the abbreviation already contains one (e.g. note
that D. C is followed by only a single . in The presi-
dent lives in Washington, D.C.).
As a result, we believe that manually writing rules
is not a good approach. Instead, we present a solu-
tion based on a maximum entropy model which re-
quires a few hints about what information to use and
a corpus annotated with sentence boundaries. The
model trains easily and performs comparably to sys-
tems that require vastly more information. Training
on 39441 sentences takes 18 minutes on a Sun Ultra
Sparc and disambiguating the boundaries in a single
Wall Street Journal article requires only 1.4 seconds.
</bodyText>
<sectionHeader confidence="0.993335" genericHeader="introduction">
2 Previous Work
</sectionHeader>
<bodyText confidence="0.997264666666667">
To our knowledge, there have been few papers about
identifying sentence boundaries. The most recent
work will be described in (Pa.lmer and Hearst, To
appear). There is also a less detailed description of
Pahner and Hearst\&amp;apos;s system, SATZ, in (Pahuer and
Hearst, 1994). 1 The SATZ architecture uses either
a decision tree or a neural network to disambiguate
sentence boundaries. The neural network achieves
98.5% accuracy on a corpus of Wall Str\&amp;apos;eet Journal
t~Ve recommend these articles for a more compre-
hensive review of sentence-boundary identification work
than we will be able to provide here.
</bodyText>
<page confidence="0.997723">
16
</page>
<bodyText confidence="0.9976154375">
\x0carticles using a lexicon which includes part-of-speech
(POS) tag information. By increasing the quantity
ol&amp;quot; 1.ra.ining data and decreasing the size of their test
,,~rlouS. Palmer and Hearst achieved performance of
!)s.9% with the neural network. They obtained simi-
lar results using the decision tree. All the results we
will present for our a.lgorithms are on their initial,
larger test. corpus.
In (Riley, 1989), Riley describes a decision-tree
based approach to the problem. His performance on
/he Brown corpus is 99.8%, using a model learned
t\&amp;apos;rom a corpus of 25 million words. Liberman and
Church suggest in (Liberlnan and Church, 1992)
that. a system could be quickly built to divide
newswire text into sentences with a nearly negligible
error rate. but, do not actually build such a system.
</bodyText>
<sectionHeader confidence="0.961789" genericHeader="method">
3 Our Approach
</sectionHeader>
<bodyText confidence="0.999455625">
\\e present two systems for identifying sentence
boundaries. One is targeted a.t high performance
and uses some knowledge about the structure of En-
glish financial newspaper text which may not be ap-
plical)le t.o text from other genres or in other lan-
guages. The other system uses no domain-specific
knowledge and is aimed at being portable across En-
glish t,ext genres and Roman alphabet languages.
Pot.ential sentence boundaries are identified by
scamfing the text tbr sequences of characters sep-
aa\&amp;apos;ated by whitespace (tokens) containing one of the
symbols !, . or ?. We use information about the to-
llen containing the potential sentence boundary, as
well as contextual information about the tokens im-
mediately to the left and to the right. We also con-
ducted tests using wider contexts, but performance
did not, improve.
We call the token containing the symbol which
marks a putative sentence boundary the Candidate.
\&amp;apos;Phe portion of the Candidate preceding the poten-
t.ial sentence boundary is called the Prefix and the
portion following it is called the Suffix. The system
that focused on maximizing performance used the
following hints, or contextual &amp;quot;templates&amp;quot;:
</bodyText>
<subsectionHeader confidence="0.9423285">
The Prefix
The Suffix
</subsectionHeader>
<bodyText confidence="0.98048125">
The presence of particular characters in the Pre-
fix or Suffix
Whether the Candidate is an honorific (e.g.
A,l,s., Dr., Gen.)
Whether the Candidate is a. corporate designa-
tor (e.g. Coriv., ,5\&amp;apos;.p.A., L.L.C.)
Features of the word left of the Candidate
Features of the word right of the Candidate
The templates specify only the form of the in-
formation. The ~J~acl intbrmation used by the
maximum entropy model [\&amp;apos;or the potential sentence
boundary marked by . in Col7~. in Example 1 would
</bodyText>
<listItem confidence="0.957741666666667">
be: PreviousWordIsCapitalized, Prefix=Corp, Suf-
fix=NULL, PrefixFeature=C.orporateDesignator.
(1) ANLP Corp. chairman Dr. Smith resigned.
</listItem>
<bodyText confidence="0.99595175">
The highly portable system uses only the identity
of the C\&amp;apos;,andidate and its neighboring words, and a
list of abbreviations induced froln the training data. 2
Specifically, the &amp;quot;templates&amp;quot; used are:
</bodyText>
<subsectionHeader confidence="0.9554155">
The Prefix
The Suffix
</subsectionHeader>
<bodyText confidence="0.989430411764706">
Whether the Prefix or Suffix is on the list of
induced abbreviations
The word left, of the Candidate
The word right of the Candidate
Whether the word to the left or right of the
Candidate is on the list of induced abbreviations
The intbrmation this model would use for Exam-
ple 1 would be: PreviousWord=ANLP, Following-
Word=chairman, Prefix=Corp, Suffix=NULL, Pre-
fixFeature=InducedAbbreviation.
The abbreviation list is automatically produced
from the training data., and the contextual ques-
tions are also automat.ically generated by scanning
the training data with question templates. As a. re-
sult, no hand-crafted rules or lists are required by
the highly portable system and it can be easily re-
trained for other languages or text genres.
</bodyText>
<sectionHeader confidence="0.97812" genericHeader="method">
4 Maxilnum Entropy
</sectionHeader>
<bodyText confidence="0.997029">
The model used here for sentence-boundary de-
tection is based on the maximum entropy model
used for POS tagging in (Ratnaparkhi, 1996). For
each potential sentence boundary token (., ?, and
!), we estimate a joint probability distribution p
of the token and it.s surrounding context, both of
which are denoted by c, occurring as an actual
sentence I)oundary. The (list,ribul.ioll is given by:
</bodyText>
<equation confidence="0.85764">
I,. f,(b,c)
p(b, ~) = ~ 1-Ij=, ,~\&amp;apos;) , ,,,h~,-e ~ ~ {no, y~}, where
2A token in the training data is considered an abbre-
</equation>
<bodyText confidence="0.7600385">
viation if it is preceded and followed by whitespace, and
it contains a . that is not a sentence boundary.
</bodyText>
<page confidence="0.99377">
17
</page>
<bodyText confidence="0.9987665">
\x0cthe ctj\&amp;apos;s are the unknown parameters of the model,
and where each cU corresponds to a fj, or a feature.
Thus the probability of seeing an actual sentence
boundary in the context c is given by p(yes, e).
The contextual information deemed useful for
sentence-boundary detection, which we described
earlier, must be encoded using features. For exam-
pie, a useful feature might be:
</bodyText>
<table confidence="0.987884166666667">
WSJ Brown
Sentences 20478 51672
Candidate P. Marks 32173 61282
Accuracy 98.8% 97.9%
False Positives 20 [ 7.50
False Negatives 171 506
</table>
<tableCaption confidence="0.998815">
Table 1: Our best pertbrmance on two corpora.
</tableCaption>
<equation confidence="0.998668">
1 if Prefix(c) = Mr &amp;; b.= no
])(b,c) = 0 otherwise
</equation>
<bodyText confidence="0.997435818181818">
This feature will allow the model to discover that the
period at the end of the word Mr. seldom occurs as
a sentence boundary. Therefore the parameter cor-
responding to this feature will hopefully boost the
probability p(no, c) if the Prefix is Mr. The param-
eters are chosen to maximize the likelihood of the
I.raining data using the Generalized Iterative Scaling
(Darroeh and Ratcliff, 1972) algorithm.
The model also can be viewed under the Maxi-
mum Entropy framework, in which we choose a dis-
t.ribution p that maximizes the entropy H(p)
</bodyText>
<equation confidence="0.848401333333333">
H(p) = - Ep(b, c)logp(b, c)
under the following constraints:
Ep(b,c)J)(b,c ) = E~(b,c)fj(b,c),l &amp;lt; j &amp;lt; k
</equation>
<bodyText confidence="0.9933128">
where iS(b, c) is the observed distribution of sentence-
boundaries and contexts in the training data. As a
result, the model in practice tends not to commit
towards a particular outcome (yes or no) unless it
ha~s seen sufficient evidence for that outcome; it is
maximally uncertain beyond meeting the evidence.
All experiments use a simple decision rule to elas-
si[y each potential sentence boundary: a potential
sentence boundary is an actual sentence boundary if
and only if p(yeslc ) &gt; .5, where
</bodyText>
<equation confidence="0.987093">
p(yes, c)
p(yeslc) =
p(yes, c) -I-p(no, c)
</equation>
<bodyText confidence="0.9875135">
and where c is the context including the potential
sentence boundary.
</bodyText>
<sectionHeader confidence="0.92697" genericHeader="method">
5 System Performance
</sectionHeader>
<bodyText confidence="0.990125677419355">
We trained our system on 39441 sentences (898737
words) of Wall Street Journal text from sections
00 through 24 of the second release of the Penn
Treebank 3 (Marcus, Santorini, and Marcinkiewicz,
:~We did not train on files which overlapped with
Pahner and Hearst\&amp;apos;s test data, namely sections 03, 04,
05 and 06.
1993). We corrected punctuation mistakes and er-
roneous sentence boundaries in the training data.
Performance figures for our best performing system,
which used a hand-crafted list of honorifics and cor-
porate designators, are shown in Table 1. The first
test set, WSJ, is Pahner and Hearst\&amp;apos;s initial test
data and the second is the entire Brown corpus. We
present the Brown corpus performance to show the
importance of training on the genre of text on which
testing will be performed. Table 1 also shows the
number of sentences in each corpus, the lmmber of
candidate punctuation marks, the accuracy over po-
tential sentence boundaries, the nmnber of false posi-
tives and the number of false negatives. Performance
on the WSJ corpus was, as we expected, higher than
perforlnance on the Brown corpus since we trained
the model on financial newspaper text.
Possibly more significant than the system\&amp;apos;s per-
formance is its portability to new domains and lan-
guages. A trimmed down system which used no
information except that derived from the training
corpus performs nearly as well, and requires no re-
sources other than a training corpus. Its perfor-
mance on the same two corpora is shown in Table 2.
</bodyText>
<table confidence="0.9943035">
Test False False
Corpus Accuracy Positives Negatives
WSJ 98.0% 396 245
Brown 97.5% 1260 265
</table>
<tableCaption confidence="0.998643">
Table 2: Performance on the sa.me two corpora, using
</tableCaption>
<bodyText confidence="0.9822211">
the highly portable system.
Since 39441 training sentences is considerably
more than might exist ill a new dolnail~ or a lan-
guage other than English, we experimented with the
quantity of training data required to maintain per-
forlnance. Table 3 shows performance on the WSJ
corpus as a flmction oft,raining set size using the best
performing system and the more portable system.
As can seen fl\&amp;apos;om the table, performance degrades
as the quantity of training data decreases, but even
</bodyText>
<page confidence="0.993383">
18
</page>
<table confidence="0.91428625">
\x0cNumber of sentences in training corpus
500 1000 2000 4000 8000 16000 39441
Best performing 97.6% 98.4% 98.0% 98.4% 98.3% 98.3% 98.8~Z~,
Highly portable 96.5% 97.3% 97.3% 97.6% 97.6% 97.8% 98.0%
</table>
<tableCaption confidence="0.999406">
Table 3: Performance on Wall \&amp;apos;t~vet Journal test data a.s a. flmction of training set. size for both systems.
</tableCaption>
<bodyText confidence="0.995909">
with only 500 exalnple sentences performance is bet-
I(,~\&amp;apos; lhan the baselines of 64.0% if a sentence bound-
~l\\; is guessed at every potential site and 78.4(K, if
only token-final instances of sentence-ending punc-
tuation are assumed to be boundaries.
</bodyText>
<sectionHeader confidence="0.998841" genericHeader="conclusions">
6 Conclusions
</sectionHeader>
<bodyText confidence="0.999637913043478">
We have described an approach to identifying sen-
tence boundaries which performs comparably to
other state-of-the-art systems that require vastly
luore resources. For example, Riley\&amp;apos;s performance
ot~ the Brown corpus is higher than ours, but his sys-
lera is trained on the Brown corpus and uses thirty
i.ilnes as much data as our system. Also, Pahner
&amp; Hearst\&amp;apos;s system requires POS tag information,
which limits its use to those genres or languages for
which there are either POS tag lexica or POS tag
annotated corpora, that could be used to train auto-
marie taggers. In comparison, our system does not
require POS tags or any supporting resources be-
yond the sentence-boundary annotated corpus. It
is theretbre easy and inexpensive to retrain this sys-
t.em tbr different genres of text in English and text in
()tiler l:(.oma.n-a.lphabet languages. Furthermore, we
showed that a small training corpus is sufficient for
good performance, and we estimate that annotating
enough data to achieve good performance would re-
quire only several hours of work, in comparison to
the many hours required to generate POS tag and
lexical probabilities.
</bodyText>
<sectionHeader confidence="0.998776" genericHeader="acknowledgments">
7 Acknowledgments
</sectionHeader>
<bodyText confidence="0.9987836">
We would like to thank David Palmer for giving us
I.he test data he and Marti Hearst used for their
sentence detection experiments. We would also like
to thank the anonymous reviewers for their helpful
insights.
</bodyText>
<sectionHeader confidence="0.96005" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.964939224489796">
Brill, Eric. 1994. Some advances in transformation-
based part-of-speech tagging. In Proceedings of
the Twelfth National Conference on Artificial In-
telligence, volume 1, pages 722-727.
Collins, Michael. 1996. A new statistical parser
Imsed on bigram lexical dependencies. In Proceed-
ings of the 34tl\&amp;apos; Annual :Uceting of th~ Association
fi)r (:omputational Linguisties, .]une.
Cutting, Doug, ,lulian Kupiee, Jan Pedersen, and
Penelope Sibun. 1992. A practical part-of-speech
tagger. In Proceedings of the Third Conference on
Applied Natural Language Processing, pages 133-
140, Trento, Italy, April.
Darroch, J. N. and D. Ratcliff. 1972. Generalized
Iterative Scaling for Log-Linear Models. The An-
nals of Mathematical ,\&amp;apos;;tatistics, 43 (5) :1470-1480.
Liberman, Mark Y. and Kenneth W. Church. 1992.
Text analysis and word pronunciation in text-to-
speech synthesis. In Sadaoki Furui and M. Mohan
Sondi, editors, Advances in ,5\&amp;apos;peechSignal Process-
ing. Marcel Dekker, Incorporated, New York.
Marcus, Mitchell, Beatrice Sa.ntorini, and Mary Ann
Marcinkiewicz. 1993. Building a large annotated
corpus of English: the Penn Treebank. Computa-
tional Linguistics, lq(2):313-330.
Nunberg, Geoffrey. 1990. The Linguistics of Punc-
tuation. Number 18 in C,SLI Lecture Notes. Uni-
versity of Chicago Press.
Pahner, David D. and Marti A. Hearst. 1994. Adap-
tive sentence boundary disambiguation. In Pro-
ceedmgs of the 199/~ conference on Applied Natu-
ral Language Processing (ANLP), Stuttgart, Ger-
many, October.
Palmer, David D. and Marti A. Hearst. To appear.
Adaptive multilingual sentence boundary disam-
biguation. Computational Linguistics.
Rutnaparkhi, Adwait. 1996. A maxinmnl entropy
moclel for part-of speech tagging, in Conference
on Empirical \&amp;apos;Method.s in Natural Language Pro-
cessing, pages 133 142, (h~iversit, y of Pennsylva-
nia, May 17-18.
Riley, Michael D. 1989. Some applications of
tree-based modelling to speech and language. In
DARPA ,5\&amp;apos;peech and Language Technology Work-
shop, pages 339-352, Cape Cod, Massachusetts.
White, Michael. 1995. Presenting punctuation. In
Proceedings of the Fifth \&amp;apos;urop+_an Workshop on
Natural Language Generation, pages 107-125, Lei-
den, The Netherlands.
</reference>
<page confidence="0.971884">
19
</page>
<figure confidence="0.260989">
\x0c&amp;apos;
</figure>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.915094">
<title confidence="0.9693395">b&amp;apos;A Maximum Entropy Approach to Identifying Sentence Boundaries</title>
<author confidence="0.999835">Jeffrey C Reynar</author>
<author confidence="0.999835">Adwait Ratnaparkhi</author>
<affiliation confidence="0.9999055">Department of Computer and Information Science University of Pennsylvania</affiliation>
<address confidence="0.998772">Philadelphia, Pennsylvania~ USA</address>
<email confidence="0.998652">jcreynar@unagi.cis.upenn.edu</email>
<email confidence="0.998652">adwait@unagi.cis.upenn.edu</email>
<abstract confidence="0.998516875">We present a trainable model for identifying sentence boundaries in raw text. Given a corpus annotated with sentence boundaries, our model learns to classify each occurrence of., ?, and / as either a valid or invalid sentence boundary. The training procedure requires no hand-crafted rules, lexica, part-of-speech tags, or domain-specific information. The model can therefore be trained easily on any genre of English, and should be trainable on any other Romanalphabet language. Performance is comparable to or better than the performance of similar systems, but we emphasize the simplicity of retraining for new domains.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>Eric Brill</author>
</authors>
<title>Some advances in transformationbased part-of-speech tagging.</title>
<date>1994</date>
<booktitle>In Proceedings of the Twelfth National Conference on Artificial Intelligence,</booktitle>
<volume>1</volume>
<pages>722--727</pages>
<contexts>
<context position="1173" citStr="Brill, 1994" startWordPosition="178" endWordPosition="179">art-of-speech tags, or domain-specific information. The model can therefore be trained easily on any genre of English, and should be trainable on any other Romanalphabet language. Performance is comparable to or better than the performance of similar systems, but we emphasize the simplicity of retraining for new domains. 1 Introduction The task of identifying sentence boundaries in text has not received as much attention as it deserves. Many freely available natural language processing tools require their input to be divided into sentences, but make no mention of how to accomplish this (e.g. (Brill, 1994; Collins, 1996)). Others perform the division implicitly without discussing performance (e.g. (Cutting et al., 1992)). On first glance, it may appear that using a short list of sentence-final punctuation marks, such as., ?, and /, is sufficient. However, these punctuation marks are not used exclusively to mark sentence breaks. For example, embedded quotations may contain any of the sentence-ending punctuation marks and . is used as a decimal point, in email addresses, to indicate ellipsis and in abbreviations. Both / and ? are somewhat less ambiguous *The authors would like to aclmowledge the</context>
</contexts>
<marker>Brill, 1994</marker>
<rawString>Brill, Eric. 1994. Some advances in transformationbased part-of-speech tagging. In Proceedings of the Twelfth National Conference on Artificial Intelligence, volume 1, pages 722-727.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael Collins</author>
</authors>
<title>A new statistical parser Imsed on bigram lexical dependencies.</title>
<date>1996</date>
<booktitle>In Proceedings of the 34tl\&amp;apos; Annual :Uceting of th~ Association fi)r (:omputational Linguisties,</booktitle>
<pages>.]une.</pages>
<contexts>
<context position="1189" citStr="Collins, 1996" startWordPosition="180" endWordPosition="181"> tags, or domain-specific information. The model can therefore be trained easily on any genre of English, and should be trainable on any other Romanalphabet language. Performance is comparable to or better than the performance of similar systems, but we emphasize the simplicity of retraining for new domains. 1 Introduction The task of identifying sentence boundaries in text has not received as much attention as it deserves. Many freely available natural language processing tools require their input to be divided into sentences, but make no mention of how to accomplish this (e.g. (Brill, 1994; Collins, 1996)). Others perform the division implicitly without discussing performance (e.g. (Cutting et al., 1992)). On first glance, it may appear that using a short list of sentence-final punctuation marks, such as., ?, and /, is sufficient. However, these punctuation marks are not used exclusively to mark sentence breaks. For example, embedded quotations may contain any of the sentence-ending punctuation marks and . is used as a decimal point, in email addresses, to indicate ellipsis and in abbreviations. Both / and ? are somewhat less ambiguous *The authors would like to aclmowledge the support of ARPA</context>
</contexts>
<marker>Collins, 1996</marker>
<rawString>Collins, Michael. 1996. A new statistical parser Imsed on bigram lexical dependencies. In Proceedings of the 34tl\&amp;apos; Annual :Uceting of th~ Association fi)r (:omputational Linguisties, .]une.</rawString>
</citation>
<citation valid="true">
<authors>
<author>lulian Kupiee</author>
<author>Jan Pedersen</author>
<author>Penelope Sibun</author>
</authors>
<title>A practical part-of-speech tagger.</title>
<date>1992</date>
<booktitle>In Proceedings of the Third Conference on Applied Natural Language Processing,</booktitle>
<pages>133--140</pages>
<location>Trento, Italy,</location>
<marker>Kupiee, Pedersen, Sibun, 1992</marker>
<rawString>Cutting, Doug, ,lulian Kupiee, Jan Pedersen, and Penelope Sibun. 1992. A practical part-of-speech tagger. In Proceedings of the Third Conference on Applied Natural Language Processing, pages 133-140, Trento, Italy, April.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J N Darroch</author>
<author>D Ratcliff</author>
</authors>
<title>Generalized Iterative Scaling for Log-Linear Models.</title>
<date>1972</date>
<journal>The Annals of Mathematical ,\&amp;apos;;tatistics,</journal>
<volume>43</volume>
<issue>5</issue>
<pages>1470--1480</pages>
<marker>Darroch, Ratcliff, 1972</marker>
<rawString>Darroch, J. N. and D. Ratcliff. 1972. Generalized Iterative Scaling for Log-Linear Models. The Annals of Mathematical ,\&amp;apos;;tatistics, 43 (5) :1470-1480.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mark Y Liberman</author>
<author>Kenneth W Church</author>
</authors>
<title>Text analysis and word pronunciation in text-tospeech synthesis.</title>
<date>1992</date>
<booktitle>In Sadaoki Furui</booktitle>
<editor>and M. Mohan Sondi, editors,</editor>
<publisher>Marcel Dekker, Incorporated,</publisher>
<location>New York.</location>
<marker>Liberman, Church, 1992</marker>
<rawString>Liberman, Mark Y. and Kenneth W. Church. 1992. Text analysis and word pronunciation in text-tospeech synthesis. In Sadaoki Furui and M. Mohan Sondi, editors, Advances in ,5\&amp;apos;peechSignal Processing. Marcel Dekker, Incorporated, New York.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Mitchell Marcus</author>
<author>Beatrice Sa ntorini</author>
<author>Mary Ann Marcinkiewicz</author>
</authors>
<title>Building a large annotated corpus of English: the Penn Treebank.</title>
<date>1993</date>
<journal>Computational Linguistics,</journal>
<pages>2--313</pages>
<marker>Marcus, ntorini, Marcinkiewicz, 1993</marker>
<rawString>Marcus, Mitchell, Beatrice Sa.ntorini, and Mary Ann Marcinkiewicz. 1993. Building a large annotated corpus of English: the Penn Treebank. Computational Linguistics, lq(2):313-330.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Geoffrey Nunberg</author>
</authors>
<title>The Linguistics of Punctuation.</title>
<date>1990</date>
<journal>Number</journal>
<booktitle>in C,SLI Lecture Notes.</booktitle>
<volume>18</volume>
<publisher>University of Chicago Press.</publisher>
<contexts>
<context position="2343" citStr="Nunberg, 1990" startWordPosition="363" endWordPosition="364">s *The authors would like to aclmowledge the support of ARPA grant N66001-94-C-6043, ARO grant DAAH04- 94-G-0426 and NSF grant SBR89-20230. but appear in proper names and may be used multiple times for emphasis to mark a single sentence boundary. Lexically-based rules could be written and exception lists used to disambiguate the difficult cases described above. However, the lists will never be exhaustive, and multiple rules may interact badly since punctuation marks exhibit absorption properties. Sites which logically should be marked with multiple punctuation marks will often only have one ((Nunberg, 1990) as summarized in (White, 1995)). For example, a sentence-ending abbreviation will most likely not be followed by an additional period if the abbreviation already contains one (e.g. note that D. C is followed by only a single . in The president lives in Washington, D.C.). As a result, we believe that manually writing rules is not a good approach. Instead, we present a solution based on a maximum entropy model which requires a few hints about what information to use and a corpus annotated with sentence boundaries. The model trains easily and performs comparably to systems that require vastly mo</context>
</contexts>
<marker>Nunberg, 1990</marker>
<rawString>Nunberg, Geoffrey. 1990. The Linguistics of Punctuation. Number 18 in C,SLI Lecture Notes. University of Chicago Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>David D Pahner</author>
<author>Marti A Hearst</author>
</authors>
<title>Adaptive sentence boundary disambiguation.</title>
<date>1994</date>
<booktitle>In Proceedmgs of the 199/~ conference on Applied Natural Language Processing (ANLP),</booktitle>
<location>Stuttgart, Germany,</location>
<marker>Pahner, Hearst, 1994</marker>
<rawString>Pahner, David D. and Marti A. Hearst. 1994. Adaptive sentence boundary disambiguation. In Proceedmgs of the 199/~ conference on Applied Natural Language Processing (ANLP), Stuttgart, Germany, October. Palmer, David D. and Marti A. Hearst. To appear. Adaptive multilingual sentence boundary disambiguation. Computational Linguistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Adwait Rutnaparkhi</author>
</authors>
<title>A maxinmnl entropy moclel for part-of speech tagging,</title>
<date>1996</date>
<booktitle>in Conference on Empirical \&amp;apos;Method.s in Natural Language Processing,</booktitle>
<pages>133</pages>
<marker>Rutnaparkhi, 1996</marker>
<rawString>Rutnaparkhi, Adwait. 1996. A maxinmnl entropy moclel for part-of speech tagging, in Conference on Empirical \&amp;apos;Method.s in Natural Language Processing, pages 133 142, (h~iversit, y of Pennsylvania, May 17-18.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael D Riley</author>
</authors>
<title>Some applications of tree-based modelling to speech and language.</title>
<date>1989</date>
<booktitle>In DARPA ,5\&amp;apos;peech and Language Technology Workshop,</booktitle>
<pages>339--352</pages>
<location>Cape Cod, Massachusetts.</location>
<contexts>
<context position="4161" citStr="Riley, 1989" startWordPosition="658" endWordPosition="659">8.5% accuracy on a corpus of Wall Str\&amp;apos;eet Journal t~Ve recommend these articles for a more comprehensive review of sentence-boundary identification work than we will be able to provide here. 16 \x0carticles using a lexicon which includes part-of-speech (POS) tag information. By increasing the quantity ol&amp;quot; 1.ra.ining data and decreasing the size of their test ,,~rlouS. Palmer and Hearst achieved performance of !)s.9% with the neural network. They obtained similar results using the decision tree. All the results we will present for our a.lgorithms are on their initial, larger test. corpus. In (Riley, 1989), Riley describes a decision-tree based approach to the problem. His performance on /he Brown corpus is 99.8%, using a model learned t\&amp;apos;rom a corpus of 25 million words. Liberman and Church suggest in (Liberlnan and Church, 1992) that. a system could be quickly built to divide newswire text into sentences with a nearly negligible error rate. but, do not actually build such a system. 3 Our Approach \\e present two systems for identifying sentence boundaries. One is targeted a.t high performance and uses some knowledge about the structure of English financial newspaper text which may not be appl</context>
</contexts>
<marker>Riley, 1989</marker>
<rawString>Riley, Michael D. 1989. Some applications of tree-based modelling to speech and language. In DARPA ,5\&amp;apos;peech and Language Technology Workshop, pages 339-352, Cape Cod, Massachusetts.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Michael White</author>
</authors>
<title>Presenting punctuation.</title>
<date>1995</date>
<booktitle>In Proceedings of the Fifth \&amp;apos;urop+_an Workshop on Natural Language Generation,</booktitle>
<pages>107--125</pages>
<location>Leiden, The Netherlands.</location>
<contexts>
<context position="2374" citStr="White, 1995" startWordPosition="368" endWordPosition="369">owledge the support of ARPA grant N66001-94-C-6043, ARO grant DAAH04- 94-G-0426 and NSF grant SBR89-20230. but appear in proper names and may be used multiple times for emphasis to mark a single sentence boundary. Lexically-based rules could be written and exception lists used to disambiguate the difficult cases described above. However, the lists will never be exhaustive, and multiple rules may interact badly since punctuation marks exhibit absorption properties. Sites which logically should be marked with multiple punctuation marks will often only have one ((Nunberg, 1990) as summarized in (White, 1995)). For example, a sentence-ending abbreviation will most likely not be followed by an additional period if the abbreviation already contains one (e.g. note that D. C is followed by only a single . in The president lives in Washington, D.C.). As a result, we believe that manually writing rules is not a good approach. Instead, we present a solution based on a maximum entropy model which requires a few hints about what information to use and a corpus annotated with sentence boundaries. The model trains easily and performs comparably to systems that require vastly more information. Training on 394</context>
</contexts>
<marker>White, 1995</marker>
<rawString>White, Michael. 1995. Presenting punctuation. In Proceedings of the Fifth \&amp;apos;urop+_an Workshop on Natural Language Generation, pages 107-125, Leiden, The Netherlands.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>