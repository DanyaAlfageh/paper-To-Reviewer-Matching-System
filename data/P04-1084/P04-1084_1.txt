b'Generalized Multitext Grammars
I. Dan Melamed
Computer Science Department
New York University
715 Broadway, 7th Floor
New York, NY, 10003, USA
lastname\x01 @cs.nyu.edu
Giorgio Satta
Dept. of Information Engg
University of Padua
via Gradenigo 6/A
I-35131 Padova, Italy
lastname\x01 @dei.unipd.it
Benjamin Wellington
Computer Science Department
New York University
715 Broadway, 7th Floor
New York, NY, 10003, USA
lastname\x01 @cs.nyu.edu
Abstract
Generalized Multitext Grammar (GMTG) is a syn-
chronous grammar formalism that is weakly equiv-
alent to Linear Context-Free Rewriting Systems
(LCFRS), but retains much of the notational and in-
tuitive simplicity of Context-Free Grammar (CFG).
GMTG allows both synchronous and independent
rewriting. Such flexibility facilitates more perspic-
uous modeling of parallel text than what is possible
with other synchronous formalisms. This paper in-
vestigates the generative capacity of GMTG, proves
that each component grammar of a GMTG retains
its generative power, and proposes a generalization
of Chomsky Normal Form, which is necessary for
synchronous CKY-style parsing.
1 Introduction
Synchronous grammars have been proposed for
the formal description of parallel texts representing
translations of the same document. As shown by
Melamed (2003), a plausible model of parallel text
must be able to express discontinuous constituents.
Since linguistic expressions can vanish in transla-
tion, a good model must be able to express inde-
pendent (in addition to synchronous) rewriting. In-
version Transduction Grammar (ITG) (Wu, 1997)
and Syntax-Directed Translation Schema (SDTS)
(Aho and Ullman, 1969) lack both of these prop-
erties. Synchronous Tree Adjoining Grammar
(STAG) (Shieber, 1994) lacks the latter and allows
only limited discontinuities in each tree.
Generalized Multitext Grammar (GMTG) offers
a way to synchronize Mildly Context-Sensitive
Grammar (MCSG), while satisfying both of the
above criteria. The move to MCSG is motivated
by our desire to more perspicuously account for
certain syntactic phenomena that cannot be easily
captured by context-free grammars, such as clitic
climbing, extraposition, and other types of long-
distance movement (Becker et al., 1991). On the
other hand, MCSG still observes some restrictions
that make the set of languages it generates less ex-
pensive to analyze than the languages generated by
(properly) context-sensitive formalisms.
More technically, our proposal starts from Mul-
titext Grammar (MTG), a formalism for synchro-
nizing context-free grammars recently proposed by
Melamed (2003). In MTG, synchronous rewriting
is implemented by means of an indexing relation
that is maintained over occurrences of nonterminals
in a sentential form, using essentially the same ma-
chinery as SDTS. Unlike SDTS, MTG can extend
the dimensionality of the translation relation be-
yond two, and it can implement independent rewrit-
ing by means of partial deletion of syntactic struc-
tures. Our proposal generalizes MTG by moving
from component grammars that generate context-
free languages to component grammars whose gen-
erative power is equivalent to Linear Context-Free
Rewriting Systems (LCFRS), a formalism for de-
scribing a class of MCSGs. The generalization is
achieved by allowing context-free productions to
rewrite tuples of strings, rather than single strings.
Thus, we retain the intuitive top-down definition of
synchronous derivation original in SDTS and MTG
but not found in LCFRS, while extending the gen-
erative power to linear context-free rewriting lan-
guages. In this respect, GMTG has also been in-
spired by the class of Local Unordered Scattered
Context Grammars (Rambow and Satta, 1999). A
syntactically very different synchronous formalism
involving LCFRS has been presented by Bertsch
and Nederhof (2001).
This paper begins with an informal description of
GMTG. It continues with an investigation of this
formalisms generative capacity. Next, we prove
that in GMTG each component grammar retains its
generative power, a requirement for synchronous
formalisms that Rambow and Satta (1996) called
the weak language preservation property. Lastly,
we propose a synchronous generalization of Chom-
sky Normal Form, which lays the groundwork for
synchronous parsing under GMTG using a CKY-
style algorithm (Younger, 1967; Melamed, 2004).
\x0c2 Informal Description and Comparisons
GMTG is a generalization of MTG, which is itself
a generalization of CFG to the synchronous case.
Here we present MTG in a new notation that shows
the relation to CFG more clearly. For example, the
following MTG productions can generate the multi-
text [(I fed the cat), (ya kota kormil)]:1
(S)\x01(S)\x02\x04\x03 \x06\x05PN\x07VP\x08
\t\x0b\x01 \x05PN\x07VP\x08\x0c\t
\x02 (1)
\x0e\x05PN\t\x0b\x01 \x05PN\t
\x02\x0f\x03 \x06\x05I\t\x0b\x01 \x05ya\t
\x02 (2)
\x0e\x05VP\t\x0b\x01 \x05VP\t
\x02\x0f\x03 \x06\x05V\x07 NP\x08 \t\x0b\x01 \x05NP\x08 V\x07 \t
\x02 (3)
\x0e\x05V\t\x0b\x01 \x05V\t
\x02\x0f\x03 \x06\x05fed\t\x0b\x01 \x05kormil\t
\x02 (4)
\x0e\x05NP\t\x0b\x01 \x05NP\t
\x02\x0f\x03 \x06\x05D\x07 N\x08 \t\x0b\x01 \x05N\x08 \t
\x02 (5)
\x06\x05D\t\x0b\x01 \x05\t
\x02\x10\x03 \x06\x05the\t\x0b\x01 \x05\t
\x02 (6)
\x0e\x05N\t\x0b\x01 \x05N\t
\x02\x0f\x03 \x06\x05cat\t\x0b\x01 \x05kota\t
\x02 (7)
Each production in this example has two com-
ponents, the first modeling English and the sec-
ond (transliterated) Russian. Nonterminals with the
same index must be rewritten together (synchronous
rewriting). One strength of MTG, and thus also
GMTG, is shown in Productions (5) and (6). There
is a determiner in English, but not in Russian, so
Production (5) does not have the nonterminal D in
the Russian component and (6) applies only to the
English component (independent rewriting). For-
malisms that do not allow independent rewriting re-
quire a corresponding \x11 to appear in the second
component on the right-hand side (RHS) of Produc-
tion (5), and this \x11 would eventually generate the
empty string. This approach has the disadvantage
that it introduces spurious ambiguity about the po-
sition of the empty nonterminal with respect to
the other nonterminals in its component. Spurious
ambiguity leads to wasted effort during parsing.
GMTGs implementation of independent rewrit-
ing through the empty tuple () serves a very differ-
ent function from the empty string. Consider the
following GMTG:
\x06\x05\x13\x12 \t\x0b\x01 \x05\x13\x12 \t
\x02\x10\x03 \x06\x05\x15\x14 \t\x0b\x01 \x05\x15\x16 \t
\x02 (8)
\x06\x05\x13\x12 \t\x0b\x01 \x05\x13\x12 \t
\x02\x10\x03 \x06\x05\x18\x17 \x07 \t\x0b\x01 \x05\x15\x19 \x08 \t
\x02 (9)
\x06\x05\x18\x17 \t\x0b\x01 \x05\t
\x02\x10\x03 \x06\x05\x1b\x1a \t\x0b\x01 \x05\t
\x02\x1d\x1c \x06\x05\x15\x1e \t\x0b\x01 \x05\t
\x02\x1f\x1c \x06\x05\x15 \t\x0b\x01 \x05\t
\x02 (10)
\x06\x05\t\x0b\x01 \x05\x15\x19 \t
\x02!\x03 \x06\x05\t\x0b\x01 \x05\x1b" \t
\x02\x1f\x1c \x06\x05\t\x0b\x01 \x05\x1b# \t
\x02\x1f\x1c \x06\x05\t\x0b\x01 \x05%$ \t
\x02 (11)
Production (8) asserts that symbol
\x14 vanishes in
translation. Its application removes both of the non-
terminals on the left-hand side (LHS), pre-empting
any other production. In contrast, Production (9)
1
We write production components both side by side and one
above another to save space, but each component is always in
parentheses.
explicitly relaxes the synchronization constraint, so
that the two components can be rewritten indepen-
dently. The other six productions make assertions
about only one component and are agnostic about
the other component. Incidentally, generating the
same language with only fully synchronized pro-
ductions would raise the number of required pro-
ductions to 11, so independent rewriting also helps
to reduce grammar size.
Independent rewriting is also useful for model-
ing paraphrasing. Take, for example, [(Tim got a
pink slip), (Tim got laid off)]. While the two sen-
tences have the same meaning, the objects of their
verb phrases are structured very differently. GMTG
can express their relationships as follows:
\x06\x05S\t\x0b\x01 \x05S\t
\x02\x0f\x03 \x06\x05NP\x07VP\x08
\t\x0b\x01 \x05NP\x07VP\x08&\t
\x02 (12)
\x06\x05VP\t\x0b\x01 \x05VP\t
\x02\x04\x03 \x06\x05V\x07NP\x08 \t\x0b\x01 \x05V\x07PP\x08 \t
\x02 (13)
\x0e\x05NP\t\x0b\x01 \x05PP\t
\x02\x04\x03 \x06\x05DT\x07A\x08\'\x01N(
\t\x0b\x01 \x05VB)*\x01R+
\t
\x02 (14)
\x06\x05NP\t\x0b\x01 \x05NP\t
\x02\x04\x03 \x06\x05Tim\t\x0b\x01 \x05 Tim\t
\x02 (15)
,\x05V\t\x0b\x01 \x05V\t
\x02\x0f\x03 \x06\x05got\t\x0b\x01 \x05got\t
\x02 (16)
,\x05DT\t\x0b\x01 \x05\t
\x02\x10\x03 \x06\x05a\t\x0b\x01 \x05\t
\x02 (17)
\x06\x05A\t\x0b\x01 \x05\t
\x02\x10\x03 \x06\x05pink\t\x0b\x01 \x05\t
\x02 (18)
\x06\x05N\t\x0b\x01 \x05\t
\x02\x10\x03 \x06\x05slip\t\x0b\x01 \x05\t
\x02 (19)
,\x05\t\x0b\x01 \x05VB\t
\x02\x0f\x03 \x06\x05\t\x0b\x01 \x05laid\t
\x02 (20)
\x06\x05\t\x0b\x01 \x05R\t
\x02\x0f\x03 \x06\x05\t\x0b\x01 \x05off\t
\x02 (21)
As described by Melamed (2003), MTG requires
production components to be contiguous, except af-
ter binarization. GMTG removes this restriction.
Take, for example, the sentence pair [(The doctor
treats his teeth), (El medico le examino los dientes)]
(Dras and Bleam, 2000). The Spanish clitic le and
the NP los dientes should both be paired with the
English NP his teeth, giving rise to a discontinuous
constituent in the Spanish component. A GMTG
fragment for the sentence is shown below:
\x06\x05S\t\x0b\x01 \x05S\t
\x02\x04\x03 \x06\x05NP\x07VP\x08 \t\x0b\x01 \x05NP\x07 VP\x08 \t
\x02
\x06\x05VP\t\x0b\x01 \x05VP\t
\x02!\x03 \x06\x05V\x07 NP\x08 \t\x0b\x01 \x05NP\x08 V\x07NP\x08 \t
\x02
\x06\x05NP\t\x0b\x01 \x05NP\t
\x02!\x03 \x06\x05The doctor\t\x0b\x01 \x05El medico\t
\x02
\x06\x05V\t\x0b\x01 \x05V\t
\x02\x04\x03 \x06\x05treats\t\x0b\x01 \x05examino\t
\x02
\x06\x05NP\t\x0b\x01 \x05NP\x01 NP\t
\x02!\x03 \x06\x05his teeth\t\x0b\x01 \x05le\x01 los dientes\t
\x02
Note the discontinuity between le and los dientes.
Such discontinuities are marked by commas on both
the LHS and the RHS of the relevant component.
GMTGs flexibility allows it to deal with many
complex syntactic phenomena. For example,
Becker et al. (1991) point out that TAG does not
have the generative capacity to model certain kinds
of scrambling in German, when the so-called co-
occurrence constraint is imposed, requiring the
\x0cderivational pairing between verbs and their com-
plements. They examine the English/German sen-
tence fragment [(... that the detective has promised
the client to indict the suspect of the crime), (...
da des Verbrechens der Detektiv den Verdachtigen
dem Klienten zu uberfuhren versprochen hat)]. The
verbs versprochen and uberfuhren both have two
noun phrases as arguments. In German, these noun
phrases can appear to the left of the verbs in any
order. The following is a GMTG fragment for the
above sentence pair2:
\x05S\t
\x05S\t\x02\x01
\x03 \x03
\x05N\x07\x04\x06\x05\x08\x07 has promised N\x08\t\x08
 \x0b\x0c\x05\x02
\x0e\x07\x10\x0fS( \t
\x05 \x0fS( N\x07\x11 \x05\x08\x07\x12\x0fS( N\x08\x13\x14
 \x0b\x0c\x05\x02
\x15\x0fS( versprochen hat\t\x17\x16
(22)
\x05 \x0fS\t
\x05 \x0fS\x01 \x0fS\x01 \x0fS\t\x01
\x03
\x05to indict N\x07\x18\x1a\x19\x1b\x18\x0c\x1c \x05\x1a\t\x02\x07 N\x08\t\x08\x1d\x1e\x0b \x1f!\x05 \t
\x05N\x08" \x05\x02\x1d\x02# \x01N\x07" \x05\x08\x1d$\x04 \x01 zu uberfuhren\t\x01
(23)
The discontinuities allow the noun arguments of
versprochen to be placed in any order with the noun
arguments of uberfuhren. Rambow (1995) gives a
similar analysis.
3 Formal Definitions
Let %\'& be a finite set of nonterminal symbols and
let ( be the set of integers.3 We define )
\x05% & \t+*
,.-0/21$3
\x1c -54
% & \x0176
4
(98 .4 Elements of )
\x05% & \t
will be called indexed nonterminal symbols. In
what follows we also consider a finite set of termi-
nal symbols %;: , disjoint from % & , and work with
strings in %=<
> , where % > *?)
\x05% & \t\x12@A%;: . For B
4
%C<
> ,
we define D\x0cEGFIHKJ
\x05B \tL*
,
6 \x1c!BM*NBPO
- /21$3
B\'O O\x18\x01QBPO%\x01RBPO O
4
% <
> \x01 -S/\x0c1$3T4
)
\x05% & \tU8 , i.e. the set of indexes that ap-
pear in B .
An indexed tuple vector, or ITV, is a vector of
tuples of strings over % > , having the form
B *
\x06\x05B
\x07 \x07 \x01\x0eV\x0eV\x0eV \x01RB
\x07\x02WYX
\t\x0b\x01\x0eV\x0eV\x0eV \x01 \x05B[Z
\x07 \x01\x0eV\x0eV\x0eV\x0c\x01RB;Z
W\x08\\
\t
\x02
where \x11^]`_ , a\x0ebc]ed and Bfbhg
4
% <
> for _CikjAi \x11 ,
_Simlnioa\x0eb . We write B j\x13\x02, _Siojpi \x11 , to denote the
j -th component of B and q
\x05B j\x1b\x02\x18\t to denote the arity
of such a tuple, which is a.b . When q
\x05B j\x1b\x02\x18\tr*sd ,
B j\x13\x02 is the empty tuple, written
\x05\t. This should not
be confused with
\x05\x15\x16 \t, that is the tuple of arity one
containing the empty string. A link is an ITV where
2
These are only a small subset of the necessary productions.
The subscripts on the nonterminals indicate what terminals they
will eventually yield; the terminal productions have been left
out to save space.
3
Any other infinite set of indexes would suit too.
4
The parentheses around indexes distinguish them from
other uses of superscripts in formal language theory. However,
we shall omit the parentheses when the context is unambigu-
ous.
each Bfbtg consists of one indexed nonterminal and all
of these nonterminals are coindexed. As we shall
see, the notion of a link generalizes the notion of
nonterminal in context-free grammars: each pro-
duction rewrites a single link.
Definition 1 Let \x11 ] _ be some integer con-
stant. A generalized multitext grammar with \x11
dimensions (\x11 -GMTG for short) is a tuple uv*
\x05%\'& \x01K% : \x01\x06w \x01 \x12 \t where %\'& , % : are finite, disjoint sets
of nonterminal and terminal symbols, respectively,
\x12x4
% & is the start symbol and w is a finite set of
productions. Each production has the form y \x03 z ,
where y is a \x11 -dimensional link and z is a \x11 -
dimensional ITV such that q
\x05y j\x1b\x02\x18\t{*|q
\x05z j\x1b\x02\x18\t for
_Si}jpi \x11 . If y j\x1b\x02 contains
\x12 , then q
\x05y j\x1b\x02\x18\tc*~_ .
We omit symbol \x11 from \x11 -GMTG whenever it is
not relevant. To simplify notation, we write pro-
ductions as \x7f* \x7f
\x07 \x01\x0eV\x0eV\x0eV\x0c\x01\x1a\x7fPZ \x02, with each \x7f\'b*
\x05\x1a-
b
\x07 \x01\x0eV\x0eV\x0eV \x01 -
b
W\x08
\t \x03 \x05y b
\x07 \x01\x0eV\x0eV\x0eV \x01Uy b
W\x08
\t,
-
bhg
4
%\'& . I.e.
we omit the unique index appearing on the LHS of
\x7f . Each \x7f b is called a production component. The
production component
\x05\t \x03 \x05\t is called the inactive
production component. All other production com-
ponents are called active and we set G\x12KD H
\x05\x7f \t*
,
j \x1ca\x0ebTdf8 . Inactive production components are
used to relax synchronous rewriting on some dimen-
sions, that is to implement rewriting on
7
\x11 com-
ponents. When *_ , rewriting is licensed on one
component, independently of all the others.
Two grammar parameters play an important role
in this paper. Let \x7f* \x7f
\x07 \x01\x0eV\x0eV\x0eV\x0c\x01\x1a\x7fPZ \x02 4
w and \x7fb*
\x05\x1a-
b
\x07 \x01\x0eV\x0eV\x0eV \x01 -
b
W\x08
\t \x03 \x05y b
\x07 \x01\x0eV\x0eV\x0eV \x01Uy b
W\x08
\t.
Definition 2 The rank  of a production \x7f is
the number of links on its RHS: 
\x05\x7f \t *
\x1cD2EFHKJ
\x05y
\x07 \x07\x14\x0e\x0e
y
\x07\x02W\x06X
y
\x08 \x07\x15\x0e\x0e
yZ
W\x08\\
\t&\x1c. The rank of a
GMTG u is 
\x05u \tc*+ 
\x05\x7f \t.
Definition 3 The fan-out of \x7f b , \x7f and u are, re-
spectively, q
\x05\x7f b \t*|a b , q
\x05\x7f \t* 
Z
b
\x07 q
\x05\x7f b \t and
q
\x05u \tQ*N+ q
\x05\x7f \t.
For example, the rank of Production (23) is two and
its fan-out is four.
In GMTG, the derives relation is defined over
ITVs. GMTG derivation proceeds by synchronous
application of all the active components in some
production. The indexed nonterminals to be rewrit-
ten simultaneously must all have the same index 6 ,
and all nonterminals indexed with 6 in the ITV must
be rewritten simultaneously. Some additional nota-
tion will help us to define rewriting precisely. A
reindexing is a one-to-one function on ( , and is
extended to % > by letting
# \x05\x15\x14 \t*
\x14 for
\x144
%:
\x0cand
# \x05\x1a-0/21$3
\t*
-0/\x01/21$3$3
for
-0/\x0c1$3N4
)
\x05% & \t. We
also extend
# to strings in % <
> analogously. We
say that y \x01Uy O
4
% <
> are independent if D\x0cEGFHKJ
\x05y \t\x03\x02
D2EFHKJ
\x05y\x15O,\tc*\x05\x04 .
Definition 4 Let u *
\x05% & \x01K%[: \x01\x06w \x01 \x12 \t be a
\x11 -GMTG and let \x7f * \x7f
\x07 \x01\x0eV\x0eV\x0eV
\x01\x1a\x7f Z \x02 with \x7f
4
w
and \x7f\'b*
\x05\x1a-
b
\x07 \x01\x0eV\x0eV\x0eV\x0c\x01 -
b
W\x08
\t \x03 \x05y\x15b
\x07 \x01\x0eV\x0eV\x0eV \x01Uy\x15b
W\x02
\t. Let
B and \x06 be two ITVs with B j\x1b\x02\x15*
\x05B[b
\x07 \x01\x0eV\x0eV\x0eV\x0c\x01RBfb
W\x08
\t and
\x06 j\x1b\x02T*
\x05\x06\x1bb
\x07 \x01\x0eV\x0eV\x0eV
\x01\x07\x06\x1bb
W\x02
\t. Assume that y is some con-
catenation of all ybtg and that B is some concatena-
tion of all Bfbhg , _=iojAi \x11 , _0il ika\x0eb , and let
# be
some reindexing such that strings
# \x05y \t and B are
independent. The derives relation B\t\x08


\x06 holds
whenever there exists an index 6
4
( such that the
following two conditions are satisfied:
(i) for each j
4
\x12KD H
\x05\x7f \t we have
Bfb
\x07 \x0e\x0e
BIb
W\x02
* BPOb\x0c\x0b
- /21$3
b
\x07 B\'Ob
\x07
- /21$3
b
\x08 \x0e\x0e
B\'Ob
W\x02\x0e
 \x07
- /\x0c1$3
b
W\x02
BPOb
W\x02
such that 6\x10\x0f
4
D2EFHKJ
\x05B Ob\x01\x0b BPOb
\x07 \x0e\x0e
B\'Ob
W\x02
\t, and each
\x06\x1bbhg is obtained from B[btg by replacing each
- /21$3
bhg\x12\x11
with
# \x05y bhg\x12\x11 \t;
(ii) for each j\x13\x0f
4
\x12UD H
\x05\x7f \t we have
6\x14\x0f
4
D\x0cEGFHKJ
\x05BIb
\x07p\x0e\x0e
Bfb
W\x08
\t and B j\x13\x02 * \x06 j\x1b\x02.
We generalize the \x08


relation to \x08


and \x08o<


in
the usual way, to represent derivations.
We can now introduce the notion of generated
language (or generated relation). A start link
of a \x11 -GMTG is a \x11 -dimensional link where at
least one component is
\x05\x13\x12 /
\x073
\t,
\x12 the start sym-
bol, and the rest of the components are
\x05\t. Thus,
there are \x15
Z\x17\x16
_ start links. The language
generated by a \x11 -GMTG u is \x18
\x05u \t*
,
B\x1a\x19 \x1c
B\x1c\x1b\x1d\x08 <


B \x19 \x01 B\x1a\x1b a start link\x01 B \x19 j\x1b\x02*
\x05\torB \x19 j\x1b\x02*
\x05\x1f\x1e
b
\t with
\x1e
b
4
% <
: \x01\x10_i ji \x11 8 . Each ITV in
\x18
\x05u \t is called a multitext. For every \x11 -GMTG u ,
\x18
\x05u \t can be partitioned into \x15
Z \x16
_ subsets, each
containing multitexts derived from a different start
link. These subsets are disjoint, since every non-
empty tuple of a start link is eventually rewritten as
a string, either empty or not.5
A start production is a production whose LHS
is a start link. A GMTG writer can choose the com-
binations of components in which the grammar can
generate, by including start productions with the de-
sired combinations of active components. If a gram-
mar contains no start productions with a certain
combination of active components, then the corre-
sponding subset of \x18
\x05u \t will be empty. Allow-
ing a single GMTG u to generate multitexts with
5
We are assuming that there are no useless nonterminals.
some empty tuples corresponds to modeling rela-
tions of different dimensionalities. This capability
enables a synchronous grammar to govern lower-
dimensional sublanguages/translations. For exam-
ple, an English/Italian GMTG can include Produc-
tion (9), an English CFG, and an Italian CFG. A
single GMTG can then govern both translingual
and monolingual information in applications. Fur-
thermore, this capability simplifies the normaliza-
tion procedure described in Section 6. Otherwise,
this procedure would require exceptions to be made
when eliminating epsilons from start productions.
4 Generative Capacity
In this section we compare the generative capac-
ity of GMTG with that of mildly context-sensitive
grammars. We focus on LCFRS, using the no-
tational variant introduced by Rambow and Satta
(1999), briefly summarized below. Throughout this
section, strings
\x1ev4
%=<
: and vectors of the form
\x06\x05\x1f\x1e
\t
\x02 will be identified. For lack of space, some
proofs are only sketched, or entirely omitted when
relatively intuitive: Melamed et al. (2004) provide
more details.
Let %;: be some terminal alphabet. A function
$
has rank ]od if it is defined on
\x05% <
: \t X"!
\x05% <
: \t $#
!
\x0e\x0e
!
\x05%=<
: \t &%
, for integers
# bc]`_ , _Ci jAi\' . Also,
$ has fan-out
# ] _ if its range is a subset of
\x05%<
: \t .
Let (*) , +\'btg , _ i-,ki
# , _ i~j=i. and _ ixlmi
# b , be string-valued variables. Function
$ is linear
regular if it is defined by an equation of the form
$ \x050/
+
\x07 \x07 \x01\x0eV\x0eV\x0eV
\x010+
\x07 X
1
\x01\x0eV\x0eV\x0eV\x0c\x01 /
+32
\x07 \x01\x0eV\x0eV\x0eV \x010+ 2 &%
1
\t
*
/
(
\x07 \x01\x0eV\x0eV\x0eV\x0c\x010(
1
(24)
where
/
(
\x07 \x01\x0eV\x0eV\x0eV
\x010(
1
represents some grouping into
#
strings of all and only the variables appearing in the
left-hand side, possibly with some additional termi-
nal symbols. (Symbols  , q and \x08


are overloaded
below.)
Definition 5 A Linear Context-Free Rewrit-
ing System (LCFRS) is a quadruple
u *
\x05% & \x01K%;: \x01\x06w \x01 \x12 \t where % & , %;: and
\x12 are
as in GMTGs, every
- 4
% & is associated
with an integer q
\x05\x1a-
\t|] _ with q
\x05\x13\x12 \t5* _ ,
and w is a finite set of productions of the form
-
\x03 $ \x0554
\x07 \x01 4
\x08 \x01\x0eV\x0eV\x0eV
\x01 476
/98K3 \t, where 
\x05%$ \t ] d ,
-
\x01 4
b
4
%\'& , _+iNjTi 
\x05%$ \t and where
$ is a linear
regular function having rank 
\x05%$ \t and fan-out
q
\x05\x1a-
\t, defined on
\x05%C<
: \t$:
/\x0c;
X
3
!
\x0e\x0e
!
\x05%=<
: \t :
/\x0c;3<\x12= >$?\x1a3
.
For every
- 4
%P& and @
4 \x05%=<
: \t$:
/9A 3
, we write
-
\x08


@ if
(i)
-
\x03 $ \x05\t 4
w and
$ \x05\tc*\x05@ ; or else
\x0c(ii)
-
\x03 $ \x0554
\x07 \x01\x0eV\x0eV\x0eV\x0c\x01 4 6
/ 8K3 \t 4
w ,
4
b \x08


@\x12b
4
\x05%C<
: \t$:
/\x0c;

3
for every _ i j i 
\x05%$ \t, and
$ \x05@
\x07 \x01\x0eV\x0eV\x0eV
\x01\x12@
6
/98K3 \t * @ .
The language generated by u is defined as \x18
\x05u \tQ*
, \x1e
\x1c \x12 \x08

 \x05\x1f\x1e
\t\x0b\x01 \x1e 4
%0<
: 8 . Let \x7f
4
w ,
\x7f~*
-
\x03 $ \x0554
\x07 \x01 4
\x08 \x01\x0eV\x0eV\x0eV
\x01 4 6
/98K3 \t. The rank of \x7f
and u are, respectively, 
\x05\x7f \t=* 
\x05%$ \t and 
\x05u \t*
+=
\x05\x7f \t. The fan-out of \x7f and u are, respec-
tively, q
\x05\x7f \tc* q
\x05\x1a-
\t and q
\x05u \tQ*N+  q
\x05\x7f \t.
The proof of the following theorem is relatively
intuitive and therefore omitted.
Theorem 1 For any LCFRS u , there exists some
1-GMTG u O with 
\x05u9O,\tN* 
\x05u \t and q
\x05u O,\tN*
q
\x05u \t such that \x18
\x05u O,\t * \x18
\x05u \t.
Next, we show that the generative capacity of
GMTG does not exceed that of LCFRS. In order
to compare string tuples with bare strings, we in-
troduce two special functions ranging over multi-
texts. Assume two fresh symbols
\x01
\x01\x03\x02 \x0f
4 \x05%\': @
% & \t. For a multitext B we write \x04F
\x05B \t *
B\'O , where BPO j\x1b\x02 *
\x05\x02 \t if B j\x1b\x02 *
\x05\t and
B\'O j\x1b\x02 * B j\x13\x02 otherwise, _vi jsi \x11 . For
a multitext
\x06\x05\x1f\x1e
\x07 \t\x0b\x01 \x05\x1f\x1e
\x08 \t\x0b\x01\x0eV\x0eV\x0eV \x01 \x05\x1f\x1e
Z \t
\x02 with no empty
tuple, we write \x05\x07\x06\t\x08GH
\x05 \x06\x05\x1f\x1e
\x07 \t\x0b\x01 \x05\x1f\x1e
\x08 \t\x0b\x01\x0eV\x0eV\x0eV
\x01 \x05\x1f\x1e
Z \t
\x02\x15\t *
\x1e
\x07
\x01 \x1e
\x08
\x01
\x0e\x0e
\x01 \x1e
Z . We extend both functions to
sets of multitexts in the obvious way: \x05\x07\x06
\x08H
\x05\x18 \t *
,
\x05\x07\x06
\x08H
\x05\x0c\x0b
\t \x1c \x0b!4
\x188 and \x04F
\x05\x18 \tQ*
,
\x04F
\x05\x0c\x0b
\t \x1c \x0b4
\x18A8 .
In a \x11 -GMTG, a production with active com-
ponents, _i i \x11 , is said to be -active. A
\x11 -GMTG whose start productions are all \x11 -active
is called properly synchronous.
Lemma 1 For any properly synchronous \x11 -GMTG
u , there exists some LCFRS u O with 
\x05u9O,\tp*N
\x05u \t
and q
\x05u9O%\t *q
\x05u \t such that \x18
\x05u O,\tc*
\x05\x07\x06
\x08GH
\x05\x18
\x05u \t \t.
Outline of the proof. We set u O *
\x05% O
& \x01P%;: \x01w O \x01
\x12 \x02\x18\t, where % O
& *
,
\x7f \x01Y6
\x02 \x1c\'\x7f
4
w \x01c6
4
D\x0cEGFHKJ
\x05u \tU8@
, \x12 \x02\x1e8 , D2EFHKJ
\x05u \t is the set of all indexes appearing
in the productions of u , and wCO is constructed as
follows. Let \x7f \x01\x7f\'O
4
w with \x7f^* \x7f
\x07 \x01\x0eV\x0eV\x0eV
\x01\x1a\x7f Z \x02,
\x7fO * \x7fO
\x07 \x01\x0eV\x0eV\x0eV
\x01\x1a\x7fOZ \x02, \x7fb *
\x05\x1a-
b
\x07 \x01\x0eV\x0eV\x0eV\x0c\x01 -
b Z \t \x03
\x05y\x14b
\x07 \x01\x0eV\x0eV\x0eV \x01Uy\x15b
W\x08
\t, and \x7f\'Ob *
\x0554
b
\x07 \x01\x0eV\x0eV\x0eV \x01 4
b Z \t \x03
\x05z b
\x07 \x01\x0eV\x0eV\x0eV
\x01Yz b
W
\x11

\t. Assume that \x7f can rewrite the right-
hand side of \x7fPO , that is
\x06\x05z
\x07 \x07 \x01\x0eV\x0eV\x0eV\x0c\x01Yz
\x07\x02W
\x11
X
\t\x0b\x01\x0eV\x0eV\x0eV \x01 \x05z Z
\x07 \x01\x0eV\x0eV\x0eV \x01Yz Z
W
\x11
\\
\t
\x02
\x08

 \x06\x05\x06
\x07 \x07 \x01\x0eV\x0eV\x0eV\x0c\x01\x07\x06
\x07\x02WYX
\t\x0b\x01\x0eV\x0eV\x0eV \x01 \x05\x06\x0eZ
\x07 \x01\x0eV\x0eV\x0eV
\x01\x07\x06\x0eZ
W\x17\\
\t
\x02V
Then there must be at least one index 6 such that for
each j
4
\x12UD H
\x05\x7f \t,
\x05zb
\x07 \x01\x0eV\x0eV\x0eV
\x01Yz b
W
\x11

\t contains exactly
a\x0eb occurrences of 6 .
Let y  * y
\x07 \x07\x15\x0e\x0e
y
\x07\x02WYX
y
\x08 \x07\x15\x0e\x0e
yZ
W\x08\\
. Also let
D2EFHKJ
\x05y  \t*
,
6
\x07 \x01\x0eV\x0eV\x0eV\x0c\x01Y6
6
/  3 8 and let q
\x056Rb\x1b\t be the
number of occurrences of 6Yb appearing in y  . We
define an alphabet
\x17 |*
,
+\'bhg \x1c _ i j i

\x05\x7f \t\x0b\x01_xi l i q
\x056\x17b
\tU8 . For each j and l with
_ i jei \x11 , j
4
\x12UD H
\x05\x7f \t and _~i l i a\x10b ,
we define a string ,
\x05\x7f \x01Yj \x01\x02l \t over
\x17 n@%[: as fol-
lows. Let y bhgn*
\x19
\x07
\x19
\x08!\x0e\x0e
\x19\x0f\x0e
, each
\x19\x0f\x10M4
% > . Then
,
\x05\x7f \x01Yj \x01\x02l \tL*
\x19 O
\x07
\x19 O
\x08 \x0e\x0e
\x19 O
\x0e
, where
\x11 \x19 O
\x10
*
\x19\x12\x10
in case
\x19\x13\x10C4
%;: ; and
\x11 \x19 O
\x10
* + 1\x0c\x14 \x15 in case
\x19\x13\x10e4
)
\x05% & \t, where 6 is
the index of
\x19\x13\x10
and the indicated occurrence
of
\x19\x0f\x10
is the \x16 -th occurrence of such symbol
appearing from left to right in string y  .
Next, for every possible \x7f , \x7fPO , and 6 as above, we
add to wSO a production
\x7f 1 * \x7f O \x01Y6 \x02 \x03 $ \x05 \x7f \x01Y6
\x07 \x02\x13\x01\x0eV\x0eV\x0eV \x01 \x7f \x01Y6
6
/  3 \x02\x18\t\x0b\x01
where
$ \x050/
+
\x07 \x07 \x01\x0eV\x0eV\x0eV\x0c\x010+
\x07:
/21
X
3
1
\x01\x0eV\x0eV\x0eV
\x01 /
+
6
/  3
\x07 \x01\x0eV\x0eV\x0eV\x0c\x010+
6
/  3
:
/\x0c1 <0= \x17\x07? 3
1
\t
*
/
,
\x05\x7f \x01\x10_*\x01\x10_
\t\x0b\x01\x0eV\x0eV\x0eV*\x01\x07,
\x05\x7f \x01 \x11 \x01\x06aGZ \t 1
(each ,
\x05\x7f \x01Yj \x01\x02l \t above satisfies j
4
G\x12KD H
\x05\x7f \t). Note
that
$ is a function with rank 
\x05\x7f \t and fan-out

Z
b
\x07 a\x0eb * q
\x05\x7f \t. Thus we have 
\x05\x7f 1 \t * 
\x05\x7f \t
and q
\x05\x7f 1 \t * q
\x05\x7f \t. Without loss of generality,
we assume that u contains only one production
with
\x12 appearing on the left-hand side, having the
form \x7f \x1b *
\x06\x05\x13\x12 \t\x0b\x01\x0eV\x0eV\x0eV
\x01 \x05\x13\x12 \t
\x02 \x03 \x06\x05\x1a-
\x07 \t\x0b\x01\x0eV\x0eV\x0eV \x01 \x05\x1a-
\x07 \t
\x02.
To complete the construction of wCO , we then
add a last production
\x12 \x02 \x03 $ \x05 \x7f \x1b \x01\x10_ \x02\x18\t where
$ \x050/
+
\x07 \x07 \x010+
\x07
\x08 \x01\x0eV\x0eV\x0eV \x010+
\x07Z
1
\t}*
/
+
\x07 \x07
\x01
+
\x07
\x08
\x01
\x0e\x0e
\x01
+
\x07Z
1
.
We claim that, for each \x7f , \x7f O and 6 as above
\x06\x05\x1a-
\x07\x07 \x07 \x01\x0eV\x0eV\x0eV\x0c\x01 -
\x07\x07\x02WYX
\t\x0b\x01\x0eV\x0eV\x0eV
\x01 \x05\x1a-
\x07Z
\x07 \x01\x0eV\x0eV\x0eV\x0c\x01 -
\x07Z
W\x08\\
\t
\x02
\x08}<

 \x06\x05\x19\x18
\x07 \x07 \x01\x0eV\x0eV\x0eV\x0c\x01 \x18
\x07\x02WYX
\t\x0b\x01\x0eV\x0eV\x0eV
\x01 \x05\x19\x18
Z
\x07 \x01\x0eV\x0eV\x0eV
\x01 \x18
Z
W \\
\t
\x02
iff \x7f\'O\x18\x01Y6
\x02\x03\x08


\x11
/\x19\x18
\x07 \x07 \x01\x0eV\x0eV\x0eV
\x01 \x18
\x07\x02WYX
\x01 \x18
\x08 \x07 \x01\x0eV\x0eV\x0eV \x01 \x1e
Z
W\x08\\
1
. The
lemma follows from this claim.
The proof of the next lemma is relatively intuitive
and therefore omitted.
Lemma 2 For any \x11 -GMTG u , there exists a prop-
erly synchronous \x11 -GMTG u O such that 
\x05u O,\t+*

\x05u \t, q
\x05u9O%\t* +
,
q
\x05u \t\x0b\x01 \x11r8 , and \x18
\x05u9O,\tx*
\x04F
\x05\x18
\x05u \t \t.
Combining Lemmas 1 and 2, we have
Theorem 2 For any \x11 -GMTG u , there exists
some LCFRS u O with 
\x05u9O,\t * 
\x05u \t and
q
\x05u9O%\t * +
,
q
\x05u \t\x0b\x01 \x11 8 such that \x18
\x05u O,\t5*
\x05\x07\x06
\x08H
\x05\x04F
\x05\x18
\x05u \t \t \t.
\x0c5 Weak Language Preservation Property
GMTGs have the weak language preservation prop-
erty, which is one of the defining requirements of
synchronous rewriting systems (Rambow and Satta,
1996). Informally stated, the generative capacity of
the class of all component grammars of a GMTG
exactly corresponds to the class of all projected lan-
guages. In other words, the interaction among dif-
ferent grammar components in the rewriting process
of GMTG does not increase the generative power
beyond the above mentioned class. The next result
states this property more formally.
Let u be a \x11 -GMTG with production set w .
For _5i j i \x11 , the j -th component gram-
mar of u , written \x04\x01\x03\x02
\x04 \x05u \x01Yj \t, is the 1-GMTG
with productions w!b~*
,
\x7f\'b \x1c \x7f
\x07 \x01\x0eV\x0eV\x0eV \x01\x1a\x7fPZ \x02 4
w \x01 \x7fb \x0f*
\x05\t \x03 \x05\tU8 . Similarly, the j -th
projected language of \x18
\x05u \t is \x04\x05\x06\x02
\x04 \x05\x18
\x05u \t\x0b\x01Yj \t *
, \x1e
b \x1c \x06\x05\x1f\x1e
\x07 \t\x0b\x01\x0eV\x0eV\x0eV \x01 \x05\x1f\x1e
Z \t
\x02 4
\x18
\x05u \t\x0b\x01 \x05\x1f\x1e
b\x13\t \x0f*
\x05\tU8 . In general \x18
\x05\x04\x01\x03\x02
\x04 \x05u \x01Yj \t \t \x0f* \x04\x05\x06\x02
\x04 \x05\x18
\x05u \t\x0b\x01Yj \t,
because component grammars \x04\x05\x06\x02
\x04 \x05u \x01Yj \t inter-
act with each other in the rewriting process of
u . To give a simple example, consider the 2-
GMTG u with productions
\x06\x05\x13\x12 \t\x0b\x01 \x05\x13\x12 \t
\x02 \x03 \x06\x05\x15\x16 \t\x0b\x01 \x05\x15\x16 \t
\x02,
\x06\x05\x13\x12 \t\x0b\x01 \x05\x13\x12 \t
\x02\x1f\x03 \x06\x05\x15\x14I-0/
\x073
\t\x0b\x01 \x05\x15\x14 \x12p/
\x073
\t
\x02 and
\x06\x05\x1a-
\t\x0b\x01 \x05\x13\x12 \t
\x02 \x03
\x06\x05\x13\x12 /
\x073
\t\x0b\x01 \x05\x13\x12 /
\x073 \x1a \t
\x02. Then \x18
\x05u \t *
, \x06\x05\x15\x14\x08\x07
\t\x0b\x01 \x05\x15\x14\x08\x07 \x1a\t\x07
\t
\x02 \x1c

 ]df8 , and thus \x04\x05\x06\x02
\x04 \x05\x18
\x05u \t\x0b\x01\x07\x15 \t*
,
\x14\x08\x07 \x1a\t\x07
\x1c 
 ]
df8 . On the other hand, \x18
\x05\x04\x01\x03\x02
\x04 \x05u \x01\x07\x15 \t \t*
,
\x14\x0b\x07 \x1a \x15
\x1c

 \x01 \x16 ]df8 . Let \x0c
\x05LCFRS\t be the class of all lan-
guages generated by LCFRSs. Also let \x0c  /


3 and
\x0c  /\x0e
[3 be the classes of languages \x18
\x05\x04\x05\x06\x02
\x04 \x05u \x01 \t \t and
\x04\x05\x06\x02
\x04 \x05\x18
\x05u \t\x0b\x01 \t \t, respectively, for every \x11|] _ , ev-
ery \x11 -GMTG u and every with _Si i \x11 .
Theorem 3 \x0c  /


3 * \x0c
\x05\x18\x10\x0f\x12\x11\x14\x13
\x12 \t and \x0c  /\x15
f3 *
\x0c
\x05\x18\x16\x0f\x12\x11\x17\x13
\x12 \t.
Proof. The \x18 cases directly follow from Theo-
rem 1.
Let u be some \x11 -GMTG and let be an integer
such that _ i i \x11 . It is not difficult to see that
\x05\x07\x06
\x08H
\x05\x04F
\x05\x18
\x05\x04\x05\x06\x02
\x04 \x05u \x01 \t \t \t \t*\t\x18
\x05\x04\x05\x06\x02
\x04 \x05u \x01 \t \t. Hence
\x18
\x05\x04\x05\x06\x02
\x04 \x05u \x01 \t \t can be generated by some LCFRS, by
Theorem 2.
We now define a LCFRS u O such that
\x18
\x05u O\x0e\t* \x04\x05\x06\x02
\x04 \x05\x04GF
\x05\x18
\x05u \t \t\x0b\x01 \t \t. Assume u O O}*
\x05%\'& \x01K% : \x01\x06w \x01 \x12 \t is a properly synchronous \x11 -GMTG
generating \x04F
\x05\x18
\x05u \t \t (Lemma 2). Let uSO*
\x05% O
& \x01K%;: \x01\x06w O \x01 \x12 \x02\x18\t, where % O
& and w O are constructed
from u O O almost as in the proof of Lemma 1.
The only difference is in the definition of strings
,
\x05\x7f \x01Yj \x01\x02l \t and the production rewriting
\x12 \x02, speci-
fied as follows (we use the same notation as in the
proof of Lemma 1). ,
\x05\x7f \x01Yj \x01\x02l \tL*
\x19 O
\x07
\x19 O
\x08 \x0e\x0e
\x19 O
\x0e
, where
for each \x19 : (i)
\x19 O
\x10
*
\x19\x0f\x10
if
\x19\x0f\x10e4
%[: and j * ;
(ii)
\x19 O
\x10
*
\x16 if
\x19\x0f\x10 4
%[: and j \x0f* ; (iii)
\x19 O
\x10
* + 1\x0c\x14 \x15
if
\x19\x12\x10{4
)
\x05% & \t, with 6 , \x16 as in the original proof.
Finally, the production rewriting
\x12 \x02 has the form
\x12 \x02 \x03 $ \x05 \x7f\x1c\x1b \x01\x10_ \x02\x18\t, where
$ \x050/
+
\x07 \x07 \x010+
\x07
\x08 \x01\x0eV\x0eV\x0eV
\x010+
\x07Z
1
\t=*
/
+
\x07 \x07 +
\x07
\x08!\x0e\x0e
+
\x07Z
1
. To conclude the proof, note that
\x04\x05\x06\x02
\x04 \x05\x18
\x05u \t\x0b\x01 \t \t and \x04\x05\x06\x02
\x04 \x05\x04F
\x05\x18
\x05u \t \t\x0b\x01 \t \t can differ
only with respect to string \x02 . The theorem then fol-
lows from the fact that LCFRS is closed under in-
tersection with regular languages (Weir, 1988).
6 Generalized Chomsky Normal Form
Certain kinds of text analysis require a grammar in a
convenient normal form. The prototypical example
for CFG is Chomsky Normal Form (CNF), which is
required for CKY-style parsing. A \x11 -GMTG is in
Generalized Chomsky Normal Form (GCNF) if it
has no useless links or useless terminals, and every
production is in one of two forms:
(i) A nonterminal production has rank = 2 and
no terminals or
\x16 s on the RHS.
(ii) A terminal production has exactly one com-
ponent of the form
-
\x03 \x14 , where
-x4
% & and
\x14 4
%;: . The other components are inactive.
The algorithm to convert a GMTG to GCNF has
the following steps: (1) add a new start-symbol (2)
isolate terminals, (3) binarize productions, (4) re-
move
\x16 s, (5) eliminate useless links and terminals,
and (6) eliminate unit productions. The steps are
generalizations of those presented by Hopcroft et al.
(2001) to the multidimensional case with disconti-
nuities. The ordering of these steps is important, as
some steps can restore conditions that others elim-
inate. Traditionally, the terminal isolation and bi-
narization steps came last, but the alternative order
reduces the number of productions that can be cre-
ated during
\x16 -elimination. Steps (1), (2), (5) and (6)
are the same for CFG and GMTG, except that the
notion of nonterminal in CFG is replaced with links
in GMTG. Some complications arise, however, in
the generalization of steps (3) and (4).
6.1 Step 3: Binarize
The third step of converting to GCNF is binarization
of the productions, making the rank of the grammar
two. For ]od and
# ] _ , we write D-GMTG
/ 2 3
to
represent the class of all \x11 -GMTGs with rank and
fan-out
# . A CFG can always be binarized into an-
other CFG: two adjacent nonterminals are replaced
with a single nonterminal that yields them. In con-
trast, it can be impossible to binarize a \x11 -GMTG
/ 2 3
into an equivalent \x11 -GMTG\x08 . From results pre-
sented by Rambow and Satta (1999) it follows that,
\x0c(S)
(S)\x01
\x03
\x05N\x07PatV\x08wentP(homeA)early\t
\x05P(damoyN\x07PatA)ranoV\x08pashol\t\x01
Pat went home early
damoy
Pat
rano
pashol
Figure 1: A production that requires an increased
fan-out to binarize, and its 2D illustration.
for every fan-out
# ] \x15 and rank ]\x01 , there
are some index orderings that can be generated by
\x11 -GMTG
/ 2 3
but not \x11 -GMTG
/ 2

 \x073
. The distin-
guishing characteristic of such index orderings is
apparent in Figure 1, which shows a production in
a grammar with fan-out two, and a graph that illus-
trates which nonterminals are coindexed. No two
nonterminals are adjacent in both components, so
replacing any two nonterminals with a single non-
terminal causes a discontinuity. Increasing the fan-
out of the grammar allows a single nonterminal to
rewrite as non-adjacent nonterminals in the same
string. Increasing the fan-out can be necessary even
for binarizing a 1-GMTG production such as:
\x06\x05S,S\t
\x02 \x03 \x06\x05N\x07 V\x08 P( A) \x01P( N\x07A) V\x08 \t
\x02 (25)
To binarize, we nondeterministically split each
nonterminal production \x7f\x1a\x0b of rank  \x15 into two
nonterminal productions \x7f
\x07 and \x7f
\x08 of rank

, but
possibly with higher fan-out. Since this algorithm
replaces with two productions that have rank

,
recursively applying the algorithm to productions of
rank greater than two will reduce the rank of the
grammar to two. The algorithm follows:
(i) Nondeterministically chose 
 links to be re-
moved from \x7f \x0b and replaced with a single link
to make \x7f
\x07, where \x15}i

 i
\x16
_ . We call
these links the m-links.
(ii) Create a new ITV B . Two nonterminals are
neighbors if they are adjacent in the same
string in a production RHS. For each set of m-
link neighbors in component in \x7f \x0b , place that
set of neighbors into the th component of B
in the order in which they appeared in \x7f \x0b , so
that each set of neighbors becomes a different
string, for _Si i \x11 .
(iii) Create a new unique nonterminal, say
4
, and
replace each set of neighbors in production \x7f \x0b
with
4
, to create \x7f
\x07 . The production \x7f
\x08 is
4
\x01\x0eV\x0eV\x0eV\x0c\x01 4
\x02 \x03 B
For example, binarization of the productions for the
English/Russian multitext [(Pat went home early),
(damoy Pat rano pashol)]6 in Figure 1 requires that
we increase the fan-out of the language to three. The
binarized productions are as follows:
\x05S\t
\x05S\t\x01
\x03
\x05N\x07PatVP\x08 \t
\x05VP\x08 N\x07PatVP\x08 \t\x01
(26)
\x05VP\t
\x05VP\x01VP\t\x01
\x03
\x05V\x07 A\x08early\t
\x05V\x07 \x01 A\x08ranoV\x07 \t\x01
(27)
\x05V\t
\x05V\x01 V\t\x08\x01
\x03
\x05V\x07wentP\x08home\t
\x05P\x08damoy \x01V\x07pashol \t\x02\x01
(28)
6.2 Step 4: Eliminate
\x16 s
Grammars in GCNF cannot have
\x16 s in their
productions. Thus, GCNF is a more restrictive
normal form than those used by Wu (1997) and
Melamed (2003). The absence of
\x16 s simplifies
parsers for GMTG (Melamed, 2004). Given a
GMTG u with
\x16 in some productions, we give
the construction of a weakly equivalent gram-
mar u9O without any
\x16 s. First, determine all
nullable links and associated strings in u . A
link \x02 *
\x06\x05\x1a-
\x07 \x01\x0eV\x0eV\x0eV\x0c\x01 -
\x07 \t\x0b\x01\x0eV\x0eV\x0eV
\x01 \x05\x1a-
Z \x01\x0eV\x0eV\x0eV
\x01 -
Z \t
\x02
is nullable if \x02 <
\x08 B , where B *
\x06\x05y
\x07 \x07 \x01\x0eV\x0eV\x0eV
\x01Uy
\x07\x02WYX
\t\x0b\x01\x0eV\x0eV\x0eV
\x01 \x05yZ
\x07 \x01\x0eV\x0eV\x0eV
\x01UyZ
W\x08\\
\t
\x02 is an
ITV where at least one ybhg is
\x16 . We say the link
\x02 is nullable and the string at address
\x05\x15 \x01\x06a \t in
\x02 is nullable. For each nullable link, we create
\x15
\x07
versions of the link, where 
 is the number of
nullable strings of that link. There is one version for
each of the possible combinations of the nullable
strings being present or absent. The version of the
link with all strings present is its original version.
Each non-original version of the link (except in the
case of start links) gets a unique subscript, which is
applied to all the nonterminals in the link, so that
each link is unique in the grammar. We construct
a new grammar u O whose set of productions w O
is determined as follows: for each production, we
identify the nullable links on the RHS and replace
them with each combination of the non-original
versions found earlier. If a string is left empty
during this process, that string is removed from the
RHS and the fan-out of the production component
is reduced by one. The link on the LHS is replaced
with its appropriate matching non-original link.
There is one exception to the replacements. If a
production consists of all nullable strings, do not
include this case. Lastly, we remove all strings on
the RHS of productions that have
\x16 s, and reduce
the fan-out of the productions accordingly. Once
6
The Russian is topicalized but grammatically correct.
\x0cagain, we replace the LHS link with the appropriate
version.
Consider the example grammar:
\x06\x05\x13\x12 \t\x0b\x01 \x05\x13\x12 \t
\x02\x10\x03 \x06\x05\x1a-
\x07 4
\x08 -
\x07 \t\x0b\x01 \x0554
\x08 -
\x07 \t
\x02 (29)
\x06\x05\x1a-
\x01 -
\t\x0b\x01 \x05\x1a-
\t
\x02 \x03 \x06\x05\x15\x14 \x01 4
\x07 \t\x0b\x01 \x0554
\x07 \t
\x02 (30)
\x06\x0554
\t\x0b\x01 \x0554
\t
\x02\x0f\x03 \x06\x05\x1b\x1a \t\x0b\x01 \x05\x15\x16 \t
\x02 (31)
\x06\x0554
\t\x0b\x01 \x0554
\t
\x02\x0f\x03 \x06\x05\x1b\x1a \t\x0b\x01 \x05\x1b\x1a \x1a \t
\x02 (32)
We first identify which links are nullable. In this
case
\x06\x05\x1a-
\x01 -
\t\x0b\x01 \x05\x1a-
\t
\x02 and
\x06\x0554
\t\x0b\x01 \x0554
\t
\x02 are nullable so we
create a new version of both links:
\x06\x05\x1a-
\x07 \x01 -
\x07 \t\x0b\x01 \x05\t
\x02
and
\x06\x0554
\x07 \t\x0b\x01 \x05\t
\x02. We then alter the productions. Pro-
duction (31) gets replaced by (40). A new produc-
tion based on (30) is Production (38). Lastly, Pro-
duction (29) has two nullable strings on the RHS,
so it gets altered to add three new productions, (34),
(35) and (36). The altered set of productions are the
following:
\x06\x05\x13\x12 \t\x0b\x01 \x05\x13\x12 \t
\x02 \x03 \x06\x05\x1a-
\x07 4
\x08 -
\x07 \t\x0b\x01 \x0554
\x08 -
\x07 \t
\x02 (33)
\x06\x05\x13\x12 \t\x0b\x01 \x05\x13\x12 \t
\x02 \x03 \x06\x05\x1a-
\x07 4
\x08\x07
-
\x07 \t\x0b\x01 \x05\x1a-
\x07 \t
\x02 (34)
\x06\x05\x13\x12 \t\x0b\x01 \x05\x13\x12 \t
\x02 \x03 \x06\x05\x1a-
\x07\x07
4
\x08 -
\x07\x07 \t\x0b\x01 \x0554
\x08 \t
\x02 (35)
\x06\x05\x13\x12 \t\x0b\x01 \x05\t
\x02 \x03 \x06\x05\x1a-
\x07\x07
4
\x08\x07
-
\x07\x07 \t\x0b\x01 \x05\t
\x02 (36)
\x05\x1a-
\x01 -
\t\x0b\x01 \x05\x1a-
\t
\x02 \x03 \x06\x05\x15\x14 \x01 4
\x07 \t\x0b\x01 \x0554
\x07 \t (37)
\x06\x05\x1a-
\x07 \x01 -
\x07 \t\x0b\x01 \x05\t
\x02\x10\x03 \x06\x05\x15\x14 \x01 4
\x07\x07 \t\x0b\x01 \x05\t
\x02 (38)
\x06\x0554
\t\x0b\x01 \x0554
\t
\x02\x10\x03 \x06\x05\x1b\x1a \t\x0b\x01 \x05\x1b\x1a \x1a \t
\x02 (39)
\x06\x0554
\x07 \t\x0b\x01 \x05\t
\x02\x10\x03 \x06\x05\x1b\x1a \t\x0b\x01 \x05\t
\x02 (40)
Melamed et al. (2004) give more details about
conversion to GCNF, as well as the full proof of our
final theorem:
Theorem 4 For each GMTG u there exists a
GMTG u O in GCNF generating the same set of mul-
titexts as u but with each
\x05\x15\x16 \t component in a multi-
text replaced by
\x05\t.
7 Conclusions
Generalized Multitext Grammar is a convenient and
intuitive model of parallel text. In this paper, we
have presented some formal properties of GMTG,
including proofs that the generative capacity of
GMTG is comparable to ordinary LCFRS, and that
GMTG has the weak language preservation prop-
erty. We also proposed a synchronous generaliza-
tion of Chomsky Normal Form, laying the founda-
tion for synchronous CKY parsing under GMTG. In
future work, we shall explore the empirical proper-
ties of GMTG, by inducing stochastic GMTGs from
real multitexts.
Acknowledgments
Thanks to Owen Rambow and the anonymous re-
viewers for valuable feedback. This research was
supported by an NSF CAREER Award, the DARPA
TIDES program, the Italian MIUR under project
PRIN No. 2003091149 005, and an equipment gift
from Sun Microsystems.
References
A. Aho and J. Ullman. 1969. Syntax directed translations and
the pushdown assembler. Journal of Computer and System
Sciences, 3:3756, February.
T. Becker, A. Joshi, and O. Rambow. 1991. Long-distance
scrambling and tree adjoining grammars. In Proceedings of
the 5th Meeting of the European Chapter of the Association
for Computational Linguistics (EACL), Berlin, Germany.
E. Bertsch and M. J. Nederhof. 2001. On the complexity
of some extensions of RCG parsing. In Proceedings of
the 7th International Workshop on Parsing Technologies
(IWPT), pages 6677, Beijing, China.
M. Dras and T. Bleam. 2000. How problematic are clitics for
S-TAG translation? In Proceedings of the 5th International
Workshop on Tree Adjoining Grammars and Related For-
malisms (TAG+5), Paris, France.
J. Hopcroft, R. Motwani, and J. Ullman. 2001. Introduction to
Automota Theory, Languages and Computation. Addison-
Wesley, USA.
I. Dan Melamed, G. Satta, and B. Wellington. 2004. Gener-
alized multitext grammars. Technical Report 04-003, NYU
Proteus Project. http://nlp.cs.nyu.edu/pubs/.
I. Dan Melamed. 2003. Multitext grammars and synchronous
parsers. In Proceedings of the Human Language Technology
Conference and the North American Association for Com-
putational Linguistics (HLT-NAACL), pages 158165, Ed-
monton, Canada.
I. Dan Melamed. 2004. Statistical machine translation by pars-
ing. In Proceedings of the 42nd Annual Meeting of the As-
sociation for Computational Linguistics (ACL), Barcelona,
Spain.
O. Rambow and G. Satta. 1996. Synchronous models of lan-
guage. In Proceedings of the 34th Annual Meeting of the As-
sociation for Computational Linguistics (ACL), Santa Cruz,
USA.
O. Rambow and G. Satta. 1999. Independent parallelism in
finite copying parallel rewriting systems. Theoretical Com-
puter Science, 223:87120, July.
O. Rambow. 1995. Formal and Computational Aspects of Nat-
ural Language Syntax. Ph.D. thesis, University of Pennsyl-
vania, Philadelphia, PA.
S. Shieber. 1994. Restricting the weak-generative capactiy of
synchronous tree-adjoining grammars. Computational In-
telligence, 10(4):371386.
D. J. Weir. 1988. Characterizing Mildly Context-Sensitive
Grammar Formalisms. Ph.D. thesis, Department of Com-
puter and Information Science, University of Pennsylvania.
D. Wu. 1997. Stochastic inversion transduction grammars and
bilingual parsing of parallel corpora. Computational Lin-
guistics, 23(3):377404, September.
D. H. Younger. 1967. Recognition and parsing of context-free
languages in time
\x01
. Information and Control, 10(2):189
208, February.
\x0c'