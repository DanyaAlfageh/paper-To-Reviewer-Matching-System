CITATION design a composite kernel consisting of an entity linear kernel and a standard CTK, obtaining the F-measure of 72.1 on the 7 relation types in the ACE CITATION corpus,,
This tree setup is similar to linear entity kernel explored by CITATION,,
CITATION point out that both SPT and the convolution tree kernel are context-free,,
3.1 Constituent Dependencies in Parse Tree CITATION explore five kinds of tree spans and find that the Shortest Path-enclosed Tree (SPT) achieves the best performance,,
CITATION further indicates that among these entity features, entity type, subtype, and mention type, as well as the base form of predicate verb, contribute most while the contribution of other features, such as entity class, headword and GPE role, can be ignored,,
Although the first conjunct is always considered as the headword CITATION, actually all the conjuncts play an equal role in relation extraction,,
all the constituents outside the linking path should be removed) and CS-CSPT CITATION further recovers part of necessary context-sensitive information outside SPT, this justifies that SPT performs well, while CS-SPT outperforms SPT,,
se the ACE CITATION corpus as the benchmark data,,
There exist a considerable number of constituent dependencies in CFG as described by CITATION,,
CITATION define sever,,
CITATION define several feature-based composite kernels to capture diverse linguistic knowledge and achieve the F-measure of 70.4 on the 7 relation types in the ACE CITATION corpus,,
CITATION proposed a slightly generalized version of this kernel between dependency trees, in which a successful match of two relation instances requires the nodes to be at the same layer and in the identical path starting from the roots to the current nodes,,
In the example sentence they re here, which is excerpted from the ACE CITATION corpus, there exists a relationship Physical.Located between the entities they [PER] and here [GPE.Population-Center],,
CITATION describe a convolution tree kernel (CTK, CITATION) to investigate various structured information for relation extraction and find that the Shortest Pathenclosed Tree (SPT) achieves the F-measure of 67.7 on the 7 relation types of the ACE CITATION corpus,,
CITATION further propose Context-Sensitive SPT (CS-SPT), which can dynamically determine the tree span by extending the necessary predicate-linked path information outside SPT,,
CITATION further indicates that among these entity features, entity type, s,,
CITATION proposed a slightly generalized version of this kernel between dependency trees, in which a successful match of two relation instances requires t,,
polynomial degree d=2 and coefficient I=0.3), we get the so far best performance of 77.1 in F-measure for 7 relation types on the ACE CITATION data set,,
Improvements of different tree setups over SPT on the ACE CITATION corpus Finally, Table 4 compares our system with other state-of-the-art kernel-based systems on the 7 relation types of the ACE CITATION corpus,,
Thereafter, we employ the standard CTK CITATION to compute the similarity between two UPSTs, since this CTK and its variations are successfully applied in syntactic parsing, semantic role labeling CITATION and relation extraction (CITATION; CITATION) as well,,
While kernel methods using the dependency tree CITATION and the shortest dependency path CITATION suffer from low recall performance, convolution tree kernels (CITATION; CITATION) over syntactic parse trees achieve comparable or even better ,,
Experiments by CITATION show that lin,,
Similar to CITATION, this method also suffers from high precision but low recall,,
In fact, SPT CITATION can be arrived at by carrying out part of the above removal operations using a single rule (i.e,,
Experiments by CITATION show that linear kernel using only entity features contributes much when combined with the convolution parse tree kernel,,
Performance of Unified Parse and Semantic Trees (UPSTs) on the 7 relation types of the ACE CITATION corpus In Table 3 we summarize the improvements of different tree setups over SPT,,
This dependency relationship offers a very condensed representation of the information needed to assess the relationship in the forms of the dependency tree CITATION or the shortest dependency path CITATION that includes both entities,,
However, detailed research CITATION shows that its difficult to extract new effective features to further improve the extraction accuracy,,
From prior work (Zelenko et al., 2003; CITATION; CITATION) to current research (CITATION; CITATION), kernel methods have been showing more and more potential in relation extraction,,
However, detailed evaluation CITATION indicates that the UPST achieves the best performance when the feature nodes are attached under the top node,,
Evaluation on the ACE CITATION corpus shows that our dynamic syntactic parse tree outperforms all previous tree spans, and the composite kernel combining this tree kernel with a linear state-of-the-art feature-based kernel, achieves the so far best performance,,
It shows that our UPST outperforms all previous tree setups using one single kernel, and even better than two previous composite kernels (CITATION; CITATION),,
It achieves the so far best F-measure of 75.8 on the 7 relation types in the ACE CITATION corpus,,
In the example sentence they re here, which is excerpted from the ACE CITATION corpus, there exists a relations,,
While kernel methods using the dependency tree CITATION and the shortest dependency path CITATION suffer from low recall performance, convolution tree kernels (CITATION; CITATION) over syntactic parse trees achieve,,
CITATION develop a shortest path dependency tree kernel, which simply counts the number of common word classes at each node in the shortest paths between two entities in dependency trees,,
5.1 Experimental Setting For evaluation, we use the ACE CITATION corpus as the benchmark data,,
In our experimentations, SVMlight CITATION wit,,
CITATION describe a composite kernel to integrate a context-sensitive CTK and a state-of-the-art linear kernel,,
For those interested in feature-based methods, please refer to CITATION for more details,,
While kernel methods using the dependency tree CITATION and the shortest dependency path CITATION suffer from low recall performance, convolution tree kernels (CITATION; CITATION) over syntactic parse trees achieve comparable or even better performance than feature-based methods,,
Furthermore, when the UPST (FPT) kernel is combined with a linear state-of-the-state featurebased kernel CITATION into a composite one via polynomial interpolation in a setting similar to CITATION (i.e,,
They expand SPT to CS-SPT by dynamically including necessary predicate-linked path information and extending the standard CTK to contextsensitive CTK, obtaining the F-measure of 73.2 on the 7 relation types of the ACE CITATION corpus,,
In our experimentations, SVMlight CITATION with the tree kernel function CITATION 2 is selected as our classifier,,
stituents outside the linking path should be removed) and CS-CSPT CITATION further recovers part of necessary context-sensitive information outside SPT, this justifies that SPT performs well, while CS-SPT outperforms SPT,,
5.2 Experimental Results Table 1 evaluates the contributions of different kinds of constituent dependencies to extraction performance on the 7 relation types of the ACE CITATION corpus using the convolution parse tree kernel as depicted in Figure 1,,
