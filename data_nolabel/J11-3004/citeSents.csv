The detailed proof has been published previously (Gomez-Rodrguez, Weir, and Carroll 2008; CITATION),,
We now define the concepts of gap degree and well-nestedness CITATION,,
3.6 CITATION CITATION describes a shift-reduce algorithm for projective dependency parsing, later extended by Nivre, Hall, and Nilsson (2004),,
3.6 CITATION CITATION describes a shift-reduce algorithm for projective dependency parsing, later extended by N,,
6.5 Covingtons (1990, 2001) Non-Projective Parser Covingtons non-projective parsing algorithm (CITATION, 2001) reads the input from left to right, establishing dependency links between the current word and previous words in the input,,
CITATION show that, in the case of lexicalized TAG, this factor is a function of the input length n; hence the additional complexity,,
[2005], discussed in Section 6.4), the problem is intractable in the absence of this assumption CITATION,,
For k = 3, MH3 is a step refinement of the parser by CITATION that parses projective structures only, but by modifying the bound k we can define polynomial-time algorithms that parse larger sets of non-projective dependency structures,,
For example, those described by CITATION, CITATION, and Kahane, Nasr, and Rambow (1998) are based on the formalizations of dependency grammar CFG-like rules described by CITATION and CITATION,,
Given the number of indices manipulated in the schema, a nondeterministic implementation of Attd has exponential complexity with respect to input length (though in the implementation of Attardi CITATION, control structures determinize the algorithm),,
A parsing schema can be used to obtain a working implementation of a parser by using deductive engines such as the ones described by CITATION and Gomez-Rodrguez, Vilares, and Alonso (2009), or the Dyna language (Eisner, Goldlust, and Smith 2005),,
arsing schema, we describe the original LG parser by CITATION), and show how projective parsing schemata, such as those seen in Section 3, can be adapted to obtain new LG parsers,,
es appear to have non-projective syntactic structure, something that arises in many languages CITATION, and is particularly common in free word order languages such as Czech,,
CITATION), with minor changes to adapt it to dependency grammar (for example, the SCANNER always moves the dot over the head symbol , rather than over a terminal symbol),,
2011 Association for Computational Linguistics \x0cComputational Linguistics Volume 37, Number 3 are able to represent non-projective structures CITATION, which is important when parsing free word order languages where discontinuous constituents are common,,
3.2 CITATION Based on the number of free variables used in deduction steps of Collinss parser, it is apparent that its time complexity is O(n5 ): There are O(n5 ) combinations of index values with which each of its LINK steps can be executed.5 This complexity arises because a parentless word (head) may appear in any position in the items generated by the parser; the complexity can be reduced to O(n3 ) by ensuring that parentless words only appear at the first or last position of an item,,
This set of structures is closely related to LCFRS with bounded fan-out and unbounded production length, and parsing in this formalism is known to be NP-complete CITATION,,
\x02 Theorem 4 The CITATION parsing schema is correct,,
When described for head automaton grammars CITATION, this algorithm appears to be more complex to understand and implement than the previous one, requiring four different kinds of items to keep track of the state of the automata used by the grammars,,
For instance, the Prague Dependency Treebank CITATION contains no structures with gap degree greater than 4,,
Quoting CITATION, page 99), Because the parser operates one word at a time, unity can only be checked at the end of the whole process: did it produce a tree with a single root that comprises all of the words? Therefore, a postprocessing mechanism is needed to determine which of the generated structures are, in fact, valid trees,,
We use the disjunctive form notation CITATION to denote linking requirements: The requirements of words are expressed as a set of disjuncts,,
The parser runs in time O(n7 ), the same complexity as the best existing algorithms for LTAG CITATION, and can be optimized to O(n6 ) in the nonlexicalized case,,
6.2 CITATION The non-projective parser of CITATION extends the algorithm of CITATION, adding additiona,,
The formalism can be made general enough to include these parsers by using a novel way of representing intermediate states of dependency parsers based on a form of dependency trees that include nodes labelled with preterminals and terminals (Gomez-Rodrguez, Carroll, and Weir 2008; CITATION),,
CITATION defines various relations between schemata that fall into two categories: generalization relations, which are used to obtain more fine-grained versions of parsers, and filtering relations, which can be seen as the converse of generalization and are used to reduce the number of items and/or steps needed for parsing,,
Specifically, Kuhlmann shows that linear context-free rewriting systems 562 \x0cGomez-Rodrguez, Carroll, and Weir Dependency Parsing Schemata (LCFRS) with fan-out k (Vijay-Shanker, Weir, and Joshi 1987; CITATION) induce the set of dependency structures with gap degree at most k 1; coupled CFG in which the maximal rank of a nonterminal is k CITATION induces the se,,
plete description can be found in CITATION, adapted for dependency parsing,,
Specifically, Kuhlmann shows that linear context-free rewriting systems 562 \x0cGomez-Rodrguez, Carroll, and Weir Dependency Parsing Schemata (LCFRS) with fan-out k (Vijay-Shanker, Weir, and Joshi 1987; CITATION) induce the set of dependency structures with gap degree at most k 1; coupled CFG in which the maximal rank of a nonterminal is k CITATION induces the set of wellnested dependency structures with gap degree at most k 1; and finally, LTAG CITATION induces the set of well-nested dependency structures with gap degree at most 1,,
6.4 MST Parser CITATION McDonald et al,,
Position 0 corresponds to an artificial word w0 (the wall) that the LG formalism inserts at the beginning of every input sentence CITATION,,
LG parsing schemata based on the parsers of CITATION and CITATION are not shown here for space reasons, but are presented by CITATION,,
CITATION observe that most non-projective dependency structures appearing in practice contai,,
We have also clarified various relations between parsers which were originally formulated very differentlyfor example, establishing the relation between the dynamic programming algorithm of CITATION and the ,,
Other parsers, such as that of CITATION, use grammars with CFG-like rules which encode the preferred order of dependents for each given governor,,
The definition of dependency parsing schemata was first published by Gomez-Rodrguez, Carroll, and Weir CITATION, along with some of the projective schemata presented here and their associated proofs,,
e natural language sentences appear to have non-projective syntactic structure, something that arises in many languages CITATION, and is particularly common in free word order languages such as Czech,,
3.7 Covingtons (2001) Projective Parser CITATION defines a non-projective dependency parser, and a projective variant called Algorithm LSUP (for List-based Search with Uniqueness and Projectivity),,
This is the idea behind the parser defined by CITATION, which is still in wide use today (McDonald, Crammer, and Pereira 2005; CITATION),,
Deductive approaches have been used in the past to describe individual dependency parsers: In CITATION, 2010) a grammatical deduction system was used to define a parser for regular dependency grammars,,
roduced by CITATION, 1993), is a theory of syntax whose structural representation of sentences is closely related to projective dependency representations, but with some important differences.11 Undirected links: Like dependency formalisms, LG represents the structure of sentences as a set of links between words,,
CITATION provide examples of some linguistic phenomena that cause ill-nestedness,,
2 Coherent (final) items are called correct (final) items in the original formulation by CITATION,,
10 Arabic CITATION, Czech CITATION, Danish CITATION, Dutch (van der Beek et al,,
The algorithm Attd where d is finite is not correct with respect to the set of non-projective dependency structures, because it only parses a restricted subset of them CITATION,,
However, many of the algorithms (CITATION; CITATION) are not traditionally considered to be grammar-driven, because they do not use an explicit formal grammar; decisions about which dependencies to create are taken individually, using probabilistic models CITATION or classifiers CITATION,,
For example, the algorithm of Kahane, Nasr, and Rambow (1998) uses a strategy similar to CITATION, but with the following initializer step instead of the INITTER and PREDICTOR: INITTER: [A(), i, i 1] A() P 1 i n The initialization step specified by Kahane, Nasr, and Rambow (1998) differs from this (directly consuming a nonterminal from the input) but this gives an incomplete algorithm,,
We must verify that every deduction step in the CITATION schema can be emulated by a sequence of inferences in the CITATION schema,,
COMBINER steps follow the same mechanism as those in the algorithm of CITATION, and LINK steps work analogously to those of CITATION, so this schema can be seen as being intermediate between those two algorithms,,
Some existing dependency parsing algorithms, for example, the algorithm of CITATION, involve steps that connect spans which can represent disconnected dependency graphs,,
However, dependency trees cannot express the fact that a particular structure has been predicted, but not yet built; this is required for grammar-based algorithms such as those of CITATION and Kahane, Nasr, and Rambow (1998),,
\x02 Theorem 2 CITATION sr CITATION,,
3 Derivable items are called valid items in the original formulation by CITATION,,
When described for head automaton grammars CITATION, this algorithm appears to be more complex to understand and implement than the previous one, requiring four different kinds of items to keep track of the state of the,,
CITATION investigates several such classes, based on well-nestedness and gap degree constraints (Bodirsky, Kuhlmann, and Mohl 2005), relating them to lexicalized constituency grammar formalisms,,
For example, CITATION presents a deduction system for a non-projective parser which uses a grammar formalism called regular dependency grammars,,
strategy similar to CITATION, but with the following initializer step instead of the INITTER and PREDICTOR: INITTER: [A(), i, i 1] A() P 1 i n The initialization step specified by Kahane, Nasr, and Rambow (1998) differs from this (directly consuming a nonterminal from the input) but this gives an incomplete algorithm,,
Theorem 1 CITATION sr CITATION,,
The constituency parser defined by CITATION for these grammars also adds an n2 factor for each unit increment of k,,
By generalizing the linking steps in Eisner and Sattas parser so that the head of each item can be in any position, we obtain an O(n5 ) parser which can be filtered into the parser of CITATION by eliminating the COMBINER steps,,
nce, the Prague Dependency Treebank CITATION contains no structures with gap degree greater than 4,,
In line with the observation that most non-projective structures appearing in practice are only slightly non-projective CITATION, we characterize a sense in which the structures appearing in treebanks are only slightly ill-nested,,
) items are called correct (final) items in the original formulation by CITATION,,
Although this covers the vast majority of the structures that occur in natural language treebanks CITATION, a significant number of sente,,
For p &gt; 1, we use the concept of order annotations (CITATION; CITATION),,
 structures (CITATION; CITATION),,
3.4 CITATION CITATION define a deterministic, shift-reduce dependency parser guided by support vector machines, which achieves over 90% dependency accuracy on Section 23 of the Wall Street Journal Penn Treebank,,
These dependency parsing schemata are versions of the homonymous schemata whose complete description can be found in CITATION, adapted for dependency parsing,,
The full correctness proof has previously been published (Gomez-Rodrguez, Weir, and Carroll 2008; CITATION), so for reasons of space we only sketch the proof here,,
3.1 CITATION One of the most straightforward projective dependency parsing strategies was introduced by CITATION, and is based on the CYK bottomup parsing strategy (Kasami 1965; Younger 1967),,
Again, this complexity result is in line with what could be expected from previous research in constituency parsing: CITATION shows that the set of well-nested dependency structures with gap degree at most k is closely related to coupled CFG in which the maximal rank of a nonterminal is k + 1,,
However, some natural language sentences appear to have non-projective syntactic structure, something that arises in many languages CITATION, and is particularly common in free word order languages such as Czech,,
Note that parsing unrestricted ill-nested structures, even when the gap degree is bounded, is NP-complete: These structures are equivalent to LCFRS for which the recognition problem is NP-complete CITATION,,
3.1 CITATION One of the most straightforward projective dependency parsing strategi,,
CITATION defines various relations between schemata that fall into two categories: generalization relations, which are used to obtain more fin,,
Finally, we observe that that some well-known parsing algorithms discussed here (CITATION; CITATION) rely on statistically-driven control mechanisms that fall below the abstraction level of parsing schemata,,
2002), Latin CITATION, Portuguese CITATION, Slovene (Dzeroski et al,,
CITATION observe that most non-projective dependency structures appearing in practice contain only small proportions of non-projective arcs,,
ibe the original LG parser by CITATION), and show how projective parsing schemata, such as those seen in Section 3, can be adapted to obtain new LG parsers,,
When executing this schema with a deductive engine, the parse forest can be recovered by following back pointers, as in constituency parsers CITATION,,
The MaltParser system CITATION includes an implementation of a complete variant of Covingtons LSUP parser where these constraints have been relaxed,,
CITATION gives a more thorough explanation of these relations and schemata,,
As an example of an LG parsing schema, we describe the original LG parser by CITATION), and show how projective parsing schemata, such as those seen in Section 3, can be adapted to obtain new LG parsers,,
With linear-time performance and competitive parsing accuracy (CITATION; CITATION), it is one of the parsers included in the MaltParser system CITATION, which is currently widely used (e.g., CITATION; CITATION),,
Despite the restrictiveness of this model, this maximum spanning tree (MST) parser achieves state-of-the-art performance for projective and non-projective structures (CITATION; CITATION; CITATION),,
de general enough to include these parsers by using a novel way of representing intermediate states of dependency parsers based on a form of dependency trees that include nodes labelled with preterminals and terminals (Gomez-Rodrguez, Carroll, and Weir 2008; CITATION),,
As an example we present an LG version of the parser by CITATION, but the same principles can be applied to other parsers: schemata for LG versions of the parsers by CITATION and CITATION can be found in CITATION,,
Theorem 3 The CITATION parsing schema is correct,,
3.3 CITATION CITATION define an O(n3 ) parser for split head automaton grammars which can be used for dependency parsing,,
le of an LG parsing schema, we describe the original LG parser by CITATION), and show how projective parsing schemata, such as those seen in Section 3, can be adapted to obtain new LG parsers,,
In this way, we can refine the head-corner parser to a variant of the algorithm by de Vreught and Honig (1989) CITATION, and by successive filters we reach a left-corner parser which is equivalent to the one described by CITATION, and a step contraction of the Earley-based dependency parser by Lombardo 556 \x0cGomez-Rodrguez, Carroll, and Weir Dependency Parsing Schemata and Lesmo (1996),,
This has led to the study of sub-classes of the class of all non-projective dependency structures (CITATION; CITATION),,
An alternative generalization of the concept of well-nestedness has recently been introduced by CITATION,,
(2005) describe a parser which finds a nonprojective analysis for a sentence in O(n2 ) time under a strong independence assumption called an edgefactored model: Each dependency decision is assumed to be independent of all the others CITATION,,
6.2 CITATION The non-projective parser of CITATION extends the algorithm of CITATION, adding additional shift and reduce actions to handle non-projective dependency structures,,
Conclusions and Future Work The parsing schemata formalism of CITATION has previously been used to define, analyze, and compare algorithms for constituency-based parsing,,
schemata based on CFG-like rules can be obtained by modifying CFG parsing schemata of CITATION: The algorithm of CITATION can be obtained from the left-corner parser, and the parser described by CITATION is a variant of the head-corner parser,,
Dependency formalisms have attracted considerable interest in recent years, having been successfully applied to tasks such as machine translation (CITATION; Shen, Xu, and Weischedel 2008), textual entailment recognition (Herrera, Penas, and Verdejo 2005), relation extraction (CITATION; Fundel, Kuffner, and Zimmer 2006), and question answering CITATION,,
n line with what could be expected from previous research in constituency parsing: CITATION shows that the set of well-nested dependency structures with gap degree at most k is closely related to coupled CFG in which the maximal rank of a nonterminal is k + 1,,
Gomez-Rodrguez, Carroll, and Weir CITATION present extended dependency trees in more detail,,
Specifically, Kuhlmann shows that linear context-free rewriting systems 562 \x0cGomez-Rodrguez, Carroll, and Weir Dependency Parsing Schemata (LCFRS) with fan-out k (Vijay-Shanker, Weir, and Joshi 1987; CITATION) induce the set of dependency structures with gap degree at most k 1; coupled CFG in which the maximal rank of a nonterminal is k CITATION induces the set of wellnested dependency struc,,
This contrasts with many of the 577 \x0cComputational Linguistics Volume 37, Number 3 dependency parsers seen in previous sections (CITATION; CITATION; CITATION), which build dependency graphs bottomup,,
Ill-nested structures can be parsed in polynomial time with bounds on the gap degree and the number of dependents allowed per node: CITATION presents a parser based on this idea, using a kind of grammar that resembles LCFRS, called regular dependency grammar,,
nd Kahane, Nasr, and Rambow (1998) are based on the formalizations of dependency grammar CFG-like rules described by CITATION and CITATION,,
581 \x0cComputational Linguistics Volume 37, Number 3 McDonald and Nivre CITATION give an alternative framework for dependency parsers, viewing them as transition systems,,
CITATION explains the distinction between static and dynamic filtering, which is not used here,,
The algorithm by Lombardo and Lesmo is a version of Earleys CFG parser CITATION that uses Gaifmans dependency grammar CITATION,,
To express such algorithms as deduction systems, we use the notion of D-rules CITATION,,
This is the idea behind the parser defined by CITATION, which is still in wide use today (McDonald, Crammer, and P,,
\x02 Theorem 5 The CITATION parsing schema is correct,,
Conclusions and Future Work The parsing schemata formalism of CITATION has previousl,,
The proofs for these relations are the same as those given by CITATION, except that the dependen,,
Proof 5 By using the previous proofs and the relationships between schemata established earlier, we show that the parser of CITATION is correct: Soundness is straightforward, and completeness can be shown by using the properties of other algorithms,,
2002), Latin CITATION, Portuguese (Af,,
\x02 Note that, in practice, these two relations mean that the parsers by CITATION and CITATION are more efficient, at the schema level, than that of CITATION, in that they generate fewer items and need fewer steps to perform the same deductions,,
 of CITATION and CITATION are not shown here for space reasons, but are presented by CITATION,,
CITATION gives a complete description and discussion of the schema for the MST parser,,
3.5 CITATION and Other Earley-Based Parsers The algorithms presented so far are based on making individual decisions about dependency links, represented by D-rules,,
From here, we can follow the procedure described by CITATION to relate this head-corner algorithm to parsers analogous to other algorithms for CFGs,,
In this section, we show that the schemata for CITATION and CITATION are correct, and use this to prove the correctness of the schema for CITATION,,
Unfortunately, the algorithm presented in CITATION is not complete: It does not parse all projective dependency structures, because when creating leftward links it assumes that the head of a node i must be a reflexive-transitive head of the node i 1, which is not always the case,,
The strategy used by this algorithm for parsing mildly ill-nested structures has been adapted to solve the problem of finding minimal fan-out binarizations of LCFRS to improve parsing efficiency (see CITATION),,
emata of CITATION: The algorithm of CITATION can be obtained from the left-corner parser, and the parser described by CITATION is a variant of the head-corner parser,,
8.1 Sleator and Temperleys LG Parser The LG parser of CITATION) is a dynamic programming algorithm that builds linkages topdown: A link between vi and vk is always added before links between vi and vj or between vj and vk, if i &lt; j &lt; k,,
Following CITATION, items are sets of syntactic structures and tuples are a shorthand notation for such sets, as seen in the previous example,,
The proofs for these relations are the same as those given by CITATION, except that the dependency variants of each algorithm are simpler (due to the absence of epsilon rules and the fact that the rules are lexicalized),,
This contrasts with many of the 577 \x0cComputational Linguistics Volume 37, Number 3 dependency parsers seen in previous sections (CITATION; CITATION; CITATION), which build dependency graphs ,,
Although this covers the vast majority of the structures that occur in natural language treebanks CITATION, a significant number of sentences contain ill-nested structures,,
Having defined an item set for dependency parsing, the remaining definitions are analogous to those in Sikkels theory of constituency parsing CITATION, and are not presented in full detail,,
Analogously, other dependency parsing schemata based on CFG-like rules can be obtained by modifying CFG parsing schemata of CITATION: The algorithm of CITATION can be obtained from the left-corner parser, and the parser described by CITATION is a variant of the head-corner parser,,
3.4 CITATION CITATION define a deterministic, shift-reduce dependency parser guided by support vector machines, which achieves over 90% dependency accuracy on Section 23 of the Wall Street Journal Penn T,,
Nivre CITATION uses a variant of this algorithm in which cycle detection is used to avoid generating incorrect structures,,
11 A complete treatment of LG is beyond the scope of this article: CITATION gives a detailed comparison of Link Grammar and dependency formalisms,,
The formalism of parsing schemata, introduced by CITATION, is a useful tool for the study of constituency parsers, supporting precise, high-level descriptions of parsing algorithms,,
Link Grammar Schemata Link Grammar (LG), introduced by CITATION, 1993), is a theory of syntax whose structural representation of sentences is closely related to projective dependency representations, but with some important differences.11 Undirected links: Like dependency formalisms, LG represents the structure of sentences as a set of links between words,,
This implementation has the same tree building logic as the parser described by CITATION, differing from it only with respect to the control structure,,
r We adapt the dependency parsing schema framework to the formalism of Link Grammar (CITATION, 1993) (see Section 8),,
For example, each member of the item [1, 5] in the item set of the parser by CITATION that will be explained in Section 3.4 is a dependency forest with two projective trees, one with head 1 and the other with head 5, and such that the concatenation of their yields is 1..5,,
This complexity with respect to the length of the 568 \x0cGomez-Rodrguez, Carroll, and Weir Dependency Parsing Schemata input is as expected for this set of structures, because CITATION shows that they are equivalent to LTAG, and the best existing parsers for this formalism also perform in O(n7 ) CITATION.9 Note that the COMBINE step that is the bottleneck only uses seven indices, not any additional entities such as D-rules,,
Because the set of final items in the CITATION and CITATION schemata are the same, and the former is a step refinement of the latter, the completeness of Eisner and Sattas parser directly implies the completeness of Eisners parser,,
