A simple k-best Dijkstra algorithm is described in CITATION,,
5 The arity of e is different from its cardinality defined in (CITATION; Nielsen et al., 2005) which is |T(e) |+ 1,,
 classification of DP algorithms (see Table 1): we first study two types of search spaces (rows): the semiring framework CITATION when the underlying representation is a directed graph as in finite-state machines, and the hypergraph framework CITATION when the search space is hierarchically branching as in context-free grammars; then, under each of these frameworks, we study two important types of DP algorithms (columns) with contrasting order of visiting nodes: the Viterbi style topological-order algorithms CITATION, and the Dijkstra-Knuth style best-first algorithms (CITATION; CITATION),,
His generic single-source algorithm subsumes many classical algorithms like Dijkstra, Bellman-Ford CITATION, and Viterbi as specific ins,,
The k-best list is also frequently used in discriminative learning to approximate the whole set of candidates which is usually exponentially large (CITATION; McDonald et ,,
Another popular implemention is memoized recursion CITATION, which starts from a target vertex t and invokes recursion on sub-problems in a top-down fashion,,
The k-best list is also frequently used in discriminative learning to approximate the whole set of candidates which is usually exponentially large (CITATION; CITATION),,
CITATION present an implementation that runs in time O(V log V + E) using the method described in Algorithm 5 to ensure that every hyperedge is visited only once (assuming the priority queue is implemented as a Fibonaaci heap; for binary heap, it runs in O((V + E) log V )),,
To alleviate this problem, there is a popular technique named A* CITATION described below,,
Young, 1990) are widely used for unsupervised training with the EM algorithm CITATION,,
In this report, we use directed hypergraphs CITATION to abstract a hierarchically branching search space for dynamic programming, where we solve a big problem by dividing it into (more than one) sub-problems,,
lem in a generic way, as is done in CITATION,,
2 Semirings The definitions in this section follow CITATION and CITATION,,
4 This is not to be confused with the forward-backward algorithm CITATION,,
Here we follow the recursive definition of derivations in CITATION,,
5.2 Knuth Algorithm CITATION generalizes the Dijkstra algorithm to what he calls the grammar problem, which essentially corresponds to the search problem in a monotonic superior hypergraph (see Table 3),,
CITATION solves this problem by a slightly different definition of closedness which does not assume idempotence,,
This report surveys a two-dimensional classification of DP algorithms (see Table 1): we first study two types of search spaces (rows): the semiring framework CITATION when the underlying representation is a directed graph as in finite-state machines, and the hypergraph framework CITATION when the search space is hierarchically branching as in context-free grammars; then, under each of these frameworks, we study two important types of DP algorithms (columns) with contrasting order of visiting nodes: the Viterbi style topological-order algorithms CITATION, and the Dijkstra-Knuth style best-first algorithms (CITATION; CITATION),,
of DP algorithms (see Table 1): we first study two types of search spaces (rows): the semiring framework CITATION when the underlying representation is a directed graph as in finite-state machines, and the hypergraph framework CITATION when the search space is hierarchically branching as in context-free grammars; then, under each of these frameworks, we study two important types of DP algorithms (columns) with contrasting order of visiting nodes: the Viterbi style topological-order algorithms CITATION, and the Dijkstra-Knuth style best-first algorithms (CITATION; CITATION),,
es 4: while Q \x0f= do 5: v Extract-Min(Q) 6: for each edge e = (v, u) in FS(v) do 7: d(u) = d(v) w(e) 8: Decrease-Key(Q, u) The time complexity of Dijkstra Algorithm is O((E + V ) log V ) with a binary heap, or O(E+V log V ) with a Fibonacci heap CITATION,,
(1993) and CITATION where the tails are sets rather than ordered lists,,
A separate problem, k-shortest hyperpaths, has been studied by CITATION,,
000; CITATION; CITATION; CITATION),,
It is also implemented as part of Dyna CITATION, a generic langauge for dynamic programming,,
Then when can we apply dynamic programming to a non-optimization problem? CITATION develop a more general criteria of closed semiring where is id,,
The best weight (v) of a vertex v is the weight of the best derivation of v: (v) = \x03 1 v is a source vertex \x04 DD(v) w(D) otherwise (6) 4.3 Related Formalisms Hypergraphs are closely related to other formalisms like AND/OR graphs, context-free grammars, and deductive systems (CITATION; CITATION),,
Now we can re-use the 1-best Viterbi Algorithm to solve the k-best problem in a generic way, as is done in CITATION,,
For the hypergraph case, the REA algorithm has been adapted for k-best derivations (CITATION; CITATION),,
An important property of semirings when dealing with optimization problems is monotonicity, which justifies the optimal subproblem property in dynamic programming CITATION that the computation can be factored (into smaller problems),,
m to solve the k-best problem in a generic way, as is done in CITATION,,
For the former, algorithms based on the Inside semiring (Table 1), including the forward-backward algorithm CITATION and Inside-Outside algorithm (Baker, 1979; CITATION) are widely used for unsupervised training with the EM algorithm CITATION,,
For problems that satisfy both acyclicity and superiority, which include many applications in NLP such as HMM tagging, both Dijkstra and Viterbi can apply CITATION,,
The k-best extension of the Knuth Algorithm is studied by CITATION,,
3.2 Dijkstra Algorithm The well-known CITATION algorithm can also be viewed as dynamic programming, since it is based on optimal substructure property, and also utilizes the overlapping of sub-problems,,
3 Dynamic Programming on Graphs Following CITATION, we next identify the common part shared between these two algorithms as the generic shortest-path problem in graphs,,
Then when can we apply dynamic programming to a non-optimization problem? CITATION develop a more general criteria of cl,,
In this paper we will assume this monotonicity, which corresponds to the optimal substructure property in dynamic programming CITATION,,
; CITATION) are widely used for unsupervised training with the EM algorithm CITATION,,
This property, called negative boundedness in CITATION, intuitively illustrates the direction of optimization from 0, the initial value, towards as close as possible to 1, the best possible value,,
For acyclic graphs, we can use the CITATION Algorithm 3 which simply consists of two steps: 1,,
Applications of this algorithm include k-best parsing (CITATION; CITATION) and machine translation CITATION,,
-optimization problem? CITATION develop a more general criteria of closed semiring where is idempotent and infinite sums are well-defined and present a more sophisticated algorithm that can be proved to work for all closed semirings,,
His generic single-source algorithm subsumes many classical algorithms like Dijkstra, Bellman-Ford CITATION, and Viterbi as specific instances,,
Then when can we apply dynamic programming to a non-optimization problem? CITATION develop a,,
1: procedure General-Viterbi-Forward(H) 2: topologically sort the vertices of H 3: Initialize(H) 4: for each hyperedge e do 5: r[e] |e |\x04 counter of remaining tails to be fixed 6: for each vertex v in topological order do 7: for each hyperedge e in FS(v) do 8: r[e] r[e] 1 9: if r[e] == 0 then \x04 all tails have been fixed 10: e is ({u1, u2, , u|e|}, h(e), fe) 11: d(h(e)) = fe(d(u1), d(u2), , d(u|e|)) 5.1.1 CKY Algorithm The most widely used algorithm for parsing in NLP, the CKY algorithm CITATION, is a specific instance of the Viterbi algorithm for hypergraphs,,
A specific case of this algorithm is the A* parsing of CITATION where they achieve significant speed up using carefully designed heuristic functions,,
examples of these problems include matrix-chain multiplication, optimal polygon triangulation, and optimal binary search tree CITATION,,
1: procedure Dijkstra(G, w, s) 2: Initialize(G, s) 3: Q V [G] \x04 prioritized by d-values 4: while Q \x0f= do 5: v Extract-Min(Q) 6: for each edge e = (v, u) in FS(v) do 7: d(u) = d(v) w(e) 8: Decrease-Key(Q, u) The time complexity of Dijkstra Algorithm is O((E + V ) log V ) with a binary heap, or O(E+V log V ) with a Fibonacci heap CITATION,,
See CITATION for details,,
in dynamic programming CITATION,,
Classical examples of these problems include matrix-chain multiplication, optimal polygon triangulation, and optimal binary search tree CITATION,,
1: procedure Viterbi-Forward(G, w, s) 2: topologically sort the vertices of G 3: Initialize(G, s) 4: for each vertex v in topological order do 5: for each edge e = (v, u) in FS(v) do 6: d(u) = d(v) w(e) 3 Also known as the CITATION algorithm in the theory community, but he considers it as part of the folklore,,
Then when can we apply dynamic programming to a non-optimization problem? CITATION develop a more general criteria of closed semiring where is idempotent and infinite sums are well-defined and present a more sophisticated algorithm that can be proved to work for all closed semirings,,
search space is hierarchically branching as in context-free grammars; then, under each of these frameworks, we study two important types of DP algorithms (columns) with contrasting order of visiting nodes: the Viterbi style topological-order algorithms CITATION, and the Dijkstra-Knuth style best-first algorithms (CITATION; CITATION),,
1 Introduction Many algorithms in speech and language processing can be viewed as instances of dynamic programming (DP) CITATION,,
For the latter, since NLP is often a pipeline of several modules, where the 1-best solution from one module might not be the best input for the next module, and one prefers to postpone disambiguation by propogating a k-best list of candidates (CITATION; CITATION; CITATION; CITATION),,
See CITATION, Chap,,
