<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<bodyText confidence="0.6428135">
b&apos;Proceedings of the 43rd Annual Meeting of the ACL, pages 1825,
Ann Arbor, June 2005. c
</bodyText>
<sectionHeader confidence="0.410416" genericHeader="abstract">
2005 Association for Computational Linguistics
</sectionHeader>
<title confidence="0.931071">
Logarithmic Opinion Pools for Conditional Random Fields
</title>
<author confidence="0.989177">
Andrew Smith
</author>
<affiliation confidence="0.991967">
Division of Informatics
University of Edinburgh
</affiliation>
<address confidence="0.92935">
United Kingdom
</address>
<email confidence="0.982315">
a.p.smith-2@sms.ed.ac.uk
</email>
<author confidence="0.988878">
Trevor Cohn
</author>
<affiliation confidence="0.88194">
Department of Computer Science
and Software Engineering
University of Melbourne, Australia
</affiliation>
<email confidence="0.98807">
tacohn@csse.unimelb.edu.au
</email>
<author confidence="0.975663">
Miles Osborne
</author>
<affiliation confidence="0.991321">
Division of Informatics
University of Edinburgh
</affiliation>
<address confidence="0.933122">
United Kingdom
</address>
<email confidence="0.99549">
miles@inf.ed.ac.uk
</email>
<sectionHeader confidence="0.989834" genericHeader="keywords">
Abstract
</sectionHeader>
<bodyText confidence="0.998397260869565">
Recent work on Conditional Random
Fields (CRFs) has demonstrated the need
for regularisation to counter the tendency
of these models to overfit. The standard
approach to regularising CRFs involves a
prior distribution over the model parame-
ters, typically requiring search over a hy-
perparameter space. In this paper we ad-
dress the overfitting problem from a dif-
ferent perspective, by factoring the CRF
distribution into a weighted product of in-
dividual expert CRF distributions. We
call this model a logarithmic opinion
pool (LOP) of CRFs (LOP-CRFs). We ap-
ply the LOP-CRF to two sequencing tasks.
Our results show that unregularised expert
CRFs with an unregularised CRF under
a LOP can outperform the unregularised
CRF, and attain a performance level close
to the regularised CRF. LOP-CRFs there-
fore provide a viable alternative to CRF
regularisation without the need for hyper-
parameter search.
</bodyText>
<sectionHeader confidence="0.998298" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999255044444445">
In recent years, conditional random fields (CRFs)
(Lafferty et al., 2001) have shown success on a num-
ber of natural language processing (NLP) tasks, in-
cluding shallow parsing (Sha and Pereira, 2003),
named entity recognition (McCallum and Li, 2003)
and information extraction from research papers
(Peng and McCallum, 2004). In general, this work
has demonstrated the susceptibility of CRFs to over-
fit the training data during parameter estimation. As
a consequence, it is now standard to use some form
of overfitting reduction in CRF training.
Recently, there have been a number of sophisti-
cated approaches to reducing overfitting in CRFs,
including automatic feature induction (McCallum,
2003) and a full Bayesian approach to training and
inference (Qi et al., 2005). These advanced meth-
ods tend to be difficult to implement and are of-
ten computationally expensive. Consequently, due
to its ease of implementation, the current standard
approach to reducing overfitting in CRFs is the use
of a prior distribution over the model parameters,
typically a Gaussian. The disadvantage with this
method, however, is that it requires adjusting the
value of one or more of the distributions hyper-
parameters. This usually involves manual or auto-
matic tuning on a development set, and can be an ex-
pensive process as the CRF must be retrained many
times for different hyperparameter values.
In this paper we address the overfitting problem
in CRFs from a different perspective. We factor the
CRF distribution into a weighted product of indi-
vidual expert CRF distributions, each focusing on
a particular subset of the distribution. We call this
model a logarithmic opinion pool (LOP) of CRFs
(LOP-CRFs), and provide a procedure for learning
the weight of each expert in the product. The LOP-
CRF framework is parameter-free in the sense that
it does not involve the requirement to adjust hyper-
parameter values.
LOP-CRFs are theoretically advantageous in that
their Kullback-Leibler divergence with a given dis-
tribution can be explicitly represented as a function
of the KL-divergence with each of their expert dis-
tributions. This provides a well-founded framework
for designing new overfitting reduction schemes:
</bodyText>
<page confidence="0.997232">
18
</page>
<bodyText confidence="0.992396666666667">
\x0clook to factorise a CRF distribution as a set of di-
verse experts.
We apply LOP-CRFs to two sequencing tasks in
NLP: named entity recognition and part-of-speech
tagging. Our results show that combination of un-
regularised expert CRFs with an unregularised stan-
dard CRF under a LOP can outperform the unreg-
ularised standard CRF, and attain a performance
level that rivals that of the regularised standard CRF.
LOP-CRFs therefore provide a viable alternative to
CRF regularisation without the need for hyperpa-
rameter search.
</bodyText>
<sectionHeader confidence="0.974357" genericHeader="method">
2 Conditional Random Fields
</sectionHeader>
<bodyText confidence="0.995757">
A linear chain CRF defines the conditional probabil-
ity of a state or label sequence s given an observed
</bodyText>
<equation confidence="0.957347181818182">
sequence o via1:
p(s|o) =
1
Z(o)
exp
T+1
t=1
k
k fk(st1,st,o,t)
!
(1)
</equation>
<bodyText confidence="0.997916222222222">
where T is the length of both sequences, k are pa-
rameters of the model and Z(o) is the partition func-
tion that ensures (1) represents a probability distri-
bution. The functions fk are feature functions rep-
resenting the occurrence of different events in the
sequences s and o.
The parameters k can be estimated by maximis-
ing the conditional log-likelihood of a set of labelled
training sequences. The log-likelihood is given by:
</bodyText>
<equation confidence="0.995760230769231">
L () =
o,s
p(o,s)log p(s|o;)
=
o,s
p(o,s)
&quot;
T+1
t=1
f(s,o,t)
#
o
p(o)logZ(o;)
</equation>
<bodyText confidence="0.974289">
where p(o,s) and p(o) are empirical distributions
defined by the training set. At the maximum like-
lihood solution the model satisfies a set of feature
constraints, whereby the expected count of each fea-
ture under the model is equal to its empirical count
on the training data:
</bodyText>
<subsectionHeader confidence="0.304941">
1In this paper we assume there is a one-to-one mapping be-
</subsectionHeader>
<bodyText confidence="0.987321777777778">
tween states and labels, though this need not be the case.
Ep(o,s)[ fk]Ep(s|o)[ fk] = 0, k
In general this cannot be solved for the k in
closed form so numerical routines must be used.
Malouf (2002) and Sha and Pereira (2003) show
that gradient-based algorithms, particularly limited
memory variable metric (LMVM), require much
less time to reach convergence, for some NLP tasks,
than the iterative scaling methods (Della Pietra et
al., 1997) previously used for log-linear optimisa-
tion problems. In all our experiments we use the
LMVM method to train the CRFs.
For CRFs with general graphical structure, calcu-
lation of Ep(s|o)[ fk] is intractable, but for the linear
chain case Lafferty et al. (2001) describe an efficient
dynamic programming procedure for inference, sim-
ilar in nature to the forward-backward algorithm in
hidden Markov models.
</bodyText>
<sectionHeader confidence="0.990078" genericHeader="method">
3 Logarithmic Opinion Pools
</sectionHeader>
<bodyText confidence="0.990778615384615">
In this paper an expert model refers a probabilistic
model that focuses on modelling a specific subset of
some probability distribution. The concept of com-
bining the distributions of a set of expert models via
a weighted product has previously been used in a
range of different application areas, including eco-
nomics and management science (Bordley, 1982),
and NLP (Osborne and Baldridge, 2004).
In this paper we restrict ourselves to sequence
models. Given a set of sequence model experts, in-
dexed by , with conditional distributions p(s|o)
and a set of non-negative normalised weights w, a
logarithmic opinion pool 2 is defined as the distri-
</bodyText>
<figure confidence="0.331671416666667">
bution:
pLOP(s|o) =
1
ZLOP(o)
[p(s|o)]w
(2)
with w 0 and w = 1, and where ZLOP(o) is
the normalisation constant:
ZLOP(o) =
s
[p(s|o)]w
(3)
</figure>
<footnote confidence="0.933632666666667">
2Hinton (1999) introduced a variant of the LOP idea called
Product of Experts, in which expert distributions are multiplied
under a uniform weight distribution.
</footnote>
<page confidence="0.989297">
19
</page>
<bodyText confidence="0.957709285714286">
\x0cThe weight w encodes our confidence in the opin-
ion of expert .
Suppose that there is a true conditional distri-
bution q(s  |o) which each p(s  |o) is attempting to
model. Heskes (1998) shows that the KL divergence
between q(s  |o) and the LOP, can be decomposed
into two terms:
</bodyText>
<equation confidence="0.98261125">
K(q, pLOP) = E A (4)
=
wK (q, p)
wK (pLOP, p)
</equation>
<bodyText confidence="0.984492111111111">
This tells us that the closeness of the LOP model
to q(s  |o) is governed by a trade-off between two
terms: an E term, which represents the closeness
of the individual experts to q(s  |o), and an A term,
which represents the closeness of the individual
experts to the LOP, and therefore indirectly to each
other. Hence for the LOP to model q well, we desire
models p which are individually good models of q
(having low E) and are also diverse (having large A).
</bodyText>
<subsectionHeader confidence="0.973827">
3.1 LOPs for CRFs
</subsectionHeader>
<bodyText confidence="0.998731615384616">
Because CRFs are log-linear models, we can see
from equation (2) that CRF experts are particularly
well suited to combination under a LOP. Indeed, the
resulting LOP is itself a CRF, the LOP-CRF, with
potential functions given by a log-linear combina-
tion of the potential functions of the experts, with
weights w. As a consequence of this, the nor-
malisation constant for the LOP-CRF can be calcu-
lated efficiently via the usual forward-backward al-
gorithm for CRFs. Note that there is a distinction be-
tween normalisation constant for the LOP-CRF, ZLOP
as given in equation (3), and the partition function of
the LOP-CRF, Z. The two are related as follows:
</bodyText>
<equation confidence="0.826650333333333">
pLOP(s|o) =
1
ZLOP(o)
[p(s|o)]w
=
1
ZLOP(o)
\x14
U(s|o)
Z(o)
\x15w
=
[U(s|o)]w
ZLOP(o) [Z(o)]w
where U = expT+1
t=1 k k fk(st1,st,o,t) and so
logZ(o) = logZLOP(o)+
w logZ(o)
</equation>
<bodyText confidence="0.971549571428571">
This relationship will be useful below, when we de-
scribe how to train the weights w of a LOP-CRF.
In this paper we will use the term LOP-CRF
weights to refer to the weights w in the weighted
product of the LOP-CRF distribution and the term
parameters to refer to the parameters k of each
expert CRF .
</bodyText>
<subsectionHeader confidence="0.989925">
3.2 Training LOP-CRFs
</subsectionHeader>
<bodyText confidence="0.999502727272727">
In our LOP-CRF training procedure we first train
the expert CRFs unregularised on the training data.
Then, treating the experts as static pre-trained mod-
els, we train the LOP-CRF weights w to maximise
the log-likelihood of the training data. This training
process is parameter-free in that neither stage in-
volves the use of a prior distribution over expert CRF
parameters or LOP-CRF weights, and so avoids the
requirement to adjust hyperparameter values.
The likelihood of a data set under a LOP-CRF, as
a function of the LOP-CRF weights, is given by:
</bodyText>
<equation confidence="0.9948414">
L(w) =
o,s
pLOP(s|o;w)p(o,s)
=
o,s
\x14
1
ZLOP(o;w)
p(s|o)w
\x15p(o,s)
</equation>
<bodyText confidence="0.9452425">
After taking logs and rearranging, the log-
likelihood can be expressed as:
</bodyText>
<equation confidence="0.997394125">
L (w) =
o,s
p(o,s)
w log p(s|o)
o
p(o)logZLOP(o;w)
=
w
o,s
p(o,s)log p(s|o)
+
w
o
p(o)logZ(o)
o
p(o)logZ(o;w)
</equation>
<bodyText confidence="0.970358333333333">
For the first two terms, the quantities that are mul-
tiplied by w inside the (outer) sums are indepen-
dent of the weights, and can be evaluated once at the
</bodyText>
<page confidence="0.948804">
20
</page>
<bodyText confidence="0.993412166666667">
\x0cbeginning of training. The third term involves the
partition function for the LOP-CRF and so is a func-
tion of the weights. It can be evaluated efficiently as
usual for a standard CRF.
Taking derivatives with respect to w and rear-
ranging, we obtain:
</bodyText>
<equation confidence="0.998144857142857">
L (w)
w
=
o,s
p(o,s)log p (s|o)
+
o
p(o)logZ (o)
o
p(o)EpLOP(s|o)
\x14
t
logUt(o,s)
\x15
</equation>
<bodyText confidence="0.9932636">
where Ut(o,s) is the value of the potential function
for expert on clique t under the labelling s for ob-
servation o. In a way similar to the representation
of the expected feature count in a standard CRF, the
third term may be re-written as:
</bodyText>
<equation confidence="0.995157">
o
t
s0,s00
pLOP(st1 = s0
,st = s00
,o)logUt(s0
,s00
,o)
</equation>
<bodyText confidence="0.999762444444444">
Hence the derivative is tractable because we can use
dynamic programming to efficiently calculate the
pairwise marginal distribution for the LOP-CRF.
Using these expressions we can efficiently train
the LOP-CRF weights to maximise the log-
likelihood of the data set.3 We make use of the
LMVM method mentioned earlier to do this. We
will refer to a LOP-CRF with weights trained using
this procedure as an unregularised LOP-CRF.
</bodyText>
<subsubsectionHeader confidence="0.93996">
3.2.1 Regularisation
</subsubsectionHeader>
<bodyText confidence="0.92577">
The parameter-free aspect of the training pro-
cedure we introduced in the previous section relies
on the fact that we do not use regularisation when
training the LOP-CRF weights w. However, there
is a possibility that this may lead to overfitting of
the training data. In order to investigate this, we
develop a regularised version of the training proce-
dure and compare the results obtained with each. We
3We must ensure that the weights are non-negative and nor-
malised. We achieve this by parameterising the weights as func-
tions of a set of unconstrained variables via a softmax transfor-
mation. The values of the log-likelihood and its derivatives with
respect to the unconstrained variables can be derived from the
corresponding values for the weights w .
use a prior distribution over the LOP-CRF weights.
As the weights are non-negative and normalised we
use a Dirichlet distribution, whose density function
</bodyText>
<equation confidence="0.9117074">
is given by:
p(w) =
( )
()
w 1
</equation>
<bodyText confidence="0.915953071428572">
where the are hyperparameters.
Under this distribution, ignoring terms that are
independent of the weights, the regularised log-
likelihood involves an additional term:
( 1)logw
We assume a single value across all weights. The
derivative of the regularised log-likelihood with
respect to weight w then involves an additional
term 1
w
( 1). In our experiments we use the
development set to optimise the value of . We will
refer to a LOP-CRF with weights trained using this
procedure as a regularised LOP-CRF.
</bodyText>
<sectionHeader confidence="0.992351" genericHeader="method">
4 The Tasks
</sectionHeader>
<bodyText confidence="0.962308">
In this paper we apply LOP-CRFs to two sequence
labelling tasks in NLP: named entity recognition
(NER) and part-of-speech tagging (POS tagging).
</bodyText>
<subsectionHeader confidence="0.997533">
4.1 Named Entity Recognition
</subsectionHeader>
<bodyText confidence="0.998427647058823">
NER involves the identification of the location and
type of pre-defined entities within a sentence and is
often used as a sub-process in information extrac-
tion systems. With NER the CRF is presented with
a set of sentences and must label each word so as to
indicate whether the word appears outside an entity
(O), at the beginning of an entity of type X (B-X) or
within the continuation of an entity of type X (I-X).
All our results for NER are reported on the
CoNLL-2003 shared task dataset (Tjong Kim Sang
and De Meulder, 2003). For this dataset the en-
tity types are: persons (PER), locations (LOC),
organisations (ORG) and miscellaneous (MISC).
The training set consists of 14,987 sentences and
204,567 tokens, the development set consists of
3,466 sentences and 51,578 tokens and the test set
consists of 3,684 sentences and 46,666 tokens.
</bodyText>
<page confidence="0.990235">
21
</page>
<subsubsectionHeader confidence="0.504301">
\x0c4.2 Part-of-Speech Tagging
</subsubsectionHeader>
<bodyText confidence="0.990516833333334">
POS tagging involves labelling each word in a sen-
tence with its part-of-speech, for example noun,
verb, adjective, etc. For our experiments we use the
CoNLL-2000 shared task dataset (Tjong Kim Sang
and Buchholz, 2000). This has 48 different POS
tags. In order to make training time manageable4,
we collapse the number of POS tags from 48 to 5
following the procedure used in (McCallum et al.,
2003). In summary:
All types of noun collapse to category N.
All types of verb collapse to category V.
All types of adjective collapse to category J.
All types of adverb collapse to category R.
All other POS tags collapse to category O.
The training set consists of 7,300 sentences and
173,542 tokens, the development set consists of
1,636 sentences and 38,185 tokens and the test set
consists of 2,012 sentences and 47,377 tokens.
</bodyText>
<subsectionHeader confidence="0.996225">
4.3 Expert sets
</subsectionHeader>
<bodyText confidence="0.994412409836066">
For each task we compare the performance of the
LOP-CRF to that of the standard CRF by defining
a single, complex CRF, which we call a monolithic
CRF, and a range of expert sets.
The monolithic CRF for NER comprises a num-
ber of word and POS tag features in a window of
five words around the current word, along with a
set of orthographic features defined on the current
word. These are based on those found in (Curran and
Clark, 2003). Examples include whether the cur-
rent word is capitalised, is an initial, contains a digit,
contains punctuation, etc. The monolithic CRF for
NER has 450,345 features.
The monolithic CRF for POS tagging comprises
word and POS features similar to those in the NER
monolithic model, but over a smaller number of or-
thographic features. The monolithic model for POS
tagging has 188,448 features.
Each of our expert sets consists of a number of
CRF experts. Usually these experts are designed to
4See (Cohn et al., 2005) for a scaling method allowing the
full POS tagging task with CRFs.
focus on modelling a particular aspect or subset of
the distribution. As we saw earlier, the aim here is
to define experts that model parts of the distribution
well while retaining mutual diversity. The experts
from a particular expert set are combined under a
LOP-CRF and the weights are trained as described
previously.
We define our range of expert sets as follows:
Simple consists of the monolithic CRF and a
single expert comprising a reduced subset of
the features in the monolithic CRF. This re-
duced CRF models the entire distribution rather
than focusing on a particular aspect or subset,
but is much less expressive than the monolithic
model. The reduced model comprises 24,818
features for NER and 47,420 features for POS
tagging.
Positional consists of the monolithic CRF and
a partition of the features in the monolithic
CRF into three experts, each consisting only of
features that involve events either behind, at or
ahead of the current sequence position.
Label consists of the monolithic CRF and a
partition of the features in the monolithic CRF
into five experts, one for each label. For NER
an expert corresponding to label X consists
only of features that involve labels B-X or I-
X at the current or previous positions, while for
POS tagging an expert corresponding to label
X consists only of features that involve label
X at the current or previous positions. These
experts therefore focus on trying to model the
distribution of a particular label.
Random consists of the monolithic CRF and a
random partition of the features in the mono-
lithic CRF into four experts. This acts as a
baseline to ascertain the performance that can
be expected from an expert set that is not de-
fined via any linguistic intuition.
</bodyText>
<sectionHeader confidence="0.999302" genericHeader="method">
5 Experiments
</sectionHeader>
<bodyText confidence="0.99853775">
To compare the performance of LOP-CRFs trained
using the procedure we described previously to that
of a standard CRF regularised with a Gaussian prior,
we do the following for both NER and POS tagging:
</bodyText>
<page confidence="0.99019">
22
</page>
<bodyText confidence="0.995497428571429">
\x0c Train a monolithic CRF with regularisation us-
ing a Gaussian prior. We use the development
set to optimise the value of the variance hyper-
parameter.
Train every expert CRF in each expert set with-
out regularisation (each expert set includes the
monolithic CRF, which clearly need only be
trained once).
For each expert set, create a LOP-CRF from
the expert CRFs and train the weights of the
LOP-CRF without regularisation. We compare
its performance to that of the unregularised and
regularised monolithic CRFs.
To investigate whether training the LOP-CRF
weights contributes significantly to the LOP-
CRFs performance, for each expert set we cre-
ate a LOP-CRF with uniform weights and com-
pare its performance to that of the LOP-CRF
with trained weights.
To investigate whether unregularised training
of the LOP-CRF weights leads to overfitting,
for each expert set we train the weights of the
LOP-CRF with regularisation using a Dirich-
let prior. We optimise the hyperparameter in
the Dirichlet distribution on the development
set. We then compare the performance of the
LOP-CRF with regularised weights to that of
the LOP-CRF with unregularised weights.
</bodyText>
<sectionHeader confidence="0.999451" genericHeader="evaluation">
6 Results
</sectionHeader>
<subsectionHeader confidence="0.951568">
6.1 Experts
</subsectionHeader>
<bodyText confidence="0.988664727272727">
Before presenting results for the LOP-CRFs, we
briefly give performance figures for the monolithic
CRFs and expert CRFs in isolation. For illustration,
we do this for NER models only. Table 1 shows F
scores on the development set for the NER CRFs.
We see that, as expected, the expert CRFs in iso-
lation model the data relatively poorly compared to
the monolithic CRFs. Some of the label experts, for
example, attain relatively low F scores as they focus
only on modelling one particular label. Similar be-
haviour was observed for the POS tagging models.
</bodyText>
<table confidence="0.995422125">
Expert F score
Monolithic unreg. 88.33
Monolithic reg. 89.84
Reduced 79.62
Positional 1 86.96
Positional 2 73.11
Positional 3 73.08
Label LOC 41.96
Label MISC 22.03
Label ORG 29.13
Label PER 40.49
Label O 60.44
Random 1 70.34
Random 2 67.76
Random 3 67.97
Random 4 70.17
</table>
<tableCaption confidence="0.998496">
Table 1: Development set F scores for NER experts
</tableCaption>
<subsectionHeader confidence="0.985115">
6.2 LOP-CRFs with unregularised weights
</subsectionHeader>
<bodyText confidence="0.999406137931035">
In this section we present results for LOP-CRFs with
unregularised weights. Table 2 gives F scores for
NER LOP-CRFs while Table 3 gives accuracies for
the POS tagging LOP-CRFs. The monolithic CRF
scores are included for comparison. Both tables il-
lustrate the following points:
In every case the LOP-CRFs outperform the
unregularised monolithic CRF
In most cases the performance of LOP-CRFs
rivals that of the regularised monolithic CRF,
and in some cases exceeds it.
We use McNemars matched-pairs test (Gillick
and Cox, 1989) on point-wise labelling errors to ex-
amine the statistical significance of these results. We
test significance at the 5% level. At this threshold,
all the LOP-CRFs significantly outperform the cor-
responding unregularised monolithic CRF. In addi-
tion, those marked with show a significant im-
provement over the regularised monolithic CRF.
Only the value marked with in Table 3 significantly
under performs the regularised monolithic. All other
values a do not differ significantly from those of the
regularised monolithic CRF at the 5% level.
These results show that LOP-CRFs with unreg-
ularised weights can lead to performance improve-
ments that equal or exceed those achieved from a
conventional regularisation approach using a Gaus-
sian prior. The important difference, however, is that
the LOP-CRF approach is parameter-free in the
</bodyText>
<page confidence="0.996122">
23
</page>
<table confidence="0.984046">
\x0cExpert set Development set Test set
Monolithic unreg. 88.33 81.87
Monolithic reg. 89.84 83.98
Simple 90.26 84.22
Positional 90.35 84.71
Label 89.30 83.27
Random 88.84 83.06
Table 2: F scores for NER unregularised LOP-CRFs
Expert set Development set Test set
Monolithic unreg. 97.92 97.65
Monolithic reg. 98.02 97.84
Simple 98.31
98.12
Positional 98.03 97.81
Label 97.99 97.77
Random 97.99 97.76
</table>
<tableCaption confidence="0.995753">
Table 3: Accuracies for POS tagging unregularised
</tableCaption>
<bodyText confidence="0.967799133333334">
LOP-CRFs
sense that each expert CRF in the LOP-CRF is un-
regularised and the LOP weight training is also un-
regularised. We are therefore not required to search
a hyperparameter space. As an illustration, to ob-
tain our best results for the POS tagging regularised
monolithic model, we re-trained using 15 different
values of the Gaussian prior variance. With the
LOP-CRF we trained each expert CRF and the LOP
weights only once.
As an illustration of a typical weight distribution
resulting from the training procedure, the positional
LOP-CRF for POS tagging attaches weight 0.45 to
the monolithic model and roughly equal weights to
the other three experts.
</bodyText>
<subsectionHeader confidence="0.954014">
6.3 LOP-CRFs with uniform weights
</subsectionHeader>
<bodyText confidence="0.991955642857143">
By training LOP-CRF weights using the procedure
we introduce in this paper, we allow the weights to
take on non-uniform values. This corresponds to
letting the opinion of some experts take precedence
over others in the LOP-CRFs decision making. An
alternative, simpler, approach would be to com-
bine the experts under a LOP with uniform weights,
thereby avoiding the weight training stage. We
would like to ascertain whether this approach will
significantly reduce the LOP-CRFs performance.
As an illustration, Table 4 gives accuracies for LOP-
CRFs with uniform weights for POS tagging. A sim-
ilar pattern is observed for NER. Comparing these
values to those in Tables 2 and 3, we can see that in
</bodyText>
<table confidence="0.9713586">
Expert set Development set Test set
Simple 98.30 98.12
Positional 97.97 97.79
Label 97.85 97.73
Random 97.82 97.74
</table>
<tableCaption confidence="0.731486">
Table 4: Accuracies for POS tagging uniform LOP-
CRFs
</tableCaption>
<bodyText confidence="0.995945666666667">
general LOP-CRFs with uniform weights, although
still performing significantly better than the unreg-
ularised monolithic CRF, generally under perform
LOP-CRFs with trained weights. This suggests that
the choice of weights can be important, and justifies
the weight training stage.
</bodyText>
<subsectionHeader confidence="0.810498">
6.4 LOP-CRFs with regularised weights
</subsectionHeader>
<bodyText confidence="0.999645235294118">
To investigate whether unregularised training of the
LOP-CRF weights leads to overfitting, we train
the LOP-CRF with regularisation using a Dirich-
let prior. The results we obtain show that in most
cases a LOP-CRF with regularised weights achieves
an almost identical performance to that with unreg-
ularised weights, and suggests there is little to be
gained by weight regularisation. This is probably
due to the fact that in our LOP-CRFs the number
of experts, and therefore weights, is generally small
and so there is little capacity for overfitting. We con-
jecture that although other choices of expert set may
comprise many more experts than in our examples,
the numbers are likely to be relatively small in com-
parison to, for example, the number of parameters in
the individual experts. We therefore suggest that any
overfitting effect is likely to be limited.
</bodyText>
<subsectionHeader confidence="0.99637">
6.5 Choice of Expert Sets
</subsectionHeader>
<bodyText confidence="0.999628153846154">
We can see from Tables 2 and 3 that the performance
of a LOP-CRF varies with the choice of expert set.
For example, in our tasks the simple and positional
expert sets perform better than those for the label
and random sets. For an explanation here, we re-
fer back to our discussion of equation (5). We con-
jecture that the simple and positional expert sets
achieve good performance in the LOP-CRF because
they consist of experts that are diverse while simulta-
neously being reasonable models of the data. The la-
bel expert set exhibits greater diversity between the
experts, because each expert focuses on modelling a
particular label only, but each expert is a relatively
</bodyText>
<page confidence="0.983944">
24
</page>
<bodyText confidence="0.999582923076923">
\x0cpoor model of the entire distribution and the corre-
sponding LOP-CRF performs worse. Similarly, the
random experts are in general better models of the
entire distribution but tend to be less diverse because
they do not focus on any one aspect or subset of it.
Intuitively, then, we want to devise experts that pro-
vide diverse but accurate views on the data.
The expert sets we present in this paper were
motivated by linguistic intuition, but clearly many
choices exist. It remains an important open question
as to how to automatically construct expert sets for
good performance on a given task, and we intend to
pursue this avenue in future research.
</bodyText>
<sectionHeader confidence="0.913405" genericHeader="conclusions">
7 Conclusion and future work
</sectionHeader>
<bodyText confidence="0.998015434782609">
In this paper we have introduced the logarithmic
opinion pool of CRFs as a way to address overfit-
ting in CRF models. Our results show that a LOP-
CRF can provide a competitive alternative to con-
ventional regularisation with a prior while avoiding
the requirement to search a hyperparameter space.
We have seen that, for a variety of types of expert,
combination of expert CRFs with an unregularised
standard CRF under a LOP with optimised weights
can outperform the unregularised standard CRF and
rival the performance of a regularised standard CRF.
We have shown how these advantages a LOP-
CRF provides have a firm theoretical foundation in
terms of the decomposition of the KL-divergence
between a LOP-CRF and a target distribution, and
how this provides a framework for designing new
overfitting reduction schemes in terms of construct-
ing diverse experts.
In this work we have considered training the
weights of a LOP-CRF using pre-trained, static ex-
perts. In future we intend to investigate cooperative
training of LOP-CRF weights and the parameters of
each expert in an expert set.
</bodyText>
<sectionHeader confidence="0.962723" genericHeader="acknowledgments">
Acknowledgements
</sectionHeader>
<bodyText confidence="0.999204333333333">
We wish to thank Stephen Clark, our colleagues in
Edinburgh and the anonymous reviewers for many
useful comments.
</bodyText>
<sectionHeader confidence="0.991676" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.999733204081633">
R. F. Bordley. 1982. A multiplicative formula for aggregating
probability assessments. Management Science, (28):1137
1148.
T. Cohn, A. Smith, and M. Osborne. 2005. Scaling conditional
random fields using error-correcting codes. In Proc. ACL
2005.
J. Curran and S. Clark. 2003. Language independent NER
using a maximum entropy tagger. In Proc. CoNLL-2003.
S. Della Pietra, Della Pietra V., and J. Lafferty. 1997. Induc-
ing features of random fields. In IEEE PAMI, volume 19(4),
pages 380393.
L. Gillick and S. Cox. 1989. Some statistical issues in the
comparison of speech recognition algorithms. In Interna-
tional Conference on Acoustics, Speech and Signal Process-
ing, volume 1, pages 532535.
T. Heskes. 1998. Selecting weighting factors in logarithmic
opinion pools. In Advances in Neural Information Process-
ing Systems 10.
G. E. Hinton. 1999. Product of experts. In ICANN, volume 1,
pages 16.
J. Lafferty, A. McCallum, and F. Pereira. 2001. Conditional
random fields: Probabilistic models for segmenting and la-
beling sequence data. In Proc. ICML 2001.
R. Malouf. 2002. A comparison of algorithms for maximum
entropy parameter estimation. In Proc. CoNLL-2002.
A. McCallum and W. Li. 2003. Early results for named entity
recognition with conditional random fields, feature induction
and web-enhanced lexicons. In Proc. CoNLL-2003.
A. McCallum, K. Rohanimanesh, and C. Sutton. 2003. Dy-
namic conditional random fields for jointly labeling multiple
sequences. In NIPS-2003 Workshop on Syntax, Semantics
and Statistics.
A. McCallum. 2003. Efficiently inducing features of condi-
tional random fields. In Proc. UAI 2003.
M. Osborne and J. Baldridge. 2004. Ensemble-based active
learning for parse selection. In Proc. NAACL 2004.
F. Peng and A. McCallum. 2004. Accurate information extrac-
tion from research papers using conditional random fields.
In Proc. HLT-NAACL 2004.
Y. Qi, M. Szummer, and T. P. Minka. 2005. Bayesian condi-
tional random fields. In Proc. AISTATS 2005.
F. Sha and F. Pereira. 2003. Shallow parsing with conditional
random fields. In Proc. HLT-NAACL 2003.
E. F. Tjong Kim Sang and S. Buchholz. 2000. Introduction to
the CoNLL-2000 shared task: Chunking. In Proc. CoNLL-
2000.
E. F. Tjong Kim Sang and F. De Meulder. 2003. Introduction to
the CoNLL-2003 shared task: Language-independent named
entity recognition. In Proc. CoNLL-2003.
</reference>
<page confidence="0.861585">
25
</page>
<figure confidence="0.331799">
\x0c&apos;
</figure>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.282938">
<note confidence="0.970507333333333">b&apos;Proceedings of the 43rd Annual Meeting of the ACL, pages 1825, Ann Arbor, June 2005. c 2005 Association for Computational Linguistics</note>
<title confidence="0.96589">Logarithmic Opinion Pools for Conditional Random Fields</title>
<author confidence="0.999781">Andrew Smith</author>
<affiliation confidence="0.99991">Division of Informatics University of Edinburgh</affiliation>
<address confidence="0.84338">United Kingdom</address>
<email confidence="0.988884">a.p.smith-2@sms.ed.ac.uk</email>
<author confidence="0.999279">Trevor Cohn</author>
<affiliation confidence="0.843403333333333">Department of Computer Science and Software Engineering University of Melbourne, Australia</affiliation>
<email confidence="0.995195">tacohn@csse.unimelb.edu.au</email>
<author confidence="0.999623">Miles Osborne</author>
<affiliation confidence="0.9999225">Division of Informatics University of Edinburgh</affiliation>
<address confidence="0.786423">United Kingdom</address>
<email confidence="0.998486">miles@inf.ed.ac.uk</email>
<abstract confidence="0.996325">Recent work on Conditional Random Fields (CRFs) has demonstrated the need for regularisation to counter the tendency of these models to overfit. The standard approach to regularising CRFs involves a prior distribution over the model parameters, typically requiring search over a hyperparameter space. In this paper we address the overfitting problem from a different perspective, by factoring the CRF distribution into a weighted product of individual expert CRF distributions. We call this model a logarithmic opinion pool (LOP) of CRFs (LOP-CRFs). We apply the LOP-CRF to two sequencing tasks. Our results show that unregularised expert CRFs with an unregularised CRF under a LOP can outperform the unregularised CRF, and attain a performance level close to the regularised CRF. LOP-CRFs therefore provide a viable alternative to CRF regularisation without the need for hyperparameter search.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>R F Bordley</author>
</authors>
<title>A multiplicative formula for aggregating probability assessments.</title>
<date>1982</date>
<journal>Management Science,</journal>
<volume>28</volume>
<pages>1148</pages>
<contexts>
<context position="6434" citStr="Bordley, 1982" startWordPosition="1017" endWordPosition="1018">n of Ep(s|o)[ fk] is intractable, but for the linear chain case Lafferty et al. (2001) describe an efficient dynamic programming procedure for inference, similar in nature to the forward-backward algorithm in hidden Markov models. 3 Logarithmic Opinion Pools In this paper an expert model refers a probabilistic model that focuses on modelling a specific subset of some probability distribution. The concept of combining the distributions of a set of expert models via a weighted product has previously been used in a range of different application areas, including economics and management science (Bordley, 1982), and NLP (Osborne and Baldridge, 2004). In this paper we restrict ourselves to sequence models. Given a set of sequence model experts, indexed by , with conditional distributions p(s|o) and a set of non-negative normalised weights w, a logarithmic opinion pool 2 is defined as the distribution: pLOP(s|o) = 1 ZLOP(o) [p(s|o)]w (2) with w 0 and w = 1, and where ZLOP(o) is the normalisation constant: ZLOP(o) = s [p(s|o)]w (3) 2Hinton (1999) introduced a variant of the LOP idea called Product of Experts, in which expert distributions are multiplied under a uniform weight distribution. 19 \x0cThe w</context>
</contexts>
<marker>Bordley, 1982</marker>
<rawString>R. F. Bordley. 1982. A multiplicative formula for aggregating probability assessments. Management Science, (28):1137 1148.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Cohn</author>
<author>A Smith</author>
<author>M Osborne</author>
</authors>
<title>Scaling conditional random fields using error-correcting codes.</title>
<date>2005</date>
<booktitle>In Proc. ACL</booktitle>
<contexts>
<context position="15330" citStr="Cohn et al., 2005" startWordPosition="2555" endWordPosition="2558">aphic features defined on the current word. These are based on those found in (Curran and Clark, 2003). Examples include whether the current word is capitalised, is an initial, contains a digit, contains punctuation, etc. The monolithic CRF for NER has 450,345 features. The monolithic CRF for POS tagging comprises word and POS features similar to those in the NER monolithic model, but over a smaller number of orthographic features. The monolithic model for POS tagging has 188,448 features. Each of our expert sets consists of a number of CRF experts. Usually these experts are designed to 4See (Cohn et al., 2005) for a scaling method allowing the full POS tagging task with CRFs. focus on modelling a particular aspect or subset of the distribution. As we saw earlier, the aim here is to define experts that model parts of the distribution well while retaining mutual diversity. The experts from a particular expert set are combined under a LOP-CRF and the weights are trained as described previously. We define our range of expert sets as follows: Simple consists of the monolithic CRF and a single expert comprising a reduced subset of the features in the monolithic CRF. This reduced CRF models the entire dis</context>
</contexts>
<marker>Cohn, Smith, Osborne, 2005</marker>
<rawString>T. Cohn, A. Smith, and M. Osborne. 2005. Scaling conditional random fields using error-correcting codes. In Proc. ACL 2005.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Curran</author>
<author>S Clark</author>
</authors>
<title>Language independent NER using a maximum entropy tagger.</title>
<date>2003</date>
<booktitle>In Proc. CoNLL-2003.</booktitle>
<contexts>
<context position="14814" citStr="Curran and Clark, 2003" startWordPosition="2469" endWordPosition="2472">sts of 7,300 sentences and 173,542 tokens, the development set consists of 1,636 sentences and 38,185 tokens and the test set consists of 2,012 sentences and 47,377 tokens. 4.3 Expert sets For each task we compare the performance of the LOP-CRF to that of the standard CRF by defining a single, complex CRF, which we call a monolithic CRF, and a range of expert sets. The monolithic CRF for NER comprises a number of word and POS tag features in a window of five words around the current word, along with a set of orthographic features defined on the current word. These are based on those found in (Curran and Clark, 2003). Examples include whether the current word is capitalised, is an initial, contains a digit, contains punctuation, etc. The monolithic CRF for NER has 450,345 features. The monolithic CRF for POS tagging comprises word and POS features similar to those in the NER monolithic model, but over a smaller number of orthographic features. The monolithic model for POS tagging has 188,448 features. Each of our expert sets consists of a number of CRF experts. Usually these experts are designed to 4See (Cohn et al., 2005) for a scaling method allowing the full POS tagging task with CRFs. focus on modelli</context>
</contexts>
<marker>Curran, Clark, 2003</marker>
<rawString>J. Curran and S. Clark. 2003. Language independent NER using a maximum entropy tagger. In Proc. CoNLL-2003.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Della Pietra</author>
<author>Della Pietra V</author>
<author>J Lafferty</author>
</authors>
<title>Inducing features of random fields.</title>
<date>1997</date>
<booktitle>In IEEE PAMI,</booktitle>
<volume>19</volume>
<issue>4</issue>
<pages>380393</pages>
<contexts>
<context position="5647" citStr="Pietra et al., 1997" startWordPosition="891" endWordPosition="894">raints, whereby the expected count of each feature under the model is equal to its empirical count on the training data: 1In this paper we assume there is a one-to-one mapping between states and labels, though this need not be the case. Ep(o,s)[ fk]Ep(s|o)[ fk] = 0, k In general this cannot be solved for the k in closed form so numerical routines must be used. Malouf (2002) and Sha and Pereira (2003) show that gradient-based algorithms, particularly limited memory variable metric (LMVM), require much less time to reach convergence, for some NLP tasks, than the iterative scaling methods (Della Pietra et al., 1997) previously used for log-linear optimisation problems. In all our experiments we use the LMVM method to train the CRFs. For CRFs with general graphical structure, calculation of Ep(s|o)[ fk] is intractable, but for the linear chain case Lafferty et al. (2001) describe an efficient dynamic programming procedure for inference, similar in nature to the forward-backward algorithm in hidden Markov models. 3 Logarithmic Opinion Pools In this paper an expert model refers a probabilistic model that focuses on modelling a specific subset of some probability distribution. The concept of combining the di</context>
</contexts>
<marker>Pietra, V, Lafferty, 1997</marker>
<rawString>S. Della Pietra, Della Pietra V., and J. Lafferty. 1997. Inducing features of random fields. In IEEE PAMI, volume 19(4), pages 380393.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L Gillick</author>
<author>S Cox</author>
</authors>
<title>Some statistical issues in the comparison of speech recognition algorithms.</title>
<date>1989</date>
<booktitle>In International Conference on Acoustics, Speech and Signal Processing,</booktitle>
<volume>1</volume>
<pages>532535</pages>
<contexts>
<context position="19963" citStr="Gillick and Cox, 1989" startWordPosition="3323" endWordPosition="3326"> 70.17 Table 1: Development set F scores for NER experts 6.2 LOP-CRFs with unregularised weights In this section we present results for LOP-CRFs with unregularised weights. Table 2 gives F scores for NER LOP-CRFs while Table 3 gives accuracies for the POS tagging LOP-CRFs. The monolithic CRF scores are included for comparison. Both tables illustrate the following points: In every case the LOP-CRFs outperform the unregularised monolithic CRF In most cases the performance of LOP-CRFs rivals that of the regularised monolithic CRF, and in some cases exceeds it. We use McNemars matched-pairs test (Gillick and Cox, 1989) on point-wise labelling errors to examine the statistical significance of these results. We test significance at the 5% level. At this threshold, all the LOP-CRFs significantly outperform the corresponding unregularised monolithic CRF. In addition, those marked with show a significant improvement over the regularised monolithic CRF. Only the value marked with in Table 3 significantly under performs the regularised monolithic. All other values a do not differ significantly from those of the regularised monolithic CRF at the 5% level. These results show that LOP-CRFs with unregularised weights </context>
</contexts>
<marker>Gillick, Cox, 1989</marker>
<rawString>L. Gillick and S. Cox. 1989. Some statistical issues in the comparison of speech recognition algorithms. In International Conference on Acoustics, Speech and Signal Processing, volume 1, pages 532535.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Heskes</author>
</authors>
<title>Selecting weighting factors in logarithmic opinion pools.</title>
<date>1998</date>
<booktitle>In Advances in Neural Information Processing Systems 10.</booktitle>
<contexts>
<context position="7210" citStr="Heskes (1998)" startWordPosition="1150" endWordPosition="1151">al distributions p(s|o) and a set of non-negative normalised weights w, a logarithmic opinion pool 2 is defined as the distribution: pLOP(s|o) = 1 ZLOP(o) [p(s|o)]w (2) with w 0 and w = 1, and where ZLOP(o) is the normalisation constant: ZLOP(o) = s [p(s|o)]w (3) 2Hinton (1999) introduced a variant of the LOP idea called Product of Experts, in which expert distributions are multiplied under a uniform weight distribution. 19 \x0cThe weight w encodes our confidence in the opinion of expert . Suppose that there is a true conditional distribution q(s |o) which each p(s |o) is attempting to model. Heskes (1998) shows that the KL divergence between q(s |o) and the LOP, can be decomposed into two terms: K(q, pLOP) = E A (4) = wK (q, p) wK (pLOP, p) This tells us that the closeness of the LOP model to q(s |o) is governed by a trade-off between two terms: an E term, which represents the closeness of the individual experts to q(s |o), and an A term, which represents the closeness of the individual experts to the LOP, and therefore indirectly to each other. Hence for the LOP to model q well, we desire models p which are individually good models of q (having low E) and are also diverse (having large A). 3.</context>
</contexts>
<marker>Heskes, 1998</marker>
<rawString>T. Heskes. 1998. Selecting weighting factors in logarithmic opinion pools. In Advances in Neural Information Processing Systems 10.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G E Hinton</author>
</authors>
<title>Product of experts.</title>
<date>1999</date>
<booktitle>In ICANN,</booktitle>
<volume>1</volume>
<pages>16</pages>
<contexts>
<context position="6875" citStr="Hinton (1999)" startWordPosition="1093" endWordPosition="1094">a set of expert models via a weighted product has previously been used in a range of different application areas, including economics and management science (Bordley, 1982), and NLP (Osborne and Baldridge, 2004). In this paper we restrict ourselves to sequence models. Given a set of sequence model experts, indexed by , with conditional distributions p(s|o) and a set of non-negative normalised weights w, a logarithmic opinion pool 2 is defined as the distribution: pLOP(s|o) = 1 ZLOP(o) [p(s|o)]w (2) with w 0 and w = 1, and where ZLOP(o) is the normalisation constant: ZLOP(o) = s [p(s|o)]w (3) 2Hinton (1999) introduced a variant of the LOP idea called Product of Experts, in which expert distributions are multiplied under a uniform weight distribution. 19 \x0cThe weight w encodes our confidence in the opinion of expert . Suppose that there is a true conditional distribution q(s |o) which each p(s |o) is attempting to model. Heskes (1998) shows that the KL divergence between q(s |o) and the LOP, can be decomposed into two terms: K(q, pLOP) = E A (4) = wK (q, p) wK (pLOP, p) This tells us that the closeness of the LOP model to q(s |o) is governed by a trade-off between two terms: an E term, which re</context>
</contexts>
<marker>Hinton, 1999</marker>
<rawString>G. E. Hinton. 1999. Product of experts. In ICANN, volume 1, pages 16.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Lafferty</author>
<author>A McCallum</author>
<author>F Pereira</author>
</authors>
<title>Conditional random fields: Probabilistic models for segmenting and labeling sequence data. In</title>
<date>2001</date>
<booktitle>Proc. ICML</booktitle>
<contexts>
<context position="1511" citStr="Lafferty et al., 2001" startWordPosition="215" endWordPosition="218">erent perspective, by factoring the CRF distribution into a weighted product of individual expert CRF distributions. We call this model a logarithmic opinion pool (LOP) of CRFs (LOP-CRFs). We apply the LOP-CRF to two sequencing tasks. Our results show that unregularised expert CRFs with an unregularised CRF under a LOP can outperform the unregularised CRF, and attain a performance level close to the regularised CRF. LOP-CRFs therefore provide a viable alternative to CRF regularisation without the need for hyperparameter search. 1 Introduction In recent years, conditional random fields (CRFs) (Lafferty et al., 2001) have shown success on a number of natural language processing (NLP) tasks, including shallow parsing (Sha and Pereira, 2003), named entity recognition (McCallum and Li, 2003) and information extraction from research papers (Peng and McCallum, 2004). In general, this work has demonstrated the susceptibility of CRFs to overfit the training data during parameter estimation. As a consequence, it is now standard to use some form of overfitting reduction in CRF training. Recently, there have been a number of sophisticated approaches to reducing overfitting in CRFs, including automatic feature induc</context>
<context position="5906" citStr="Lafferty et al. (2001)" startWordPosition="934" endWordPosition="937"> fk] = 0, k In general this cannot be solved for the k in closed form so numerical routines must be used. Malouf (2002) and Sha and Pereira (2003) show that gradient-based algorithms, particularly limited memory variable metric (LMVM), require much less time to reach convergence, for some NLP tasks, than the iterative scaling methods (Della Pietra et al., 1997) previously used for log-linear optimisation problems. In all our experiments we use the LMVM method to train the CRFs. For CRFs with general graphical structure, calculation of Ep(s|o)[ fk] is intractable, but for the linear chain case Lafferty et al. (2001) describe an efficient dynamic programming procedure for inference, similar in nature to the forward-backward algorithm in hidden Markov models. 3 Logarithmic Opinion Pools In this paper an expert model refers a probabilistic model that focuses on modelling a specific subset of some probability distribution. The concept of combining the distributions of a set of expert models via a weighted product has previously been used in a range of different application areas, including economics and management science (Bordley, 1982), and NLP (Osborne and Baldridge, 2004). In this paper we restrict ourse</context>
</contexts>
<marker>Lafferty, McCallum, Pereira, 2001</marker>
<rawString>J. Lafferty, A. McCallum, and F. Pereira. 2001. Conditional random fields: Probabilistic models for segmenting and labeling sequence data. In Proc. ICML 2001.</rawString>
</citation>
<citation valid="true">
<authors>
<author>R Malouf</author>
</authors>
<title>A comparison of algorithms for maximum entropy parameter estimation.</title>
<date>2002</date>
<booktitle>In Proc. CoNLL-2002.</booktitle>
<contexts>
<context position="5403" citStr="Malouf (2002)" startWordPosition="857" endWordPosition="858">y: L () = o,s p(o,s)log p(s|o;) = o,s p(o,s) &quot; T+1 t=1 f(s,o,t) # o p(o)logZ(o;) where p(o,s) and p(o) are empirical distributions defined by the training set. At the maximum likelihood solution the model satisfies a set of feature constraints, whereby the expected count of each feature under the model is equal to its empirical count on the training data: 1In this paper we assume there is a one-to-one mapping between states and labels, though this need not be the case. Ep(o,s)[ fk]Ep(s|o)[ fk] = 0, k In general this cannot be solved for the k in closed form so numerical routines must be used. Malouf (2002) and Sha and Pereira (2003) show that gradient-based algorithms, particularly limited memory variable metric (LMVM), require much less time to reach convergence, for some NLP tasks, than the iterative scaling methods (Della Pietra et al., 1997) previously used for log-linear optimisation problems. In all our experiments we use the LMVM method to train the CRFs. For CRFs with general graphical structure, calculation of Ep(s|o)[ fk] is intractable, but for the linear chain case Lafferty et al. (2001) describe an efficient dynamic programming procedure for inference, similar in nature to the forw</context>
</contexts>
<marker>Malouf, 2002</marker>
<rawString>R. Malouf. 2002. A comparison of algorithms for maximum entropy parameter estimation. In Proc. CoNLL-2002.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A McCallum</author>
<author>W Li</author>
</authors>
<title>Early results for named entity recognition with conditional random fields, feature induction and web-enhanced lexicons.</title>
<date>2003</date>
<booktitle>In Proc. CoNLL-2003.</booktitle>
<contexts>
<context position="1686" citStr="McCallum and Li, 2003" startWordPosition="243" endWordPosition="246">s (LOP-CRFs). We apply the LOP-CRF to two sequencing tasks. Our results show that unregularised expert CRFs with an unregularised CRF under a LOP can outperform the unregularised CRF, and attain a performance level close to the regularised CRF. LOP-CRFs therefore provide a viable alternative to CRF regularisation without the need for hyperparameter search. 1 Introduction In recent years, conditional random fields (CRFs) (Lafferty et al., 2001) have shown success on a number of natural language processing (NLP) tasks, including shallow parsing (Sha and Pereira, 2003), named entity recognition (McCallum and Li, 2003) and information extraction from research papers (Peng and McCallum, 2004). In general, this work has demonstrated the susceptibility of CRFs to overfit the training data during parameter estimation. As a consequence, it is now standard to use some form of overfitting reduction in CRF training. Recently, there have been a number of sophisticated approaches to reducing overfitting in CRFs, including automatic feature induction (McCallum, 2003) and a full Bayesian approach to training and inference (Qi et al., 2005). These advanced methods tend to be difficult to implement and are often computat</context>
</contexts>
<marker>McCallum, Li, 2003</marker>
<rawString>A. McCallum and W. Li. 2003. Early results for named entity recognition with conditional random fields, feature induction and web-enhanced lexicons. In Proc. CoNLL-2003.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A McCallum</author>
<author>K Rohanimanesh</author>
<author>C Sutton</author>
</authors>
<title>Dynamic conditional random fields for jointly labeling multiple sequences.</title>
<date>2003</date>
<booktitle>In NIPS-2003 Workshop on Syntax, Semantics and Statistics.</booktitle>
<contexts>
<context position="13937" citStr="McCallum et al., 2003" startWordPosition="2311" endWordPosition="2314">aining set consists of 14,987 sentences and 204,567 tokens, the development set consists of 3,466 sentences and 51,578 tokens and the test set consists of 3,684 sentences and 46,666 tokens. 21 \x0c4.2 Part-of-Speech Tagging POS tagging involves labelling each word in a sentence with its part-of-speech, for example noun, verb, adjective, etc. For our experiments we use the CoNLL-2000 shared task dataset (Tjong Kim Sang and Buchholz, 2000). This has 48 different POS tags. In order to make training time manageable4, we collapse the number of POS tags from 48 to 5 following the procedure used in (McCallum et al., 2003). In summary: All types of noun collapse to category N. All types of verb collapse to category V. All types of adjective collapse to category J. All types of adverb collapse to category R. All other POS tags collapse to category O. The training set consists of 7,300 sentences and 173,542 tokens, the development set consists of 1,636 sentences and 38,185 tokens and the test set consists of 2,012 sentences and 47,377 tokens. 4.3 Expert sets For each task we compare the performance of the LOP-CRF to that of the standard CRF by defining a single, complex CRF, which we call a monolithic CRF, and a </context>
</contexts>
<marker>McCallum, Rohanimanesh, Sutton, 2003</marker>
<rawString>A. McCallum, K. Rohanimanesh, and C. Sutton. 2003. Dynamic conditional random fields for jointly labeling multiple sequences. In NIPS-2003 Workshop on Syntax, Semantics and Statistics.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A McCallum</author>
</authors>
<title>Efficiently inducing features of conditional random fields.</title>
<date>2003</date>
<booktitle>In Proc. UAI</booktitle>
<contexts>
<context position="2132" citStr="McCallum, 2003" startWordPosition="312" endWordPosition="313">shown success on a number of natural language processing (NLP) tasks, including shallow parsing (Sha and Pereira, 2003), named entity recognition (McCallum and Li, 2003) and information extraction from research papers (Peng and McCallum, 2004). In general, this work has demonstrated the susceptibility of CRFs to overfit the training data during parameter estimation. As a consequence, it is now standard to use some form of overfitting reduction in CRF training. Recently, there have been a number of sophisticated approaches to reducing overfitting in CRFs, including automatic feature induction (McCallum, 2003) and a full Bayesian approach to training and inference (Qi et al., 2005). These advanced methods tend to be difficult to implement and are often computationally expensive. Consequently, due to its ease of implementation, the current standard approach to reducing overfitting in CRFs is the use of a prior distribution over the model parameters, typically a Gaussian. The disadvantage with this method, however, is that it requires adjusting the value of one or more of the distributions hyperparameters. This usually involves manual or automatic tuning on a development set, and can be an expensive </context>
</contexts>
<marker>McCallum, 2003</marker>
<rawString>A. McCallum. 2003. Efficiently inducing features of conditional random fields. In Proc. UAI 2003.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Osborne</author>
<author>J Baldridge</author>
</authors>
<title>Ensemble-based active learning for parse selection.</title>
<date>2004</date>
<booktitle>In Proc. NAACL</booktitle>
<contexts>
<context position="6473" citStr="Osborne and Baldridge, 2004" startWordPosition="1021" endWordPosition="1024">actable, but for the linear chain case Lafferty et al. (2001) describe an efficient dynamic programming procedure for inference, similar in nature to the forward-backward algorithm in hidden Markov models. 3 Logarithmic Opinion Pools In this paper an expert model refers a probabilistic model that focuses on modelling a specific subset of some probability distribution. The concept of combining the distributions of a set of expert models via a weighted product has previously been used in a range of different application areas, including economics and management science (Bordley, 1982), and NLP (Osborne and Baldridge, 2004). In this paper we restrict ourselves to sequence models. Given a set of sequence model experts, indexed by , with conditional distributions p(s|o) and a set of non-negative normalised weights w, a logarithmic opinion pool 2 is defined as the distribution: pLOP(s|o) = 1 ZLOP(o) [p(s|o)]w (2) with w 0 and w = 1, and where ZLOP(o) is the normalisation constant: ZLOP(o) = s [p(s|o)]w (3) 2Hinton (1999) introduced a variant of the LOP idea called Product of Experts, in which expert distributions are multiplied under a uniform weight distribution. 19 \x0cThe weight w encodes our confidence in the o</context>
</contexts>
<marker>Osborne, Baldridge, 2004</marker>
<rawString>M. Osborne and J. Baldridge. 2004. Ensemble-based active learning for parse selection. In Proc. NAACL 2004.</rawString>
</citation>
<citation valid="true">
<authors>
<author>F Peng</author>
<author>A McCallum</author>
</authors>
<title>Accurate information extraction from research papers using conditional random fields.</title>
<date>2004</date>
<contexts>
<context position="1760" citStr="Peng and McCallum, 2004" startWordPosition="253" endWordPosition="256">show that unregularised expert CRFs with an unregularised CRF under a LOP can outperform the unregularised CRF, and attain a performance level close to the regularised CRF. LOP-CRFs therefore provide a viable alternative to CRF regularisation without the need for hyperparameter search. 1 Introduction In recent years, conditional random fields (CRFs) (Lafferty et al., 2001) have shown success on a number of natural language processing (NLP) tasks, including shallow parsing (Sha and Pereira, 2003), named entity recognition (McCallum and Li, 2003) and information extraction from research papers (Peng and McCallum, 2004). In general, this work has demonstrated the susceptibility of CRFs to overfit the training data during parameter estimation. As a consequence, it is now standard to use some form of overfitting reduction in CRF training. Recently, there have been a number of sophisticated approaches to reducing overfitting in CRFs, including automatic feature induction (McCallum, 2003) and a full Bayesian approach to training and inference (Qi et al., 2005). These advanced methods tend to be difficult to implement and are often computationally expensive. Consequently, due to its ease of implementation, the cu</context>
</contexts>
<marker>Peng, McCallum, 2004</marker>
<rawString>F. Peng and A. McCallum. 2004. Accurate information extraction from research papers using conditional random fields.</rawString>
</citation>
<citation valid="true">
<date>2004</date>
<booktitle>In Proc. HLT-NAACL</booktitle>
<marker>2004</marker>
<rawString>In Proc. HLT-NAACL 2004.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Y Qi</author>
<author>M Szummer</author>
<author>T P Minka</author>
</authors>
<title>Bayesian conditional random fields.</title>
<date>2005</date>
<booktitle>In Proc. AISTATS</booktitle>
<contexts>
<context position="2205" citStr="Qi et al., 2005" startWordPosition="323" endWordPosition="326">cluding shallow parsing (Sha and Pereira, 2003), named entity recognition (McCallum and Li, 2003) and information extraction from research papers (Peng and McCallum, 2004). In general, this work has demonstrated the susceptibility of CRFs to overfit the training data during parameter estimation. As a consequence, it is now standard to use some form of overfitting reduction in CRF training. Recently, there have been a number of sophisticated approaches to reducing overfitting in CRFs, including automatic feature induction (McCallum, 2003) and a full Bayesian approach to training and inference (Qi et al., 2005). These advanced methods tend to be difficult to implement and are often computationally expensive. Consequently, due to its ease of implementation, the current standard approach to reducing overfitting in CRFs is the use of a prior distribution over the model parameters, typically a Gaussian. The disadvantage with this method, however, is that it requires adjusting the value of one or more of the distributions hyperparameters. This usually involves manual or automatic tuning on a development set, and can be an expensive process as the CRF must be retrained many times for different hyperparame</context>
</contexts>
<marker>Qi, Szummer, Minka, 2005</marker>
<rawString>Y. Qi, M. Szummer, and T. P. Minka. 2005. Bayesian conditional random fields. In Proc. AISTATS 2005.</rawString>
</citation>
<citation valid="true">
<authors>
<author>F Sha</author>
<author>F Pereira</author>
</authors>
<title>Shallow parsing with conditional random fields.</title>
<date>2003</date>
<booktitle>In Proc. HLT-NAACL</booktitle>
<contexts>
<context position="1636" citStr="Sha and Pereira, 2003" startWordPosition="236" endWordPosition="239">this model a logarithmic opinion pool (LOP) of CRFs (LOP-CRFs). We apply the LOP-CRF to two sequencing tasks. Our results show that unregularised expert CRFs with an unregularised CRF under a LOP can outperform the unregularised CRF, and attain a performance level close to the regularised CRF. LOP-CRFs therefore provide a viable alternative to CRF regularisation without the need for hyperparameter search. 1 Introduction In recent years, conditional random fields (CRFs) (Lafferty et al., 2001) have shown success on a number of natural language processing (NLP) tasks, including shallow parsing (Sha and Pereira, 2003), named entity recognition (McCallum and Li, 2003) and information extraction from research papers (Peng and McCallum, 2004). In general, this work has demonstrated the susceptibility of CRFs to overfit the training data during parameter estimation. As a consequence, it is now standard to use some form of overfitting reduction in CRF training. Recently, there have been a number of sophisticated approaches to reducing overfitting in CRFs, including automatic feature induction (McCallum, 2003) and a full Bayesian approach to training and inference (Qi et al., 2005). These advanced methods tend t</context>
<context position="5430" citStr="Sha and Pereira (2003)" startWordPosition="860" endWordPosition="863">s)log p(s|o;) = o,s p(o,s) &quot; T+1 t=1 f(s,o,t) # o p(o)logZ(o;) where p(o,s) and p(o) are empirical distributions defined by the training set. At the maximum likelihood solution the model satisfies a set of feature constraints, whereby the expected count of each feature under the model is equal to its empirical count on the training data: 1In this paper we assume there is a one-to-one mapping between states and labels, though this need not be the case. Ep(o,s)[ fk]Ep(s|o)[ fk] = 0, k In general this cannot be solved for the k in closed form so numerical routines must be used. Malouf (2002) and Sha and Pereira (2003) show that gradient-based algorithms, particularly limited memory variable metric (LMVM), require much less time to reach convergence, for some NLP tasks, than the iterative scaling methods (Della Pietra et al., 1997) previously used for log-linear optimisation problems. In all our experiments we use the LMVM method to train the CRFs. For CRFs with general graphical structure, calculation of Ep(s|o)[ fk] is intractable, but for the linear chain case Lafferty et al. (2001) describe an efficient dynamic programming procedure for inference, similar in nature to the forward-backward algorithm in h</context>
</contexts>
<marker>Sha, Pereira, 2003</marker>
<rawString>F. Sha and F. Pereira. 2003. Shallow parsing with conditional random fields. In Proc. HLT-NAACL 2003.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E F Tjong Kim Sang</author>
<author>S Buchholz</author>
</authors>
<title>Introduction to the CoNLL-2000 shared task: Chunking. In</title>
<date>2000</date>
<booktitle>Proc. CoNLL2000.</booktitle>
<contexts>
<context position="13756" citStr="Sang and Buchholz, 2000" startWordPosition="2278" endWordPosition="2281"> shared task dataset (Tjong Kim Sang and De Meulder, 2003). For this dataset the entity types are: persons (PER), locations (LOC), organisations (ORG) and miscellaneous (MISC). The training set consists of 14,987 sentences and 204,567 tokens, the development set consists of 3,466 sentences and 51,578 tokens and the test set consists of 3,684 sentences and 46,666 tokens. 21 \x0c4.2 Part-of-Speech Tagging POS tagging involves labelling each word in a sentence with its part-of-speech, for example noun, verb, adjective, etc. For our experiments we use the CoNLL-2000 shared task dataset (Tjong Kim Sang and Buchholz, 2000). This has 48 different POS tags. In order to make training time manageable4, we collapse the number of POS tags from 48 to 5 following the procedure used in (McCallum et al., 2003). In summary: All types of noun collapse to category N. All types of verb collapse to category V. All types of adjective collapse to category J. All types of adverb collapse to category R. All other POS tags collapse to category O. The training set consists of 7,300 sentences and 173,542 tokens, the development set consists of 1,636 sentences and 38,185 tokens and the test set consists of 2,012 sentences and 47,377 </context>
</contexts>
<marker>Sang, Buchholz, 2000</marker>
<rawString>E. F. Tjong Kim Sang and S. Buchholz. 2000. Introduction to the CoNLL-2000 shared task: Chunking. In Proc. CoNLL2000.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E F Tjong Kim Sang</author>
<author>F De Meulder</author>
</authors>
<title>Introduction to the CoNLL-2003 shared task: Language-independent named entity recognition.</title>
<date>2003</date>
<booktitle>In Proc. CoNLL-2003.</booktitle>
<marker>Sang, De Meulder, 2003</marker>
<rawString>E. F. Tjong Kim Sang and F. De Meulder. 2003. Introduction to the CoNLL-2003 shared task: Language-independent named entity recognition. In Proc. CoNLL-2003.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>