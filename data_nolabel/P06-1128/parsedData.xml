<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="SectLabel" version="110505">
<variant no="0" confidence="0.000000">
<bodyText confidence="0.728887">
b&amp;apos;Proceedings of the 21st International Conference on Computational Linguistics and 44th Annual Meeting of the ACL, pages 10171024,
Sydney, July 2006. c
</bodyText>
<figure confidence="0.8469282">
2006 Association for Computational Linguistics
Semantic Retrieval for the Accurate Identification of Relational Concepts
in Massive Textbases
Yusuke Miyao
Tomoko Ohta
Katsuya Masuda
Yoshimasa Tsuruoka
Kazuhiro Yoshida
Takashi Ninomiya
Junichi Tsujii
</figure>
<affiliation confidence="0.966792">
Department of Computer Science, University of Tokyo
School of Informatics, University of Manchester
Information Technology Center, University of Tokyo
</affiliation>
<address confidence="0.95804">
Hongo 7-3-1, Bunkyo-ku, Tokyo 113-0033 JAPAN
</address>
<email confidence="0.995616">
{yusuke,okap,kmasuda,tsuruoka,kyoshida,ninomi,tsujii}@is.s.u-tokyo.ac.jp
</email>
<sectionHeader confidence="0.990737" genericHeader="abstract">
Abstract
</sectionHeader>
<bodyText confidence="0.999180722222222">
This paper introduces a novel framework
for the accurate retrieval of relational con-
cepts from huge texts. Prior to retrieval,
all sentences are annotated with predicate
argument structures and ontological iden-
tifiers by applying a deep parser and a term
recognizer. During the run time, user re-
quests are converted into queries of region
algebra on these annotations. Structural
matching with pre-computed semantic an-
notations establishes the accurate and effi-
cient retrieval of relational concepts. This
framework was applied to a text retrieval
system for MEDLINE. Experiments on
the retrieval of biomedical correlations re-
vealed that the cost is sufficiently small for
real-time applications and that the retrieval
precision is significantly improved.
</bodyText>
<sectionHeader confidence="0.997971" genericHeader="introduction">
1 Introduction
</sectionHeader>
<bodyText confidence="0.999128740740741">
Rapid expansion of text information has motivated
the development of efficient methods of access-
ing information in huge texts. Furthermore, user
demand has shifted toward the retrieval of more
precise and complex information, including re-
lational concepts. For example, biomedical re-
searchers deal with a massive quantity of publica-
tions; MEDLINE contains approximately 15 mil-
lion references to journal articles in life sciences,
and its size is rapidly increasing, at a rate of more
than 10% yearly (National Library of Medicine,
2005). Researchers would like to be able to
search this huge textbase for biomedical correla-
tions such as protein-protein or gene-disease asso-
ciations (Blaschke and Valencia, 2002; Hao et al.,
2005; Chun et al., 2006). However, the framework
of traditional information retrieval (IR) has diffi-
culty with the accurate retrieval of such relational
concepts because relational concepts are essen-
tially determined by semantic relations between
words, and keyword-based IR techniques are in-
sufficient to describe such relations precisely.
The present paper demonstrates a framework
for the accurate real-time retrieval of relational
concepts from huge texts. Prior to retrieval, we
prepare a semantically annotated textbase by ap-
plying NLP tools including deep parsers and term
recognizers. That is, all sentences are annotated
in advance with semantic structures and are stored
in a structured database. User requests are con-
verted on the fly into patterns of these semantic
annotations, and texts are retrieved by matching
these patterns with the pre-computed semantic an-
notations. The accurate retrieval of relational con-
cepts is attained because we can precisely describe
relational concepts using semantic annotations. In
addition, real-time retrieval is possible because se-
mantic annotations are computed in advance.
This framework has been implemented for a
text retrieval system for MEDLINE. We first ap-
ply a deep parser (Miyao and Tsujii, 2005) and
a dictionary-based term recognizer (Tsuruoka and
Tsujii, 2004) to MEDLINE and obtain annotations
of predicate argument structures and ontological
identifiers of genes, gene products, diseases, and
events. We then provide a search engine for these
annotated sentences. User requests are converted
into queries of region algebra (Clarke et al., 1995)
extended with variables (Masuda et al., 2006) on
these annotations. A search engine for the ex-
tended region algebra efficiently finds sentences
having semantic annotations that match the input
queries. In this paper, we evaluate this system with
respect to the retrieval of biomedical correlations
</bodyText>
<page confidence="0.968765">
1017
</page>
<table confidence="0.481380714285714">
\x0cSymbol CRP
Name C-reactive protein, pentraxin-related
Species Homo sapiens
Synonym MGC88244, PTX1
Product C-reactive protein precursor, C-reactive
protein, pentraxin-related protein
External links EntrezGene:1401, GDB:119071, .. .
</table>
<tableCaption confidence="0.996497">
Table 1: An example GENA entry
</tableCaption>
<bodyText confidence="0.998947772727273">
and examine the effects of using predicate argu-
ment structures and ontological identifiers.
The need for the discovery of relational con-
cepts has been investigated intensively in Infor-
mation Extraction (IE). However, little research
has targeted on-demand retrieval from huge texts.
One difficulty is that IE techniques such as pat-
tern matching and machine learning require heav-
ier processing in order to be applied on the fly.
Another difficulty is that target information must
be formalized beforehand and each system is de-
signed for a specific task. For instance, an IE
system for protein-protein interactions is not use-
ful for finding gene-disease associations. Apart
from IE research, enrichment of texts with vari-
ous annotations has been proposed and is becom-
ing a new research area for information manage-
ment (IBM, 2005; TEI, 2004). The present study
basically examines this new direction in research.
The significant contribution of the present paper,
however, is to provide the first empirical results of
this framework for a real task with a huge textbase.
</bodyText>
<sectionHeader confidence="0.547871" genericHeader="method">
2 Background: Resources and Tools for
</sectionHeader>
<subsectionHeader confidence="0.866745">
Semantic Annotations
</subsectionHeader>
<bodyText confidence="0.9996644">
The proposed system for the retrieval of relational
concepts is a product of recent developments in
NLP resources and tools. In this section, ontology
databases, deep parsers, and search algorithms for
structured data are introduced.
</bodyText>
<subsectionHeader confidence="0.982772">
2.1 Ontology databases
</subsectionHeader>
<bodyText confidence="0.981235727272727">
Ontology databases are collections of words and
phrases in specific domains. Such databases have
been constructed extensively for the systematic
management of domain knowledge by organizing
textual expressions of ontological entities that are
detached from actual sentences.
For example, GENA (Koike and Takagi, 2004)
is a database of genes and gene products that
is semi-automatically collected from well-known
databases, including HUGO, OMIM, Genatlas,
Locuslink, GDB, MGI, FlyBase, WormBase,
</bodyText>
<figureCaption confidence="0.9999895">
Figure 1: An output of HPSG parsing
Figure 2: A predicate argument structure
</figureCaption>
<bodyText confidence="0.998134227272727">
CYGD, and SGD. Table 1 shows an example of
a GENA entry. Symbol and Name denote
short forms and nomenclatures of genes, respec-
tively. Species represents the organism species
in which this gene is observed. Synonym is a
list of synonyms and name variations. Product
gives a list of products of this gene, such as pro-
teins coded by this gene. External links pro-
vides links to other databases, and helps to obtain
detailed information from these databases. For
biomedical terms other than genes/gene products,
the Unified Medical Language System (UMLS)
meta-thesaurus (Lindberg et al., 1993) is a large
database that contains various names of biomedi-
cal and health-related concepts.
Ontology databases provide mappings be-
tween textual expressions and entities in the real
world. For example, Table 1 indicates that CRP,
MGC88244, and PTX1 denote the same gene con-
ceptually. Hence, these resources enable us to
canonicalize variations of textual expressions of
ontological entities.
</bodyText>
<subsectionHeader confidence="0.999684">
2.2 Parsing technologies
</subsectionHeader>
<bodyText confidence="0.999128142857143">
Recently, state-of-the-art CFG parsers (Charniak
and Johnson, 2005) can compute phrase structures
of natural sentences at fairly high accuracy. These
parsers have been used in various NLP tasks in-
cluding IE and text mining. In addition, parsers
that compute deeper analyses, such as predicate
argument structures, have become available for
</bodyText>
<page confidence="0.988468">
1018
</page>
<bodyText confidence="0.999803923076923">
\x0cthe processing of real-world sentences (Miyao and
Tsujii, 2005). Predicate argument structures are
canonicalized representations of sentence mean-
ings, and express the semantic relations of words
explicitly. Figure 1 shows an output of an HPSG
parser (Miyao and Tsujii, 2005) for the sentence
A normal serum CRP measurement does not ex-
clude deep vein thrombosis. The dotted lines ex-
press predicate argument relations. For example,
the ARG1 arrow coming from exclude points
to the noun phrase A normal serum CRP mea-
surement, which indicates that the subject of ex-
clude is this noun phrase, while such relations are
not explicitly represented by phrase structures.
Predicate argument structures are beneficial for
our purpose because they can represent relational
concepts in an abstract manner. For example, the
relational concept of CRP excludes thrombosis
can be represented as a predicate argument struc-
ture, as shown in Figure 2. This structure is univer-
sal in various syntactic expressions, such as pas-
sivization (e.g., thrombosis is excluded by CRP)
and relativization (e.g., thrombosis that CRP ex-
cludes). Hence, we can abstract surface varia-
tions of sentences and describe relational concepts
in a canonicalized form.
</bodyText>
<subsectionHeader confidence="0.989041">
2.3 Structural search algorithms
</subsectionHeader>
<bodyText confidence="0.976760181818182">
Search algorithms for structured texts have been
studied extensively, and examples include XML
databases with XPath (Clark and DeRose, 1999)
and XQuery (Boag et al., 2005), and region alge-
bra (Clarke et al., 1995). The present study fo-
cuses on region algebra extended with variables
(Masuda et al., 2006) because it provides an ef-
ficient search algorithm for tags with cross bound-
aries. When we annotate texts with various levels
of syntactic/semantic structures, cross boundaries
are inherently nonnegligible. In fact, as described
in Section 3, our system exploits annotations of
predicate argument structures and ontological en-
tities, which include substantial cross boundaries.
Region algebra is defined as a set of operators
on regions, i.e., word sequences. Table 2 shows
operators of the extended region algebra, where
A and B denote regions, and results of operations
are also regions. For example, A &amp; B denotes a
region that includes both A and B. Four contain-
ment operators, &amp;gt;, &amp;gt;&amp;gt;, &amp;lt;, and &amp;lt;&amp;lt;, represent an-
cestor/descendant relations in XML. For example,
</bodyText>
<figure confidence="0.667856454545455">
A &amp;gt; B indicates that A is an ancestor of B. In
[tag] Region covered with &amp;lt;tag&amp;gt;
A &amp;gt; B A containing B
A &amp;gt;&amp;gt; B A containing B (A is not nested)
A &amp;lt; B A contained by B
A &amp;lt;&amp;lt; B A contained by B (B is not nested)
A - B Starting with A and ending with B
A &amp; B A and B
A  |B A or B
Table 2: Operators of the extended region algebra
[sentence] &amp;gt;&amp;gt;
</figure>
<figureCaption confidence="0.92341375">
(([word arg1=&amp;quot;$subject&amp;quot;] &amp;gt; exclude) &amp;
([phrase id=&amp;quot;$subject&amp;quot;] &amp;gt; CRP))
Figure 3: A query of the extended region algebra
Figure 4: Matching with the query in Figure 3
</figureCaption>
<bodyText confidence="0.998335">
search algorithms for region algebra, the cost of
retrieving the first answer is constant, and that of
an exhaustive search is bounded by the lowest fre-
quency of a word in a query (Clarke et al., 1995).
Variables in the extended region algebra allow
us to express shared structures and are necessary
in order to describe predicate argument structures.
For example, Figure 3 shows a formula in the ex-
tended region algebra that represents the predicate
argument structure of CRP excludes something.
This formula indicates that a sentence contains a
region in which the word exclude exists, the
first argument (arg1) phrase of which includes
the word CRP. A predicate argument relation is
expressed by the variable, $subject. Figure 4
shows a situation in which this formula is satisfied.
Three horizontal bars describe regions covered by
&amp;lt;sentence&amp;gt;, &amp;lt;phrase&amp;gt;, and &amp;lt;word&amp;gt; tags,
respectively. The dotted line denotes the relation
expressed by this variable. Given this formula as a
query, a search engine can retrieve sentences hav-
ing semantic annotations that satisfy this formula.
</bodyText>
<sectionHeader confidence="0.989862" genericHeader="method">
3 A Text Retrieval System for MEDLINE
</sectionHeader>
<bodyText confidence="0.999191166666667">
While the above resources and tools have been de-
veloped independently, their collaboration opens
up a new framework for the retrieval of relational
concepts, as described below (Figure 5).
Off-line processing: Prior to retrieval, a deep
parser is applied to compute predicate argument
</bodyText>
<page confidence="0.992569">
1019
</page>
<figureCaption confidence="0.880437">
\x0cFigure 5: Framework of semantic retrieval
</figureCaption>
<bodyText confidence="0.99034935">
structures, and a term recognizer is applied to cre-
ate mappings from textual expressions into identi-
fiers in ontology databases. Semantic annotations
are stored and indexed in a structured database for
the extended region algebra.
On-line processing: User input is converted into
queries of the extended region algebra. A search
engine retrieves sentences having semantic anno-
tations that match the queries.
This framework is applied to a text retrieval en-
gine for MEDLINE. MEDLINE is an exhaustive
database covering nearly 4,500 journals in the life
sciences and includes the bibliographies of arti-
cles, about half of which have abstracts. Research
on IE and text mining in biomedical science has
focused mainly on MEDLINE. In the present pa-
per, we target all articles indexed in MEDLINE at
the end of 2004 (14,785,094 articles). The follow-
ing sections explain in detail off-/on-line process-
ing for the text retrieval system for MEDLINE.
</bodyText>
<subsectionHeader confidence="0.90067">
3.1 Off-line processing: HPSG parsing and
</subsectionHeader>
<bodyText confidence="0.97950975">
term recognition
We first parsed all sentences using an HPSG parser
(Miyao and Tsujii, 2005) to obtain their predi-
cate argument structures. Because our target is
biomedical texts, we re-trained a parser (Hara et
al., 2005) with the GENIA treebank (Tateisi et
al., 2005), and also applied a bidirectional part-of-
speech tagger (Tsuruoka and Tsujii, 2005) trained
with the GENIA treebank as a preprocessor.
Because parsing speed is still unrealistic for
parsing the entire MEDLINE on a single ma-
chine, we used two geographically separated com-
puter clusters having 170 nodes (340 Xeon CPUs).
These clusters are separately administered and not
dedicated for use in the present study. In order to
effectively use such an environment, GXP (Taura,
2004) was used to connect these clusters and dis-
tribute the load among them. Our processes were
given the lowest priority so that our task would not
disturb other users. We finished parsing the entire
</bodyText>
<table confidence="0.9608862">
MEDLINE in nine days (Ninomiya et al., 2006).
# entries (genes) 517,773
# entries (gene products) 171,711
# entries (diseases) 148,602
# expanded entries 4,467,855
</table>
<tableCaption confidence="0.970408">
Table 3: Sizes of ontologies used for term recog-
</tableCaption>
<table confidence="0.413274">
nition
Event type Expressions
influence effect, affect, role, response, . ..
regulation mediate, regulate, regulation, .. .
activation induce, activate, activation, . ..
</table>
<tableCaption confidence="0.980278">
Table 4: Event expression ontology
</tableCaption>
<bodyText confidence="0.994412323529412">
Next, we annotated technical terms, such as
genes and diseases, to create mappings to onto-
logical identifiers. A dictionary-based term recog-
nition algorithm (Tsuruoka and Tsujii, 2004) was
applied for this task. First, an expanded term
list was created by generating name variations of
terms in GENA and the UMLS meta-thesaurus1.
Table 3 shows the size of the original database and
the number of entries expanded by name varia-
tions. Terms in MEDLINE were then identified
by the longest matching of entries in this expanded
list with words/phrases in MEDLINE.
The necessity of ontologies is not limited to
nominal expressions. Various verbs are used for
expressing events. For example, activation events
of proteins can be expressed by activate, en-
hance, and other event expressions. Although the
numbers of verbs and their event types are much
smaller than those of technical terms, verbal ex-
pressions are important for the description of rela-
tional concepts. Since ontologies of event expres-
sions in this domain have not yet been constructed,
we developed an ontology from scratch. We inves-
tigated 500 abstracts extracted from MEDLINE,
and classified 167 frequent expressions, including
verbs and their nominalized forms, into 18 event
types. Table 4 shows a part of this ontology. These
expressions in MEDLINE were automatically an-
notated with event types.
As a result, we obtained semantically annotated
MEDLINE. Table 5 shows the size of the orig-
inal MEDLINE and semantic annotations. Fig-
ure 6 shows semantic annotations for the sentence
in Figure 1, where - indicates nodes of XML,2
</bodyText>
<page confidence="0.768805">
1
</page>
<bodyText confidence="0.998766">
We collected disease names by specifying a query with
the semantic type as Disease or Syndrome.
</bodyText>
<page confidence="0.934232">
2
</page>
<bodyText confidence="0.995517666666667">
Although this example is shown in XML, this textbase
contains tags with cross boundaries because tags for predicate
argument structures and technical terms may overlap.
</bodyText>
<page confidence="0.944908">
1020
</page>
<table confidence="0.954878285714286">
\x0c# papers 14,785,094
# abstracts 7,291,857
# sentences 70,935,630
# words 1,462,626,934
# successfully parsed sentences 69,243,788
# predicate argument relations 1,510,233,701
# phrase tags 3,094,105,383
# terms (genes) 84,998,621
# terms (gene products) 27,471,488
# terms (diseases) 19,150,984
# terms (event expressions) 51,810,047
Size of the original MEDLINE 9.3 GByte
Size of the semantic annotations 292 GByte
Size of the index file for region algebra 954 GByte
</table>
<tableCaption confidence="0.890077">
Table 5: Sizes of the original and semantically an-
</tableCaption>
<table confidence="0.964159333333333">
notated MEDLINE textbases
- &amp;lt;sentence sentence_id=&amp;quot;e6e525&amp;quot;&amp;gt;
- &amp;lt;phrase id=&amp;quot;0&amp;quot; cat=&amp;quot;S&amp;quot; head=&amp;quot;15&amp;quot; lex_head=&amp;quot;18&amp;quot;&amp;gt;
- &amp;lt;phrase id=&amp;quot;1&amp;quot; cat=&amp;quot;NP&amp;quot; head=&amp;quot;4&amp;quot; lex_head=&amp;quot;14&amp;quot;&amp;gt;
- &amp;lt;phrase id=&amp;quot;2&amp;quot; cat=&amp;quot;DT&amp;quot; head=&amp;quot;3&amp;quot; lex_head=&amp;quot;3&amp;quot;&amp;gt;
- &amp;lt;word id=&amp;quot;3&amp;quot; pos=&amp;quot;DT&amp;quot; cat=&amp;quot;DT&amp;quot; base=&amp;quot;a&amp;quot; arg1=&amp;quot;4&amp;quot;&amp;gt;
- A
- &amp;lt;phrase id=&amp;quot;4&amp;quot; cat=&amp;quot;NP&amp;quot; head=&amp;quot;7&amp;quot; lex_head=&amp;quot;14&amp;quot;&amp;gt;
- &amp;lt;phrase id=&amp;quot;5&amp;quot; cat=&amp;quot;AJ&amp;quot; head=&amp;quot;6&amp;quot; lex_head=&amp;quot;6&amp;quot;&amp;gt;
- &amp;lt;word id=&amp;quot;6&amp;quot; pos=&amp;quot;JJ&amp;quot; cat=&amp;quot;AJ&amp;quot; base=&amp;quot;normal&amp;quot; arg1=&amp;quot;7&amp;quot;&amp;gt;
- normal
- &amp;lt;phrase id=&amp;quot;7&amp;quot; cat=&amp;quot;NP&amp;quot; head=&amp;quot;10&amp;quot; lex_head=&amp;quot;14&amp;quot;&amp;gt;
- &amp;lt;phrase id=&amp;quot;8&amp;quot; cat=&amp;quot;NP&amp;quot; head=&amp;quot;9&amp;quot; lex_head=&amp;quot;9&amp;quot;&amp;gt;
- &amp;lt;word id=&amp;quot;9&amp;quot; pos=&amp;quot;NN&amp;quot; cat=&amp;quot;NP&amp;quot; base=&amp;quot;serum&amp;quot; mod=&amp;quot;10&amp;quot;&amp;gt;
- serum
- &amp;lt;phrase id=&amp;quot;10&amp;quot; cat=&amp;quot;NP&amp;quot; head=&amp;quot;13&amp;quot; lex_head=&amp;quot;14&amp;quot;&amp;gt;
- &amp;lt;phrase id=&amp;quot;11&amp;quot; cat=&amp;quot;NP&amp;quot; head=&amp;quot;12&amp;quot; lex_head=&amp;quot;12&amp;quot;&amp;gt;
- &amp;lt;entity_name id=&amp;quot;entity-1&amp;quot; type=&amp;quot;gene&amp;quot;
gene_id=&amp;quot;GHS003134&amp;quot; gene_symbol=&amp;quot;CRP&amp;quot;
gene_name=&amp;quot;C-reactive protein, pentraxin-related&amp;quot;
species=&amp;quot;Homo sapiens&amp;quot;
db_site=&amp;quot;EntrezGene:1401|GDB:119071|GenAtlas:CRP&amp;quot;&amp;gt;
- &amp;lt;word id=&amp;quot;12&amp;quot; pos=&amp;quot;NN&amp;quot; cat=&amp;quot;NP&amp;quot; base=&amp;quot;crp&amp;quot; mod=&amp;quot;13&amp;quot;&amp;gt;
- CRP
- &amp;lt;phrase id=&amp;quot;13&amp;quot; cat=&amp;quot;NP&amp;quot; head=&amp;quot;14&amp;quot; lex_head=&amp;quot;14&amp;quot;&amp;gt;
- &amp;lt;word id=&amp;quot;14&amp;quot; pos=&amp;quot;NN&amp;quot; cat=&amp;quot;NP&amp;quot; base=&amp;quot;measurement&amp;quot;&amp;gt;
- measurement
- &amp;lt;phrase id=&amp;quot;15&amp;quot; cat=&amp;quot;VP&amp;quot; head=&amp;quot;16&amp;quot; lex_head=&amp;quot;18&amp;quot;&amp;gt;
- &amp;lt;phrase id=&amp;quot;16&amp;quot; cat=&amp;quot;VP&amp;quot; head=&amp;quot;17&amp;quot; lex_head=&amp;quot;18&amp;quot;&amp;gt;
- &amp;lt;phrase id=&amp;quot;17&amp;quot; cat=&amp;quot;VP&amp;quot; head=&amp;quot;18&amp;quot; lex_head=&amp;quot;18&amp;quot;&amp;gt;
- &amp;lt;word id=&amp;quot;18&amp;quot; pos=&amp;quot;VBZ&amp;quot; cat=&amp;quot;VP&amp;quot; base=&amp;quot;do&amp;quot;
arg1=&amp;quot;1&amp;quot; arg2=&amp;quot;21&amp;quot;&amp;gt;
- does
- &amp;lt;phrase id=&amp;quot;19&amp;quot; cat=&amp;quot;AV&amp;quot; head=&amp;quot;20&amp;quot; lex_head=&amp;quot;20&amp;quot;&amp;gt;
- &amp;lt;word id=&amp;quot;20&amp;quot; pos=&amp;quot;RB&amp;quot; cat=&amp;quot;AV&amp;quot; base=&amp;quot;not&amp;quot; arg1=&amp;quot;21&amp;quot;&amp;gt;
- not
- &amp;lt;phrase id=&amp;quot;21&amp;quot; cat=&amp;quot;VP&amp;quot; head=&amp;quot;22&amp;quot; lex_head=&amp;quot;23&amp;quot;&amp;gt;
- &amp;lt;phrase id=&amp;quot;22&amp;quot; cat=&amp;quot;VP&amp;quot; head=&amp;quot;23&amp;quot; lex_head=&amp;quot;23&amp;quot;&amp;gt;
- &amp;lt;word id=&amp;quot;23&amp;quot; pos=&amp;quot;VB&amp;quot; cat=&amp;quot;VP&amp;quot; base=&amp;quot;exclude&amp;quot;
</table>
<figure confidence="0.523036333333333">
arg1=&amp;quot;1&amp;quot; arg2=&amp;quot;24&amp;quot;&amp;gt;
- exclude
...
</figure>
<figureCaption confidence="0.998562">
Figure 6: A semantically annotated sentence
</figureCaption>
<bodyText confidence="0.994792818181818">
although the latter half of the sentence is omitted
because of space limitations. Sentences are an-
notated with four tags,3 phrase, word, sen-
tence, and entity name, and their attributes as
given in Table 6. Predicate argument structures are
annotated as attributes, mod and argX, which
point to the IDs of the argument phrases. For ex-
ample, in Figure 6, the &amp;lt;word&amp;gt; tag for exclude
has the attributes arg1=&amp;quot;1&amp;quot; and arg2=&amp;quot;24&amp;quot;,
which denote the IDs of the subject and object
phrases, respectively.
</bodyText>
<page confidence="0.987831">
3
</page>
<bodyText confidence="0.994492">
Additional tags exist for representing document struc-
tures such as title (details omitted).
</bodyText>
<subsectionHeader confidence="0.691099">
Tag Attributes
</subsectionHeader>
<bodyText confidence="0.9928284">
phrase id, cat, head, lex head
word id, cat, pos, base, mod, argX, rel type
sentence sentence id
entity name id, type, gene id/disease id, gene symbol,
gene name, species, db site
</bodyText>
<subsectionHeader confidence="0.85555">
Attribute Description
</subsectionHeader>
<bodyText confidence="0.991100705882353">
id unique identifier
cat syntactic category
head head daughters ID
lex head lexical heads ID
pos part-of-speech
base base form of the word
mod ID of modifying phrase
argX ID of the X-th argument of the word
rel type event type
sentence id sentences ID
type whether gene, gene prod, or disease
gene id ID in GENA
disease id ID in the UMLS meta-thesaurus
gene symbol short form of the gene
gene name nomenclature of the gene
species species that have this gene
db site links to external databases
</bodyText>
<tableCaption confidence="0.8718985">
Table 6: Tags (upper) and attributes (lower) for
semantic annotations
</tableCaption>
<subsectionHeader confidence="0.962385">
3.2 On-line processing
</subsectionHeader>
<bodyText confidence="0.999436333333333">
The off-line processing described above results in
much simpler on-line processing. User input is
converted into queries of the extended region al-
gebra, and the converted queries are entered into a
search engine for the extended region algebra. The
implementation of a search engine is described in
detail in Masuda et al. (2006).
Basically, given subject x, object y, and verb v,
the system creates the following query:
</bodyText>
<equation confidence="0.9774964">
[sentence] &amp;gt;&amp;gt;
([word arg1=&amp;quot;$subject&amp;quot; arg2=&amp;quot;$object&amp;quot;
base=&amp;quot;v&amp;quot;] &amp;
([phrase id=&amp;quot;$subject&amp;quot;] &amp;gt; x) &amp;
([phrase id=&amp;quot;$object&amp;quot;] &amp;gt; y))
</equation>
<bodyText confidence="0.998732857142857">
Ontological identifiers are substituted for x, y,
and v, if possible. Nominal keywords, i.e., x and
y, are replaced by [entity_name gene_id=&amp;quot;n&amp;quot;]
or [entity_name disease_id=&amp;quot;n&amp;quot;], where n is
the ontological identifier of x or y. For verbal key-
words, base=&amp;quot;v&amp;quot; is replaced by rel_type=&amp;quot;r&amp;quot;,
where r is the event type of v.
</bodyText>
<sectionHeader confidence="0.995985" genericHeader="evaluation">
4 Evaluation
</sectionHeader>
<bodyText confidence="0.987712">
Our system is evaluated with respect to speed and
accuracy. Speed is indispensable for real-time in-
teractive text retrieval systems, and accuracy is key
for the motivation of semantic retrieval. That is,
our motivation for employing semantic retrieval
</bodyText>
<page confidence="0.838596">
1021
</page>
<figure confidence="0.847869">
\x0cQuery No. User input
1 something inhibit ERK2
2 something trigger diabetes
3 adiponectin increase something
4 TNF activate IL6
5 dystrophin cause disease
6 macrophage induce something
7 something suppress MAP phosphorylation
8 something enhance p53 (negative)
Table 7: Queries for experiments
[sentence] &amp;gt;&amp;gt;
([word rel_type=&amp;quot;activation&amp;quot;] &amp;
[entity_name type=&amp;quot;gene&amp;quot; gene_id=&amp;quot;GHS019685&amp;quot;] &amp;
[entity_name type=&amp;quot;gene&amp;quot; gene_id=&amp;quot;GHS009426&amp;quot;])
[sentence] &amp;gt;&amp;gt;
([word arg1=&amp;quot;$subject&amp;quot; arg2=&amp;quot;$object&amp;quot;
rel_type=&amp;quot;activation&amp;quot;] &amp;
([phrase id=&amp;quot;$subject&amp;quot;] &amp;gt;
[entity_name type=&amp;quot;gene&amp;quot; gene_id=&amp;quot;GHS019685&amp;quot;]) &amp;
([phrase cat=&amp;quot;np&amp;quot; id=&amp;quot;$object&amp;quot;] &amp;gt;
[entity_name type=&amp;quot;gene&amp;quot; gene_id=&amp;quot;GHS009426&amp;quot;]))
</figure>
<figureCaption confidence="0.99979">
Figure 7: Queries of the extended region algebra
</figureCaption>
<bodyText confidence="0.9922840125">
for Query 4-3 (upper: keyword search, lower: se-
mantic search)
was to provide a device for the accurate identifica-
tion of relational concepts. In particular, high pre-
cision is desired in text retrieval from huge texts
because users want to extract relevant information,
rather than collect exhaustive information.
We have two parameters to vary: whether to
use predicate argument structures and whether to
use ontological identifiers. The effect of using
predicate argument structures is evaluated by com-
paring keyword search with semantic search.
The former is a traditional style of IR, in which
sentences are retrieved by matching words in a
query with words in sentences. The latter is a
new feature of the present system, in which sen-
tences are retrieved by matching predicate argu-
ment relations in a query with those in a semanti-
cally annotated textbase. The effect of using onto-
logical identifiers is assessed by changing queries
of the extended region algebra. When we use the
term ontology, nominal keywords in queries are
replaced with ontological identifiers in GENA and
the UMLS meta-thesaurus. When we use the event
expression ontology, verbal keywords in queries
are replaced with event types.
Table 7 is a list of queries used in the follow-
ing experiments. Words in italics indicate a class
of words: something indicates that any word
can appear, and disease indicates that any dis-
ease expression can appear. These queries were
selected by a biologist, and express typical re-
lational concepts that a biologist may wish to
find. Queries 1, 3, and 4 represent relations of
genes/proteins, where ERK2, adiponectin, TNF,
and IL6 are genes/proteins. Queries 2 and 5 de-
scribe relations concerning diseases, and Query 6
is a query that is not relevant to genes or diseases.
Query 7 expresses a complex relation concern-
ing a specific phenomena, i.e., phosphorylation,
of MAP. Query 8 describes a relation concerning
a gene, i.e., p53, while (negative) indicates that
the target of retrieval is negative mentions. This is
expressed by not modifying a predicate.
For example, Query 4 attempts to retrieve sen-
tences that mention the protein-protein interaction
TNF activates IL6. This is converted into queries
of the extended region algebra given in Figure 7.
The upper query is for keyword search and only
specifies the appearances of the three words. Note
that the keywords are translated into the ontolog-
ical identifiers, activation, GHS019685, and
GHS009426. The lower query is for semantic
search. The variables in arg1 and arg2 indi-
cate that GHS019685 and GHS009426 are the
subject and object, respectively, of activation.
Table 8 summarizes the results of the experi-
ments. The postfixes of query numbers denote
whether ontological identifiers are used. X-1 used
no ontologies, and X-2 used only the term ontol-
ogy. X-3 used both the term and event expression
ontologies4. Comparison of X-1 and X-2 clarifies
the effect of using the term ontology. Comparison
of X-2 and X-3 shows the effect of the event ex-
pression ontology. The results for X-3 indicate
the maximum performance of the current system.
This table shows that the time required for the se-
mantic search for the first answer, shown as time
(first) in seconds, was reasonably short. Thus,
the present framework is acceptable for real-time
text retrieval. The numbers of answers increased
when we used the ontologies, and this result indi-
cates the efficacy of both ontologies for obtaining
relational concepts written in various expressions.
Accuracy was measured by judgment by a bi-
ologist. At most 100 sentences were retrieved for
each query, and the results of keyword search and
semantic search were merged and shuffled. A bi-
ologist judged the shuffled sentences (1,839 sen-
tences in total) without knowing whether the sen-
</bodyText>
<page confidence="0.979742">
4
</page>
<bodyText confidence="0.973383666666667">
Query 5-1 is not tested because disease requires
the term ontology, and Query 6-2 is not tested because
macrophage is not assigned an ontological identifier.
</bodyText>
<page confidence="0.950556">
1022
</page>
<table confidence="0.99763475">
\x0cQuery Keyword search Semantic search
No. # ans. time (first/all) precision n-precision # ans. time (first/all) precision relative recall
1-1 252 0.00/ 1.5 74/100 (74%) 74/100 (74%) 143 0.01/ 2.5 96/100 (96%) 51/74 (69%)
1-2 348 0.00/ 1.9 61/100 (61%) 61/100 (61%) 174 0.01/ 3.1 89/100 (89%) 42/61 (69%)
1-3 884 0.00/ 3.2 50/100 (50%) 50/100 (50%) 292 0.01/ 5.3 91/100 (91%) 21/50 (42%)
2-1 125 0.00/ 1.8 45/100 (45%) 9/ 27 (33%) 27 0.02/ 2.9 23/ 27 (85%) 17/45 (38%)
2-2 113 0.00/ 2.9 40/100 (40%) 10/ 26 (38%) 26 0.06/ 4.0 22/ 26 (85%) 19/40 (48%)
2-3 6529 0.00/ 12.1 42/100 (42%) 42/100 (42%) 662 0.01/1527.4 76/100 (76%) 8/42 (19%)
3-1 287 0.00/ 1.5 20/100 (20%) 4/ 30 (13%) 30 0.05/ 2.4 23/ 30 (80%) 6/20 (30%)
3-2 309 0.01/ 2.1 21/100 (21%) 4/ 32 (13%) 32 0.10/ 3.5 26/ 32 (81%) 6/21 (29%)
3-3 338 0.01/ 2.2 24/100 (24%) 8/ 39 (21%) 39 0.05/ 3.6 32/ 39 (82%) 8/24 (33%)
4-1 4 0.26/ 1.5 0/ 4 (0%) 0/ 0 () 0 2.44/ 2.4 0/ 0 () 0/ 0 ()
4-2 195 0.01/ 2.5 9/100 (9%) 1/ 6 (17%) 6 0.09/ 4.1 5/ 6 (83%) 2/ 9 (22%)
4-3 2063 0.00/ 7.5 5/100 (5%) 5/ 94 (5%) 94 0.02/ 10.5 89/ 94 (95%) 2/ 5 (40%)
5-2 287 0.08/ 6.3 73/100 (73%) 73/100 (73%) 116 0.05/ 14.7 97/100 (97%) 37/73 (51%)
5-3 602 0.01/ 15.9 50/100 (50%) 50/100 (50%) 122 0.05/ 14.2 96/100 (96%) 23/50 (46%)
6-1 10698 0.00/ 42.8 14/100 (14%) 14/100 (14%) 1559 0.01/3014.5 65/100 (65%) 10/14 (71%)
6-3 42106 0.00/3379.5 11/100 (11%) 11/100 (11%) 2776 0.01/5100.1 61/100 (61%) 5/11 (45%)
7 87 0.04/ 2.7 34/ 87 (39%) 7/ 15 (47%) 15 0.05/ 4.2 10/ 15 (67%) 10/34 (29%)
8 1812 0.01/ 7.6 19/100 (19%) 17/ 84 (20%) 84 0.20/ 29.2 73/ 84 (87%) 7/19 (37%)
</table>
<tableCaption confidence="0.99788">
Table 8: Number of retrieved sentences, retrieval time, and accuracy
</tableCaption>
<bodyText confidence="0.98761905882353">
tence was retrieved by keyword search or semantic
search. Without considering which words actually
matched the query, a sentence is judged to be cor-
rect when any part of the sentence expresses all of
the relations described by the query. The modality
of sentences was not distinguished, except in the
case of Query 8. These evaluation criteria may be
disadvantageous for the semantic search because
its ability to exactly recognize the participants of
relational concepts is not evaluated. Table 8 shows
the precision attained by keyword/semantic search
and n-precision, which denotes the precision of
the keyword search, in which the same number,
n, of outputs is taken as the semantic search. The
table also gives the relative recall of the semantic
search, which represents the ratio of sentences that
are correctly output by the semantic search among
those correctly output by the keyword search. This
does not necessarily represent the true recall be-
cause sentences not output by keyword search are
excluded. However, this is sufficient for the com-
parison of keyword search and semantic search.
The results show that the semantic search exhib-
ited impressive improvements in precision. The
precision was over 80% for most queries and was
nearly 100% for Queries 4 and 5. This indicates
that predicate argument structures are effective for
representing relational concepts precisely, espe-
cially for relations in which two entities are in-
volved. Relative recall was approximately 30
50%, except for Query 2. In the following, we
will investigate the reasons for the residual errors.
Table 9 shows the classifications of the errors of
Disregarding of noun phrase structures 45
</bodyText>
<table confidence="0.982660454545455">
Term recognition errors 33
Parsing errors 11
Other reasons 8
Incorrect human judgment 7
Nominal expressions 41
Phrasal verb expressions 26
Inference required 24
Coreference resolution required 19
Parsing errors 16
Other reasons 15
Incorrect human judgment 10
</table>
<tableCaption confidence="0.991313">
Table 9: Error analysis (upper: 104 false positives,
</tableCaption>
<bodyText confidence="0.974930476190476">
lower: 151 false negatives)
semantic retrieval. The major reason for false pos-
itives was that our queries ignore internal struc-
tures of noun phrases. The system therefore re-
trieved noun phrases that do not directly mention
target entities. For example, the increased mor-
tality in patients with diabetes was caused by .. .
does not indicate the trigger of diabetes. Another
reason was term recognition errors. For exam-
ple, the system falsely retrieved sentences con-
taining p40, which is sometimes, but not nec-
essarily used as a synonym for ERK2. Ma-
chine learning-based term disambiguation will al-
leviate these errors. False negatives were caused
mainly by nominal expressions such as the in-
hibition of ERK2. This is because the present
system does not convert user input into queries
on nominal expressions. Another major reason,
phrasal verb expressions such as lead to, is also
a shortage of our current strategy of query cre-
ation. Because semantic annotations already in-
</bodyText>
<page confidence="0.753908">
1023
</page>
<bodyText confidence="0.994382666666667">
\x0cclude linguistic structures of these expressions, the
present system can be improved further by creat-
ing queries on such expressions.
</bodyText>
<sectionHeader confidence="0.998358" genericHeader="conclusions">
5 Conclusion
</sectionHeader>
<bodyText confidence="0.999180807692308">
We demonstrated a text retrieval system for MED-
LINE that exploits pre-computed semantic anno-
tations5. Experimental results revealed that the
proposed system is sufficiently efficient for real-
time text retrieval and that the precision of re-
trieval was remarkably high. Analysis of resid-
ual errors showed that the handling of noun phrase
structures and the improvement of term recogni-
tion will increase retrieval accuracy. Although
the present paper focused on MEDLINE, the NLP
tools used in this system are domain/task indepen-
dent. This framework will thus be applicable to
other domains such as patent documents.
The present framework does not conflict with
conventional IR/IE techniques, and integration
with these techniques is expected to improve the
accuracy and usability of the proposed system. For
example, query expansion and relevancy feedback
can be integrated in a straightforward way in order
to improve accuracy. Document ranking is useful
for the readability of retrieved results. IE systems
can be applied off-line, in the manner of the deep
parser in our system, for annotating sentences with
target information of IE. Such annotations will en-
able us to retrieve higher-level concepts, such as
relationships among relational concepts.
</bodyText>
<sectionHeader confidence="0.888199" genericHeader="acknowledgments">
Acknowledgment
</sectionHeader>
<reference confidence="0.8292138">
This work was partially supported by Grant-in-Aid
for Scientific Research on Priority Areas Systems
Genomics (MEXT, Japan), Genome Network
Project (NIG, Japan), and Solution-Oriented Re-
search for Science and Technology (JST, Japan).
</reference>
<sectionHeader confidence="0.58719" genericHeader="references">
References
</sectionHeader>
<reference confidence="0.998979">
C. Blaschke and A. Valencia. 2002. The frame-based
module of the SUISEKI information extraction sys-
tem. IEEE Intelligent Systems, 17(2):1420.
S. Boag, D. Chamberlin, M. F. Fernandez, D. Florescu,
J. Robie, and J. Simeon. 2005. XQuery 1.0: An
XML query language.
E. Charniak and M. Johnson. 2005. Coarse-to-fine n-
best parsing and MaxEnt discriminative reranking.
In Proc. ACL 2005.
</reference>
<page confidence="0.830741">
5
</page>
<reference confidence="0.974732581818181">
A web-based demo of our system is available on-line at:
http://www-tsujii.is.s.u-tokyo.ac.jp/medie/
H.-W. Chun, Y. Tsuruoka, J.-D. Kim, R. Shiba, N. Na-
gata, T. Hishiki, and J. Tsujii. 2006. Extraction
of gene-disease relations from MedLine using do-
main dictionaries and machine learning. In Proc.
PSB 2006, pages 415.
J. Clark and S. DeRose. 1999. XML Path Language
(XPath) version 1.0.
C. L. A. Clarke, G. V. Cormack, and F. J. Burkowski.
1995. An algebra for structured text search and a
framework for its implementation. The Computer
Journal, 38(1):4356.
Y. Hao, X. Zhu, M. Huang, and M. Li. 2005. Dis-
covering patterns to extract protein-protein interac-
tions from the literature: Part II. Bioinformatics,
21(15):32943300.
T. Hara, Y. Miyao, and J. Tsujii. 2005. Adapting
a probabilistic disambiguation model of an HPSG
parser to a new domain. In Proc. IJCNLP 2005.
IBM, 2005. Unstructed Information Management Ar-
chitecture (UIMA) SDK Users Guide and Refer-
ence.
A. Koike and T. Takagi. 2004. Gene/protein/family
name recognition in biomedical literature. In Proc.
Biolink 2004, pages 916.
D. A. Lindberg, B. L. Humphreys, and A. T. Mc-
Cray. 1993. The Unified Medical Language Sys-
tem. Methods in Inf. Med., 32(4):281291.
K. Masuda, T. Ninomiya, Y. Miyao, T. Ohta, and
J. Tsujii. 2006. Nested region algebra extended with
variables. In Preparation.
Y. Miyao and J. Tsujii. 2005. Probabilistic disam-
biguation models for wide-coverage HPSG parsing.
In Proc. 43rd ACL, pages 8390.
National Library of Medicine. 2005. Fact Sheet MED-
LINE. Available at http://www.nlm.nih.
gov/pubs/factsheets/medline.html.
T. Ninomiya, Y. Tsuruoka, Y. Miyao, K. Taura, and
J. Tsujii. 2006. Fast and scalable HPSG parsing.
Traitement automatique des langues (TAL), 46(2).
Y. Tateisi, A. Yakushiji, T. Ohta, and J. Tsujii. 2005.
Syntax annotation for the GENIA corpus. In Proc.
IJCNLP 2005, Companion volume, pages 222227.
K. Taura. 2004. GXP : An interactive shell for the grid
environment. In Proc. IWIA2004, pages 5967.
TEI Consortium, 2004. Text Encoding Initiative.
Y. Tsuruoka and J. Tsujii. 2004. Improving the per-
formance of dictionary-based approaches in protein
name recognition. Journal of Biomedical Informat-
ics, 37(6):461470.
Y. Tsuruoka and J. Tsujii. 2005. Bidirectional infer-
ence with the easiest-first strategy for tagging se-
quence data. In Proc. HLT/EMNLP 2005, pages
467474.
</reference>
<page confidence="0.801372">
1024
</page>
<figure confidence="0.257802">
\x0c&amp;apos;
</figure>
</variant>
</algorithm>
<algorithm name="ParsHed" version="110505">
<variant no="0" confidence="0.103161">
<note confidence="0.929128333333333">b&amp;apos;Proceedings of the 21st International Conference on Computational Linguistics and 44th Annual Meeting of the ACL, pages 10171024, Sydney, July 2006. c 2006 Association for Computational Linguistics</note>
<title confidence="0.9810025">Semantic Retrieval for the Accurate Identification of Relational Concepts in Massive Textbases</title>
<author confidence="0.838835">Yusuke Miyao Tomoko Ohta</author>
<affiliation confidence="0.6805975">Katsuya Masuda Yoshimasa Tsuruoka</affiliation>
<address confidence="0.5102875">Kazuhiro Yoshida Takashi Ninomiya</address>
<author confidence="0.98931">Junichi Tsujii</author>
<affiliation confidence="0.999589">Department of Computer Science, University of Tokyo School of Informatics, University of Manchester Information Technology Center, University of Tokyo</affiliation>
<address confidence="0.970416">Hongo 7-3-1, Bunkyo-ku, Tokyo 113-0033 JAPAN</address>
<email confidence="0.977569">yusuke@is.s.u-tokyo.ac.jp</email>
<email confidence="0.977569">okap@is.s.u-tokyo.ac.jp</email>
<email confidence="0.977569">kmasuda@is.s.u-tokyo.ac.jp</email>
<email confidence="0.977569">tsuruoka@is.s.u-tokyo.ac.jp</email>
<email confidence="0.977569">kyoshida@is.s.u-tokyo.ac.jp</email>
<email confidence="0.977569">ninomi@is.s.u-tokyo.ac.jp</email>
<email confidence="0.977569">tsujii@is.s.u-tokyo.ac.jp</email>
<abstract confidence="0.999513684210526">This paper introduces a novel framework for the accurate retrieval of relational concepts from huge texts. Prior to retrieval, all sentences are annotated with predicate argument structures and ontological identifiers by applying a deep parser and a term recognizer. During the run time, user requests are converted into queries of region algebra on these annotations. Structural matching with pre-computed semantic annotations establishes the accurate and efficient retrieval of relational concepts. This framework was applied to a text retrieval system for MEDLINE. Experiments on the retrieval of biomedical correlations revealed that the cost is sufficiently small for real-time applications and that the retrieval precision is significantly improved.</abstract>
</variant>
</algorithm>
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>C Blaschke</author>
<author>A Valencia</author>
</authors>
<title>The frame-based module of the SUISEKI information extraction system.</title>
<date>2002</date>
<journal>IEEE Intelligent Systems,</journal>
<volume>17</volume>
<issue>2</issue>
<contexts>
<context position="2162" citStr="Blaschke and Valencia, 2002" startWordPosition="298" endWordPosition="301">ods of accessing information in huge texts. Furthermore, user demand has shifted toward the retrieval of more precise and complex information, including relational concepts. For example, biomedical researchers deal with a massive quantity of publications; MEDLINE contains approximately 15 million references to journal articles in life sciences, and its size is rapidly increasing, at a rate of more than 10% yearly (National Library of Medicine, 2005). Researchers would like to be able to search this huge textbase for biomedical correlations such as protein-protein or gene-disease associations (Blaschke and Valencia, 2002; Hao et al., 2005; Chun et al., 2006). However, the framework of traditional information retrieval (IR) has difficulty with the accurate retrieval of such relational concepts because relational concepts are essentially determined by semantic relations between words, and keyword-based IR techniques are insufficient to describe such relations precisely. The present paper demonstrates a framework for the accurate real-time retrieval of relational concepts from huge texts. Prior to retrieval, we prepare a semantically annotated textbase by applying NLP tools including deep parsers and term recogn</context>
</contexts>
<marker>Blaschke, Valencia, 2002</marker>
<rawString>C. Blaschke and A. Valencia. 2002. The frame-based module of the SUISEKI information extraction system. IEEE Intelligent Systems, 17(2):1420.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Boag</author>
<author>D Chamberlin</author>
<author>M F Fernandez</author>
<author>D Florescu</author>
<author>J Robie</author>
<author>J Simeon</author>
</authors>
<title>XQuery 1.0: An XML query language.</title>
<date>2005</date>
<contexts>
<context position="9090" citStr="Boag et al., 2005" startWordPosition="1340" endWordPosition="1343">relational concept of CRP excludes thrombosis can be represented as a predicate argument structure, as shown in Figure 2. This structure is universal in various syntactic expressions, such as passivization (e.g., thrombosis is excluded by CRP) and relativization (e.g., thrombosis that CRP excludes). Hence, we can abstract surface variations of sentences and describe relational concepts in a canonicalized form. 2.3 Structural search algorithms Search algorithms for structured texts have been studied extensively, and examples include XML databases with XPath (Clark and DeRose, 1999) and XQuery (Boag et al., 2005), and region algebra (Clarke et al., 1995). The present study focuses on region algebra extended with variables (Masuda et al., 2006) because it provides an efficient search algorithm for tags with cross boundaries. When we annotate texts with various levels of syntactic/semantic structures, cross boundaries are inherently nonnegligible. In fact, as described in Section 3, our system exploits annotations of predicate argument structures and ontological entities, which include substantial cross boundaries. Region algebra is defined as a set of operators on regions, i.e., word sequences. Table 2</context>
</contexts>
<marker>Boag, Chamberlin, Fernandez, Florescu, Robie, Simeon, 2005</marker>
<rawString>S. Boag, D. Chamberlin, M. F. Fernandez, D. Florescu, J. Robie, and J. Simeon. 2005. XQuery 1.0: An XML query language.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E Charniak</author>
<author>M Johnson</author>
</authors>
<title>Coarse-to-fine nbest parsing and MaxEnt discriminative reranking.</title>
<date>2005</date>
<contexts>
<context position="7380" citStr="Charniak and Johnson, 2005" startWordPosition="1078" endWordPosition="1081">atabases. For biomedical terms other than genes/gene products, the Unified Medical Language System (UMLS) meta-thesaurus (Lindberg et al., 1993) is a large database that contains various names of biomedical and health-related concepts. Ontology databases provide mappings between textual expressions and entities in the real world. For example, Table 1 indicates that CRP, MGC88244, and PTX1 denote the same gene conceptually. Hence, these resources enable us to canonicalize variations of textual expressions of ontological entities. 2.2 Parsing technologies Recently, state-of-the-art CFG parsers (Charniak and Johnson, 2005) can compute phrase structures of natural sentences at fairly high accuracy. These parsers have been used in various NLP tasks including IE and text mining. In addition, parsers that compute deeper analyses, such as predicate argument structures, have become available for 1018 \x0cthe processing of real-world sentences (Miyao and Tsujii, 2005). Predicate argument structures are canonicalized representations of sentence meanings, and express the semantic relations of words explicitly. Figure 1 shows an output of an HPSG parser (Miyao and Tsujii, 2005) for the sentence A normal serum CRP measure</context>
</contexts>
<marker>Charniak, Johnson, 2005</marker>
<rawString>E. Charniak and M. Johnson. 2005. Coarse-to-fine nbest parsing and MaxEnt discriminative reranking.</rawString>
</citation>
<citation valid="true">
<date>2005</date>
<booktitle>In Proc. ACL</booktitle>
<marker>2005</marker>
<rawString>In Proc. ACL 2005.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H-W Chun</author>
<author>Y Tsuruoka</author>
<author>J-D Kim</author>
<author>R Shiba</author>
<author>N Nagata</author>
<author>T Hishiki</author>
<author>J Tsujii</author>
</authors>
<title>A web-based demo of our system is available on-line at: http://www-tsujii.is.s.u-tokyo.ac.jp/medie/</title>
<date>2006</date>
<booktitle>In Proc.</booktitle>
<contexts>
<context position="2200" citStr="Chun et al., 2006" startWordPosition="306" endWordPosition="309">thermore, user demand has shifted toward the retrieval of more precise and complex information, including relational concepts. For example, biomedical researchers deal with a massive quantity of publications; MEDLINE contains approximately 15 million references to journal articles in life sciences, and its size is rapidly increasing, at a rate of more than 10% yearly (National Library of Medicine, 2005). Researchers would like to be able to search this huge textbase for biomedical correlations such as protein-protein or gene-disease associations (Blaschke and Valencia, 2002; Hao et al., 2005; Chun et al., 2006). However, the framework of traditional information retrieval (IR) has difficulty with the accurate retrieval of such relational concepts because relational concepts are essentially determined by semantic relations between words, and keyword-based IR techniques are insufficient to describe such relations precisely. The present paper demonstrates a framework for the accurate real-time retrieval of relational concepts from huge texts. Prior to retrieval, we prepare a semantically annotated textbase by applying NLP tools including deep parsers and term recognizers. That is, all sentences are anno</context>
</contexts>
<marker>Chun, Tsuruoka, Kim, Shiba, Nagata, Hishiki, Tsujii, 2006</marker>
<rawString>A web-based demo of our system is available on-line at: http://www-tsujii.is.s.u-tokyo.ac.jp/medie/ H.-W. Chun, Y. Tsuruoka, J.-D. Kim, R. Shiba, N. Nagata, T. Hishiki, and J. Tsujii. 2006. Extraction of gene-disease relations from MedLine using domain dictionaries and machine learning. In Proc.</rawString>
</citation>
<citation valid="true">
<authors>
<author>PSB</author>
</authors>
<date>2006</date>
<pages>415</pages>
<marker>PSB, 2006</marker>
<rawString>PSB 2006, pages 415.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Clark</author>
<author>S DeRose</author>
</authors>
<title>XML Path Language (XPath) version 1.0.</title>
<date>1999</date>
<journal>The Computer Journal,</journal>
<volume>38</volume>
<issue>1</issue>
<contexts>
<context position="9059" citStr="Clark and DeRose, 1999" startWordPosition="1334" endWordPosition="1337">n abstract manner. For example, the relational concept of CRP excludes thrombosis can be represented as a predicate argument structure, as shown in Figure 2. This structure is universal in various syntactic expressions, such as passivization (e.g., thrombosis is excluded by CRP) and relativization (e.g., thrombosis that CRP excludes). Hence, we can abstract surface variations of sentences and describe relational concepts in a canonicalized form. 2.3 Structural search algorithms Search algorithms for structured texts have been studied extensively, and examples include XML databases with XPath (Clark and DeRose, 1999) and XQuery (Boag et al., 2005), and region algebra (Clarke et al., 1995). The present study focuses on region algebra extended with variables (Masuda et al., 2006) because it provides an efficient search algorithm for tags with cross boundaries. When we annotate texts with various levels of syntactic/semantic structures, cross boundaries are inherently nonnegligible. In fact, as described in Section 3, our system exploits annotations of predicate argument structures and ontological entities, which include substantial cross boundaries. Region algebra is defined as a set of operators on regions</context>
</contexts>
<marker>Clark, DeRose, 1999</marker>
<rawString>J. Clark and S. DeRose. 1999. XML Path Language (XPath) version 1.0. C. L. A. Clarke, G. V. Cormack, and F. J. Burkowski. 1995. An algebra for structured text search and a framework for its implementation. The Computer Journal, 38(1):4356.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Y Hao</author>
<author>X Zhu</author>
<author>M Huang</author>
<author>M Li</author>
</authors>
<title>Discovering patterns to extract protein-protein interactions from the literature: Part II.</title>
<date>2005</date>
<journal>Bioinformatics,</journal>
<volume>21</volume>
<issue>15</issue>
<contexts>
<context position="2180" citStr="Hao et al., 2005" startWordPosition="302" endWordPosition="305">in huge texts. Furthermore, user demand has shifted toward the retrieval of more precise and complex information, including relational concepts. For example, biomedical researchers deal with a massive quantity of publications; MEDLINE contains approximately 15 million references to journal articles in life sciences, and its size is rapidly increasing, at a rate of more than 10% yearly (National Library of Medicine, 2005). Researchers would like to be able to search this huge textbase for biomedical correlations such as protein-protein or gene-disease associations (Blaschke and Valencia, 2002; Hao et al., 2005; Chun et al., 2006). However, the framework of traditional information retrieval (IR) has difficulty with the accurate retrieval of such relational concepts because relational concepts are essentially determined by semantic relations between words, and keyword-based IR techniques are insufficient to describe such relations precisely. The present paper demonstrates a framework for the accurate real-time retrieval of relational concepts from huge texts. Prior to retrieval, we prepare a semantically annotated textbase by applying NLP tools including deep parsers and term recognizers. That is, al</context>
</contexts>
<marker>Hao, Zhu, Huang, Li, 2005</marker>
<rawString>Y. Hao, X. Zhu, M. Huang, and M. Li. 2005. Discovering patterns to extract protein-protein interactions from the literature: Part II. Bioinformatics, 21(15):32943300.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Hara</author>
<author>Y Miyao</author>
<author>J Tsujii</author>
</authors>
<title>Adapting a probabilistic disambiguation model of an HPSG parser to a new domain.</title>
<date>2005</date>
<booktitle>In Proc. IJCNLP</booktitle>
<contexts>
<context position="13140" citStr="Hara et al., 2005" startWordPosition="2012" endWordPosition="2015">aphies of articles, about half of which have abstracts. Research on IE and text mining in biomedical science has focused mainly on MEDLINE. In the present paper, we target all articles indexed in MEDLINE at the end of 2004 (14,785,094 articles). The following sections explain in detail off-/on-line processing for the text retrieval system for MEDLINE. 3.1 Off-line processing: HPSG parsing and term recognition We first parsed all sentences using an HPSG parser (Miyao and Tsujii, 2005) to obtain their predicate argument structures. Because our target is biomedical texts, we re-trained a parser (Hara et al., 2005) with the GENIA treebank (Tateisi et al., 2005), and also applied a bidirectional part-ofspeech tagger (Tsuruoka and Tsujii, 2005) trained with the GENIA treebank as a preprocessor. Because parsing speed is still unrealistic for parsing the entire MEDLINE on a single machine, we used two geographically separated computer clusters having 170 nodes (340 Xeon CPUs). These clusters are separately administered and not dedicated for use in the present study. In order to effectively use such an environment, GXP (Taura, 2004) was used to connect these clusters and distribute the load among them. Our p</context>
</contexts>
<marker>Hara, Miyao, Tsujii, 2005</marker>
<rawString>T. Hara, Y. Miyao, and J. Tsujii. 2005. Adapting a probabilistic disambiguation model of an HPSG parser to a new domain. In Proc. IJCNLP 2005.</rawString>
</citation>
<citation valid="true">
<authors>
<author>IBM</author>
</authors>
<title>Unstructed Information Management Architecture (UIMA) SDK Users Guide and Reference.</title>
<date>2005</date>
<contexts>
<context position="5180" citStr="IBM, 2005" startWordPosition="750" endWordPosition="751">little research has targeted on-demand retrieval from huge texts. One difficulty is that IE techniques such as pattern matching and machine learning require heavier processing in order to be applied on the fly. Another difficulty is that target information must be formalized beforehand and each system is designed for a specific task. For instance, an IE system for protein-protein interactions is not useful for finding gene-disease associations. Apart from IE research, enrichment of texts with various annotations has been proposed and is becoming a new research area for information management (IBM, 2005; TEI, 2004). The present study basically examines this new direction in research. The significant contribution of the present paper, however, is to provide the first empirical results of this framework for a real task with a huge textbase. 2 Background: Resources and Tools for Semantic Annotations The proposed system for the retrieval of relational concepts is a product of recent developments in NLP resources and tools. In this section, ontology databases, deep parsers, and search algorithms for structured data are introduced. 2.1 Ontology databases Ontology databases are collections of words</context>
</contexts>
<marker>IBM, 2005</marker>
<rawString>IBM, 2005. Unstructed Information Management Architecture (UIMA) SDK Users Guide and Reference.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Koike</author>
<author>T Takagi</author>
</authors>
<title>Gene/protein/family name recognition in biomedical literature.</title>
<date>2004</date>
<booktitle>In Proc.</booktitle>
<contexts>
<context position="6054" citStr="Koike and Takagi, 2004" startWordPosition="876" endWordPosition="879">nd: Resources and Tools for Semantic Annotations The proposed system for the retrieval of relational concepts is a product of recent developments in NLP resources and tools. In this section, ontology databases, deep parsers, and search algorithms for structured data are introduced. 2.1 Ontology databases Ontology databases are collections of words and phrases in specific domains. Such databases have been constructed extensively for the systematic management of domain knowledge by organizing textual expressions of ontological entities that are detached from actual sentences. For example, GENA (Koike and Takagi, 2004) is a database of genes and gene products that is semi-automatically collected from well-known databases, including HUGO, OMIM, Genatlas, Locuslink, GDB, MGI, FlyBase, WormBase, Figure 1: An output of HPSG parsing Figure 2: A predicate argument structure CYGD, and SGD. Table 1 shows an example of a GENA entry. Symbol and Name denote short forms and nomenclatures of genes, respectively. Species represents the organism species in which this gene is observed. Synonym is a list of synonyms and name variations. Product gives a list of products of this gene, such as proteins coded by this gene. Exte</context>
</contexts>
<marker>Koike, Takagi, 2004</marker>
<rawString>A. Koike and T. Takagi. 2004. Gene/protein/family name recognition in biomedical literature. In Proc.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Biolink</author>
</authors>
<date>2004</date>
<pages>916</pages>
<marker>Biolink, 2004</marker>
<rawString>Biolink 2004, pages 916.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D A Lindberg</author>
<author>B L Humphreys</author>
<author>A T McCray</author>
</authors>
<title>The Unified Medical Language System. Methods in Inf.</title>
<date>1993</date>
<journal>Med.,</journal>
<volume>32</volume>
<issue>4</issue>
<contexts>
<context position="6897" citStr="Lindberg et al., 1993" startWordPosition="1009" endWordPosition="1012">2: A predicate argument structure CYGD, and SGD. Table 1 shows an example of a GENA entry. Symbol and Name denote short forms and nomenclatures of genes, respectively. Species represents the organism species in which this gene is observed. Synonym is a list of synonyms and name variations. Product gives a list of products of this gene, such as proteins coded by this gene. External links provides links to other databases, and helps to obtain detailed information from these databases. For biomedical terms other than genes/gene products, the Unified Medical Language System (UMLS) meta-thesaurus (Lindberg et al., 1993) is a large database that contains various names of biomedical and health-related concepts. Ontology databases provide mappings between textual expressions and entities in the real world. For example, Table 1 indicates that CRP, MGC88244, and PTX1 denote the same gene conceptually. Hence, these resources enable us to canonicalize variations of textual expressions of ontological entities. 2.2 Parsing technologies Recently, state-of-the-art CFG parsers (Charniak and Johnson, 2005) can compute phrase structures of natural sentences at fairly high accuracy. These parsers have been used in various </context>
</contexts>
<marker>Lindberg, Humphreys, McCray, 1993</marker>
<rawString>D. A. Lindberg, B. L. Humphreys, and A. T. McCray. 1993. The Unified Medical Language System. Methods in Inf. Med., 32(4):281291.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Masuda</author>
<author>T Ninomiya</author>
<author>Y Miyao</author>
<author>T Ohta</author>
<author>J Tsujii</author>
</authors>
<title>Nested region algebra extended with variables.</title>
<date>2006</date>
<booktitle>In Preparation.</booktitle>
<contexts>
<context position="3830" citStr="Masuda et al., 2006" startWordPosition="546" endWordPosition="549">ion, real-time retrieval is possible because semantic annotations are computed in advance. This framework has been implemented for a text retrieval system for MEDLINE. We first apply a deep parser (Miyao and Tsujii, 2005) and a dictionary-based term recognizer (Tsuruoka and Tsujii, 2004) to MEDLINE and obtain annotations of predicate argument structures and ontological identifiers of genes, gene products, diseases, and events. We then provide a search engine for these annotated sentences. User requests are converted into queries of region algebra (Clarke et al., 1995) extended with variables (Masuda et al., 2006) on these annotations. A search engine for the extended region algebra efficiently finds sentences having semantic annotations that match the input queries. In this paper, we evaluate this system with respect to the retrieval of biomedical correlations 1017 \x0cSymbol CRP Name C-reactive protein, pentraxin-related Species Homo sapiens Synonym MGC88244, PTX1 Product C-reactive protein precursor, C-reactive protein, pentraxin-related protein External links EntrezGene:1401, GDB:119071, .. . Table 1: An example GENA entry and examine the effects of using predicate argument structures and ontologic</context>
<context position="9223" citStr="Masuda et al., 2006" startWordPosition="1363" endWordPosition="1366">cture is universal in various syntactic expressions, such as passivization (e.g., thrombosis is excluded by CRP) and relativization (e.g., thrombosis that CRP excludes). Hence, we can abstract surface variations of sentences and describe relational concepts in a canonicalized form. 2.3 Structural search algorithms Search algorithms for structured texts have been studied extensively, and examples include XML databases with XPath (Clark and DeRose, 1999) and XQuery (Boag et al., 2005), and region algebra (Clarke et al., 1995). The present study focuses on region algebra extended with variables (Masuda et al., 2006) because it provides an efficient search algorithm for tags with cross boundaries. When we annotate texts with various levels of syntactic/semantic structures, cross boundaries are inherently nonnegligible. In fact, as described in Section 3, our system exploits annotations of predicate argument structures and ontological entities, which include substantial cross boundaries. Region algebra is defined as a set of operators on regions, i.e., word sequences. Table 2 shows operators of the extended region algebra, where A and B denote regions, and results of operations are also regions. For exampl</context>
<context position="20036" citStr="Masuda et al. (2006)" startWordPosition="3047" endWordPosition="3050"> id ID in GENA disease id ID in the UMLS meta-thesaurus gene symbol short form of the gene gene name nomenclature of the gene species species that have this gene db site links to external databases Table 6: Tags (upper) and attributes (lower) for semantic annotations 3.2 On-line processing The off-line processing described above results in much simpler on-line processing. User input is converted into queries of the extended region algebra, and the converted queries are entered into a search engine for the extended region algebra. The implementation of a search engine is described in detail in Masuda et al. (2006). Basically, given subject x, object y, and verb v, the system creates the following query: [sentence] &amp;gt;&amp;gt; ([word arg1=&amp;quot;$subject&amp;quot; arg2=&amp;quot;$object&amp;quot; base=&amp;quot;v&amp;quot;] &amp; ([phrase id=&amp;quot;$subject&amp;quot;] &amp;gt; x) &amp; ([phrase id=&amp;quot;$object&amp;quot;] &amp;gt; y)) Ontological identifiers are substituted for x, y, and v, if possible. Nominal keywords, i.e., x and y, are replaced by [entity_name gene_id=&amp;quot;n&amp;quot;] or [entity_name disease_id=&amp;quot;n&amp;quot;], where n is the ontological identifier of x or y. For verbal keywords, base=&amp;quot;v&amp;quot; is replaced by rel_type=&amp;quot;r&amp;quot;, where r is the event type of v. 4 Evaluation Our system is evaluated with respect to speed and acc</context>
</contexts>
<marker>Masuda, Ninomiya, Miyao, Ohta, Tsujii, 2006</marker>
<rawString>K. Masuda, T. Ninomiya, Y. Miyao, T. Ohta, and J. Tsujii. 2006. Nested region algebra extended with variables. In Preparation.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Y Miyao</author>
<author>J Tsujii</author>
</authors>
<title>Probabilistic disambiguation models for wide-coverage HPSG parsing.</title>
<date>2005</date>
<booktitle>In Proc. 43rd ACL,</booktitle>
<pages>8390</pages>
<contexts>
<context position="3431" citStr="Miyao and Tsujii, 2005" startWordPosition="488" endWordPosition="491"> advance with semantic structures and are stored in a structured database. User requests are converted on the fly into patterns of these semantic annotations, and texts are retrieved by matching these patterns with the pre-computed semantic annotations. The accurate retrieval of relational concepts is attained because we can precisely describe relational concepts using semantic annotations. In addition, real-time retrieval is possible because semantic annotations are computed in advance. This framework has been implemented for a text retrieval system for MEDLINE. We first apply a deep parser (Miyao and Tsujii, 2005) and a dictionary-based term recognizer (Tsuruoka and Tsujii, 2004) to MEDLINE and obtain annotations of predicate argument structures and ontological identifiers of genes, gene products, diseases, and events. We then provide a search engine for these annotated sentences. User requests are converted into queries of region algebra (Clarke et al., 1995) extended with variables (Masuda et al., 2006) on these annotations. A search engine for the extended region algebra efficiently finds sentences having semantic annotations that match the input queries. In this paper, we evaluate this system with </context>
<context position="7725" citStr="Miyao and Tsujii, 2005" startWordPosition="1130" endWordPosition="1133">e 1 indicates that CRP, MGC88244, and PTX1 denote the same gene conceptually. Hence, these resources enable us to canonicalize variations of textual expressions of ontological entities. 2.2 Parsing technologies Recently, state-of-the-art CFG parsers (Charniak and Johnson, 2005) can compute phrase structures of natural sentences at fairly high accuracy. These parsers have been used in various NLP tasks including IE and text mining. In addition, parsers that compute deeper analyses, such as predicate argument structures, have become available for 1018 \x0cthe processing of real-world sentences (Miyao and Tsujii, 2005). Predicate argument structures are canonicalized representations of sentence meanings, and express the semantic relations of words explicitly. Figure 1 shows an output of an HPSG parser (Miyao and Tsujii, 2005) for the sentence A normal serum CRP measurement does not exclude deep vein thrombosis. The dotted lines express predicate argument relations. For example, the ARG1 arrow coming from exclude points to the noun phrase A normal serum CRP measurement, which indicates that the subject of exclude is this noun phrase, while such relations are not explicitly represented by phrase structures. P</context>
<context position="13010" citStr="Miyao and Tsujii, 2005" startWordPosition="1991" endWordPosition="1994">val engine for MEDLINE. MEDLINE is an exhaustive database covering nearly 4,500 journals in the life sciences and includes the bibliographies of articles, about half of which have abstracts. Research on IE and text mining in biomedical science has focused mainly on MEDLINE. In the present paper, we target all articles indexed in MEDLINE at the end of 2004 (14,785,094 articles). The following sections explain in detail off-/on-line processing for the text retrieval system for MEDLINE. 3.1 Off-line processing: HPSG parsing and term recognition We first parsed all sentences using an HPSG parser (Miyao and Tsujii, 2005) to obtain their predicate argument structures. Because our target is biomedical texts, we re-trained a parser (Hara et al., 2005) with the GENIA treebank (Tateisi et al., 2005), and also applied a bidirectional part-ofspeech tagger (Tsuruoka and Tsujii, 2005) trained with the GENIA treebank as a preprocessor. Because parsing speed is still unrealistic for parsing the entire MEDLINE on a single machine, we used two geographically separated computer clusters having 170 nodes (340 Xeon CPUs). These clusters are separately administered and not dedicated for use in the present study. In order to e</context>
</contexts>
<marker>Miyao, Tsujii, 2005</marker>
<rawString>Y. Miyao and J. Tsujii. 2005. Probabilistic disambiguation models for wide-coverage HPSG parsing. In Proc. 43rd ACL, pages 8390.</rawString>
</citation>
<citation valid="true">
<title>Fact Sheet MEDLINE.</title>
<date>2005</date>
<institution>National Library of Medicine.</institution>
<note>Available at http://www.nlm.nih. gov/pubs/factsheets/medline.html.</note>
<marker>2005</marker>
<rawString>National Library of Medicine. 2005. Fact Sheet MEDLINE. Available at http://www.nlm.nih. gov/pubs/factsheets/medline.html.</rawString>
</citation>
<citation valid="true">
<authors>
<author>T Ninomiya</author>
<author>Y Tsuruoka</author>
<author>Y Miyao</author>
<author>K Taura</author>
<author>J Tsujii</author>
</authors>
<date>2006</date>
<booktitle>Fast and scalable HPSG parsing. Traitement automatique des langues (TAL),</booktitle>
<volume>46</volume>
<issue>2</issue>
<contexts>
<context position="13903" citStr="Ninomiya et al., 2006" startWordPosition="2137" endWordPosition="2140">th the GENIA treebank as a preprocessor. Because parsing speed is still unrealistic for parsing the entire MEDLINE on a single machine, we used two geographically separated computer clusters having 170 nodes (340 Xeon CPUs). These clusters are separately administered and not dedicated for use in the present study. In order to effectively use such an environment, GXP (Taura, 2004) was used to connect these clusters and distribute the load among them. Our processes were given the lowest priority so that our task would not disturb other users. We finished parsing the entire MEDLINE in nine days (Ninomiya et al., 2006). # entries (genes) 517,773 # entries (gene products) 171,711 # entries (diseases) 148,602 # expanded entries 4,467,855 Table 3: Sizes of ontologies used for term recognition Event type Expressions influence effect, affect, role, response, . .. regulation mediate, regulate, regulation, .. . activation induce, activate, activation, . .. Table 4: Event expression ontology Next, we annotated technical terms, such as genes and diseases, to create mappings to ontological identifiers. A dictionary-based term recognition algorithm (Tsuruoka and Tsujii, 2004) was applied for this task. First, an expan</context>
</contexts>
<marker>Ninomiya, Tsuruoka, Miyao, Taura, Tsujii, 2006</marker>
<rawString>T. Ninomiya, Y. Tsuruoka, Y. Miyao, K. Taura, and J. Tsujii. 2006. Fast and scalable HPSG parsing. Traitement automatique des langues (TAL), 46(2).</rawString>
</citation>
<citation valid="true">
<authors>
<author>Y Tateisi</author>
<author>A Yakushiji</author>
<author>T Ohta</author>
<author>J Tsujii</author>
</authors>
<title>Syntax annotation for the GENIA corpus.</title>
<date>2005</date>
<booktitle>In Proc.</booktitle>
<contexts>
<context position="13187" citStr="Tateisi et al., 2005" startWordPosition="2020" endWordPosition="2023"> abstracts. Research on IE and text mining in biomedical science has focused mainly on MEDLINE. In the present paper, we target all articles indexed in MEDLINE at the end of 2004 (14,785,094 articles). The following sections explain in detail off-/on-line processing for the text retrieval system for MEDLINE. 3.1 Off-line processing: HPSG parsing and term recognition We first parsed all sentences using an HPSG parser (Miyao and Tsujii, 2005) to obtain their predicate argument structures. Because our target is biomedical texts, we re-trained a parser (Hara et al., 2005) with the GENIA treebank (Tateisi et al., 2005), and also applied a bidirectional part-ofspeech tagger (Tsuruoka and Tsujii, 2005) trained with the GENIA treebank as a preprocessor. Because parsing speed is still unrealistic for parsing the entire MEDLINE on a single machine, we used two geographically separated computer clusters having 170 nodes (340 Xeon CPUs). These clusters are separately administered and not dedicated for use in the present study. In order to effectively use such an environment, GXP (Taura, 2004) was used to connect these clusters and distribute the load among them. Our processes were given the lowest priority so that</context>
</contexts>
<marker>Tateisi, Yakushiji, Ohta, Tsujii, 2005</marker>
<rawString>Y. Tateisi, A. Yakushiji, T. Ohta, and J. Tsujii. 2005. Syntax annotation for the GENIA corpus. In Proc.</rawString>
</citation>
<citation valid="true">
<authors>
<author>IJCNLP</author>
</authors>
<date>2005</date>
<journal>Companion</journal>
<volume>volume,</volume>
<pages>222227</pages>
<marker>IJCNLP, 2005</marker>
<rawString>IJCNLP 2005, Companion volume, pages 222227.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Taura</author>
</authors>
<title>GXP : An interactive shell for the grid environment.</title>
<date>2004</date>
<booktitle>In Proc. IWIA2004,</booktitle>
<pages>5967</pages>
<contexts>
<context position="13663" citStr="Taura, 2004" startWordPosition="2097" endWordPosition="2098">tures. Because our target is biomedical texts, we re-trained a parser (Hara et al., 2005) with the GENIA treebank (Tateisi et al., 2005), and also applied a bidirectional part-ofspeech tagger (Tsuruoka and Tsujii, 2005) trained with the GENIA treebank as a preprocessor. Because parsing speed is still unrealistic for parsing the entire MEDLINE on a single machine, we used two geographically separated computer clusters having 170 nodes (340 Xeon CPUs). These clusters are separately administered and not dedicated for use in the present study. In order to effectively use such an environment, GXP (Taura, 2004) was used to connect these clusters and distribute the load among them. Our processes were given the lowest priority so that our task would not disturb other users. We finished parsing the entire MEDLINE in nine days (Ninomiya et al., 2006). # entries (genes) 517,773 # entries (gene products) 171,711 # entries (diseases) 148,602 # expanded entries 4,467,855 Table 3: Sizes of ontologies used for term recognition Event type Expressions influence effect, affect, role, response, . .. regulation mediate, regulate, regulation, .. . activation induce, activate, activation, . .. Table 4: Event express</context>
</contexts>
<marker>Taura, 2004</marker>
<rawString>K. Taura. 2004. GXP : An interactive shell for the grid environment. In Proc. IWIA2004, pages 5967.</rawString>
</citation>
<citation valid="true">
<authors>
<author>TEI Consortium</author>
</authors>
<title>Text Encoding Initiative.</title>
<date>2004</date>
<marker>Consortium, 2004</marker>
<rawString>TEI Consortium, 2004. Text Encoding Initiative.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Y Tsuruoka</author>
<author>J Tsujii</author>
</authors>
<title>Improving the performance of dictionary-based approaches in protein name recognition.</title>
<date>2004</date>
<journal>Journal of Biomedical Informatics,</journal>
<volume>37</volume>
<issue>6</issue>
<contexts>
<context position="3498" citStr="Tsuruoka and Tsujii, 2004" startWordPosition="497" endWordPosition="500"> database. User requests are converted on the fly into patterns of these semantic annotations, and texts are retrieved by matching these patterns with the pre-computed semantic annotations. The accurate retrieval of relational concepts is attained because we can precisely describe relational concepts using semantic annotations. In addition, real-time retrieval is possible because semantic annotations are computed in advance. This framework has been implemented for a text retrieval system for MEDLINE. We first apply a deep parser (Miyao and Tsujii, 2005) and a dictionary-based term recognizer (Tsuruoka and Tsujii, 2004) to MEDLINE and obtain annotations of predicate argument structures and ontological identifiers of genes, gene products, diseases, and events. We then provide a search engine for these annotated sentences. User requests are converted into queries of region algebra (Clarke et al., 1995) extended with variables (Masuda et al., 2006) on these annotations. A search engine for the extended region algebra efficiently finds sentences having semantic annotations that match the input queries. In this paper, we evaluate this system with respect to the retrieval of biomedical correlations 1017 \x0cSymbol</context>
<context position="14460" citStr="Tsuruoka and Tsujii, 2004" startWordPosition="2218" endWordPosition="2221">ished parsing the entire MEDLINE in nine days (Ninomiya et al., 2006). # entries (genes) 517,773 # entries (gene products) 171,711 # entries (diseases) 148,602 # expanded entries 4,467,855 Table 3: Sizes of ontologies used for term recognition Event type Expressions influence effect, affect, role, response, . .. regulation mediate, regulate, regulation, .. . activation induce, activate, activation, . .. Table 4: Event expression ontology Next, we annotated technical terms, such as genes and diseases, to create mappings to ontological identifiers. A dictionary-based term recognition algorithm (Tsuruoka and Tsujii, 2004) was applied for this task. First, an expanded term list was created by generating name variations of terms in GENA and the UMLS meta-thesaurus1. Table 3 shows the size of the original database and the number of entries expanded by name variations. Terms in MEDLINE were then identified by the longest matching of entries in this expanded list with words/phrases in MEDLINE. The necessity of ontologies is not limited to nominal expressions. Various verbs are used for expressing events. For example, activation events of proteins can be expressed by activate, enhance, and other event expressions. A</context>
</contexts>
<marker>Tsuruoka, Tsujii, 2004</marker>
<rawString>Y. Tsuruoka and J. Tsujii. 2004. Improving the performance of dictionary-based approaches in protein name recognition. Journal of Biomedical Informatics, 37(6):461470.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Y Tsuruoka</author>
<author>J Tsujii</author>
</authors>
<title>Bidirectional inference with the easiest-first strategy for tagging sequence data.</title>
<date>2005</date>
<booktitle>In Proc. HLT/EMNLP</booktitle>
<pages>467474</pages>
<contexts>
<context position="13270" citStr="Tsuruoka and Tsujii, 2005" startWordPosition="2032" endWordPosition="2035">ainly on MEDLINE. In the present paper, we target all articles indexed in MEDLINE at the end of 2004 (14,785,094 articles). The following sections explain in detail off-/on-line processing for the text retrieval system for MEDLINE. 3.1 Off-line processing: HPSG parsing and term recognition We first parsed all sentences using an HPSG parser (Miyao and Tsujii, 2005) to obtain their predicate argument structures. Because our target is biomedical texts, we re-trained a parser (Hara et al., 2005) with the GENIA treebank (Tateisi et al., 2005), and also applied a bidirectional part-ofspeech tagger (Tsuruoka and Tsujii, 2005) trained with the GENIA treebank as a preprocessor. Because parsing speed is still unrealistic for parsing the entire MEDLINE on a single machine, we used two geographically separated computer clusters having 170 nodes (340 Xeon CPUs). These clusters are separately administered and not dedicated for use in the present study. In order to effectively use such an environment, GXP (Taura, 2004) was used to connect these clusters and distribute the load among them. Our processes were given the lowest priority so that our task would not disturb other users. We finished parsing the entire MEDLINE in </context>
</contexts>
<marker>Tsuruoka, Tsujii, 2005</marker>
<rawString>Y. Tsuruoka and J. Tsujii. 2005. Bidirectional inference with the easiest-first strategy for tagging sequence data. In Proc. HLT/EMNLP 2005, pages 467474.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>